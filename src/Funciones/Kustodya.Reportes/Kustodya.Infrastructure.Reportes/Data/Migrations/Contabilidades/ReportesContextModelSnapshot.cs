// <auto-generated />
using System;
using Kustodya.Infrastructure.Reportes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kustodya.Infrastructure.Reportes.Data.Migrations.Contabilidades
{
    [DbContext(typeof(ReportesContext))]
    partial class ReportesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Reportes")
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kustodya.Core.Reportes.Entities.Reporte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Kustodya.Core.Reportes.Entities.SolicitudDeUso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aprobada")
                        .HasColumnType("bit");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReporteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Solicitado")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReporteId");

                    b.ToTable("UsosReporte");
                });

            modelBuilder.Entity("Kustodya.Core.Reportes.Entities.Reporte", b =>
                {
                    b.OwnsOne("Kustodya.Core.Reportes.Entities.Horario", "Horario", b1 =>
                        {
                            b1.Property<Guid>("ReporteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("FechaFin")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset>("FechaInicio")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("ReporteId");

                            b1.ToTable("Reportes");

                            b1.WithOwner()
                                .HasForeignKey("ReporteId");
                        });
                });

            modelBuilder.Entity("Kustodya.Core.Reportes.Entities.SolicitudDeUso", b =>
                {
                    b.HasOne("Kustodya.Core.Reportes.Entities.Reporte", "Reporte")
                        .WithMany("Solicitudes")
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
