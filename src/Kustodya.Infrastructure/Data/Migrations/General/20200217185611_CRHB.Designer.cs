// <auto-generated />
using System;
using Kustodya.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kustodya.Infrastructure.Data.Migrations
{
    [DbContext(typeof(dbProtektoV1Context))]
    [Migration("20200217185611_CRHB")]
    partial class CRHB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Afiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<bool?>("Pensionado");

                    b.Property<bool?>("PermisoTrabajo");

                    b.Property<int?>("Sexo");

                    b.Property<int?>("TipoAfiliacion");

                    b.HasKey("Id");

                    b.ToTable("Afiliado","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Cie10DiagnosticosConceptos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activo");

                    b.Property<string>("Cie10DiagnosticoConcepto");

                    b.Property<DateTime>("FechaCreacion");

                    b.HasKey("Id");

                    b.ToTable("Cie10DiagnosticosConceptos","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.ConceptoRehabilitacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConceptosId");

                    b.Property<long?>("ConceptosMedicosId");

                    b.Property<long>("ConcetosMedicosId");

                    b.Property<string>("DesPronosticoDesfavorable");

                    b.Property<string>("DesPronosticoDesfavorableAcumulados");

                    b.Property<string>("DesPronosticoFavorable");

                    b.Property<long>("DescripcionSecuelasId");

                    b.Property<string>("DescripcionTratamientos");

                    b.Property<long>("DiagnosticoId");

                    b.Property<bool>("EsFarmacologico");

                    b.Property<bool>("EsFonoaudiologia");

                    b.Property<bool>("EsOtrosTratamientos");

                    b.Property<bool>("EsQuirurgico");

                    b.Property<bool>("EsTerapiaFisica");

                    b.Property<bool>("EsTerapiaOcupaciona");

                    b.Property<long>("EtiologiasId");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<long>("FinalidadTratamientosId");

                    b.Property<long>("MedicosId");

                    b.Property<long>("NotaRemisionesId");

                    b.Property<string>("Origen");

                    b.Property<string>("OtrosTramites");

                    b.Property<int>("PacientesId");

                    b.Property<long>("PlazoCortoId");

                    b.Property<long>("PlazoLargoId");

                    b.Property<bool>("PronosticoDesfavorable");

                    b.Property<bool>("PronosticoDesfavorableAcumulados");

                    b.Property<bool>("PronosticoFavorable");

                    b.Property<long>("PronosticosId");

                    b.Property<long>("RemisionesId");

                    b.Property<string>("ResumenHistoriaClinica");

                    b.Property<int?>("TblDiagnosticosIIddiagnostico");

                    b.Property<int?>("TblPacientesIIdpaciente");

                    b.Property<long>("TipoSecuelasId");

                    b.HasKey("Id");

                    b.HasIndex("ConceptosId");

                    b.HasIndex("ConceptosMedicosId");

                    b.HasIndex("DescripcionSecuelasId");

                    b.HasIndex("EtiologiasId");

                    b.HasIndex("FinalidadTratamientosId");

                    b.HasIndex("NotaRemisionesId");

                    b.HasIndex("PlazoCortoId");

                    b.HasIndex("PlazoLargoId");

                    b.HasIndex("PronosticosId");

                    b.HasIndex("RemisionesId");

                    b.HasIndex("TblDiagnosticosIIddiagnostico");

                    b.HasIndex("TblPacientesIIdpaciente");

                    b.HasIndex("TipoSecuelasId");

                    b.ToTable("ConceptoRehabilitacion","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Conceptos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Concepto");

                    b.HasKey("Id");

                    b.ToTable("Conceptos","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.ConceptosMedicos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConceptoMedico");

                    b.HasKey("Id");

                    b.ToTable("ConceptosMedicos","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.DescripcionSecuelas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("DescripcionSecuelas","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Etiologias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Etiologia");

                    b.HasKey("Id");

                    b.ToTable("Etiologias","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.FinalidadTratamientos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FinalidadTratamiento");

                    b.HasKey("Id");

                    b.ToTable("FinalidadTratamientos","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Incapacidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AfiliadoId");

                    b.Property<DateTime?>("FechaAfiliacion");

                    b.Property<DateTime?>("FechaFin");

                    b.Property<DateTime?>("FechaInicio");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<DateTime?>("FechaRadicacion");

                    b.Property<string>("IpsNit");

                    b.Property<bool?>("Prorroga");

                    b.Property<int?>("Sexo");

                    b.HasKey("Id");

                    b.HasIndex("AfiliadoId");

                    b.ToTable("Incapacidad","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.NotaRemisiones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NotaRemision");

                    b.HasKey("Id");

                    b.ToTable("NotaRemisiones","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.PlazoCorto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Plazo");

                    b.HasKey("Id");

                    b.ToTable("PlazoCorto","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.PlazoLargo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Plazo");

                    b.HasKey("Id");

                    b.ToTable("PlazoLargo","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Pronosticos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pronostico");

                    b.HasKey("Id");

                    b.ToTable("Pronosticos","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Remisiones", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Remision");

                    b.HasKey("Id");

                    b.ToTable("Remisiones","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", b =>
                {
                    b.Property<long>("IIdaccidenteTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAccidenteTrabajo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BInvolucraMedioAmb")
                        .HasColumnName("bInvolucraMedioAmb");

                    b.Property<bool>("BInvolucraPropiedad")
                        .HasColumnName("bInvolucraPropiedad");

                    b.Property<bool>("BInvolucraTrabajador")
                        .HasColumnName("bInvolucraTrabajador");

                    b.Property<bool>("BTrabajadorElementoProtec")
                        .HasColumnName("bTrabajadorElementoProtec");

                    b.Property<bool>("BTrabajadorEntrenamCargo")
                        .HasColumnName("bTrabajadorEntrenamCargo");

                    b.Property<bool>("BTrabajadorLaborHabitual")
                        .HasColumnName("bTrabajadorLaborHabitual");

                    b.Property<bool>("BTrabajadorRecibAtencMed")
                        .HasColumnName("bTrabajadorRecibAtencMed");

                    b.Property<bool>("BTrabajadorinduccionSaludOcup")
                        .HasColumnName("bTrabajadorinduccionSaludOcup");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaEvento")
                        .HasColumnName("dtFechaEvento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInvestigacion")
                        .HasColumnName("dtFechaInvestigacion")
                        .HasColumnType("date");

                    b.Property<long>("IIdactividadEconomica")
                        .HasColumnName("iIDActividadEconomica");

                    b.Property<long>("IIdcargoTrab")
                        .HasColumnName("iIDCargoTrab");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdepstrabajador")
                        .HasColumnName("iIDEPSTrabajador");

                    b.Property<long>("IIdipsantendio")
                        .HasColumnName("iIDIPSAntendio");

                    b.Property<long>("IIdtipoEvento")
                        .HasColumnName("iIDTipoEvento");

                    b.Property<long>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<long>("IIdtipoVinculaciontrab")
                        .HasColumnName("iIDTipoVinculaciontrab");

                    b.Property<long>("IIdtipoVinculador")
                        .HasColumnName("iIDTipoVinculador");

                    b.Property<long>("IIdtrabajador")
                        .HasColumnName("iIDTrabajador");

                    b.Property<long>("IIdubicacionSucEmpleador")
                        .HasColumnName("iIDUbicacionSucEmpleador");

                    b.Property<long>("IIdubicacionTrabajador")
                        .HasColumnName("iIDUbicacionTrabajador");

                    b.Property<long>("IJornada")
                        .HasColumnName("iJornada");

                    b.Property<int>("IOcupacionHabDias")
                        .HasColumnName("iOcupacionHabDias");

                    b.Property<int>("IOcupacionHabMeses")
                        .HasColumnName("iOcupacionHabMeses");

                    b.Property<int>("ISalario")
                        .HasColumnName("iSalario");

                    b.Property<int>("ITiempoTranscurrAntesEvento")
                        .HasColumnName("iTiempoTranscurrAntesEvento");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigoOcupacionHabTrab")
                        .IsRequired()
                        .HasColumnName("tCodigoOcupacionHabTrab")
                        .HasMaxLength(200);

                    b.Property<string>("TDescripcionSuceso")
                        .IsRequired()
                        .HasColumnName("tDescripcionSuceso")
                        .HasMaxLength(4000);

                    b.Property<string>("TJornadaHabitualTrab")
                        .IsRequired()
                        .HasColumnName("tJornadaHabitualTrab")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreEmpresa")
                        .IsRequired()
                        .HasColumnName("tNombreEmpresa")
                        .HasMaxLength(100);

                    b.Property<string>("TNumIdentiTrab")
                        .IsRequired()
                        .HasColumnName("tNumIdentiTrab")
                        .HasMaxLength(100);

                    b.Property<string>("TNumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(100);

                    b.Property<string>("TObservacionesInvestigacion")
                        .HasColumnName("tObservacionesInvestigacion")
                        .HasMaxLength(1000);

                    b.Property<string>("TOcupacionHabitualTrab")
                        .IsRequired()
                        .HasColumnName("tOcupacionHabitualTrab")
                        .HasMaxLength(100);

                    b.Property<string>("TSucursalEmpleador")
                        .IsRequired()
                        .HasColumnName("tSucursalEmpleador")
                        .HasMaxLength(200);

                    b.Property<string>("TSucursalTrabajador")
                        .IsRequired()
                        .HasColumnName("tSucursalTrabajador")
                        .HasMaxLength(100);

                    b.Property<string>("TSucursalTrabajadorDireccion")
                        .IsRequired()
                        .HasColumnName("tSucursalTrabajadorDireccion")
                        .HasMaxLength(500);

                    b.Property<string>("TSucursalTrabajadorFax")
                        .IsRequired()
                        .HasColumnName("tSucursalTrabajadorFax")
                        .HasMaxLength(50);

                    b.Property<string>("TSucursalTrabajadorTelefono")
                        .IsRequired()
                        .HasColumnName("tSucursalTrabajadorTelefono")
                        .HasMaxLength(50);

                    b.Property<string>("TSucursalTrabajadorZona")
                        .IsRequired()
                        .HasColumnName("tSucursalTrabajadorZona")
                        .HasMaxLength(50);

                    b.Property<string>("TTipoIdentificacionTrab")
                        .IsRequired()
                        .HasColumnName("tTipoIdentificacionTrab")
                        .HasMaxLength(100);

                    b.HasKey("IIdaccidenteTrabajo");

                    b.HasIndex("IIdactividadEconomica");

                    b.HasIndex("IIdcargoTrab");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdepstrabajador");

                    b.HasIndex("IIdtipoEvento");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdtipoVinculaciontrab");

                    b.HasIndex("IIdtipoVinculador");

                    b.HasIndex("IIdtrabajador");

                    b.HasIndex("IIdubicacionSucEmpleador");

                    b.HasIndex("IIdubicacionTrabajador");

                    b.HasIndex("IJornada");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblAccidentesTrabajo","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensual", b =>
                {
                    b.Property<long>("IIdactaMensual")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDActaMensual")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BAprobacionActaAnt")
                        .HasColumnName("bAprobacionActaAnt");

                    b.Property<bool>("BVerificacionQuorum")
                        .HasColumnName("bVerificacionQuorum");

                    b.Property<DateTime>("DtFechaActa")
                        .HasColumnName("dtFechaActa")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaProximaReunion")
                        .HasColumnName("dtFechaProximaReunion")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("DtHoraFin")
                        .HasColumnName("dtHoraFin");

                    b.Property<TimeSpan>("DtHoraInicio")
                        .HasColumnName("dtHoraInicio");

                    b.Property<long>("IIdclaseActa")
                        .HasColumnName("iIDClaseActa");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdubicacion")
                        .HasColumnName("iIDUbicacion");

                    b.Property<int>("INumeroActa")
                        .HasColumnName("iNumeroActa");

                    b.Property<long>("ITipoReunion")
                        .HasColumnName("iTipoReunion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TObjetivos")
                        .IsRequired()
                        .HasColumnName("tObjetivos")
                        .HasMaxLength(4000);

                    b.Property<string>("TTemas")
                        .IsRequired()
                        .HasColumnName("tTemas")
                        .HasMaxLength(4000);

                    b.HasKey("IIdactaMensual");

                    b.HasIndex("IIdclaseActa");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdubicacion");

                    b.HasIndex("ITipoReunion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblActaMensual","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualCompromisoActividades", b =>
                {
                    b.Property<long>("IIdactaMensualCompromisoActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDActaMensualCompromisoActividad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdactaMensualCompromiso")
                        .HasColumnName("iIDActaMensualCompromiso");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(1000);

                    b.HasKey("IIdactaMensualCompromisoActividad");

                    b.HasIndex("IIdactaMensualCompromiso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblActaMensualCompromisoActividades","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualCompromisos", b =>
                {
                    b.Property<long>("IIdactaMensualCompromisos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDActaMensualCompromisos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCompromiso")
                        .HasColumnName("dtFechaCompromiso")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaConfirmacion")
                        .HasColumnName("dtFechaConfirmacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInicio")
                        .HasColumnName("dtFechaInicio")
                        .HasColumnType("date");

                    b.Property<long?>("IActaConfirmacion")
                        .HasColumnName("iActaConfirmacion");

                    b.Property<long>("IEstado")
                        .HasColumnName("iEstado");

                    b.Property<long>("IIdactaMensual")
                        .HasColumnName("iIDActaMensual");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioAsignado")
                        .HasColumnName("iUsuarioAsignado");

                    b.Property<int?>("IUsuarioConfirmacion")
                        .HasColumnName("iUsuarioConfirmacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.HasKey("IIdactaMensualCompromisos");

                    b.HasIndex("IActaConfirmacion");

                    b.HasIndex("IEstado");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioAsignado");

                    b.HasIndex("IUsuarioConfirmacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblActaMensualCompromisos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualParticipantes", b =>
                {
                    b.Property<long>("IIdactaMensualParti")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDActaMensualParti")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdactaMensual")
                        .HasColumnName("iIDActaMensual");

                    b.Property<long>("IIdempleado")
                        .HasColumnName("iIDEmpleado");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdactaMensualParti");

                    b.HasIndex("IIdactaMensual");

                    b.HasIndex("IIdempleado");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblActaMensualParticipantes","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActas", b =>
                {
                    b.Property<long>("IIdacta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDActa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaActa")
                        .HasColumnName("dtFechaActa")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdclaseActa")
                        .HasColumnName("iIDClaseActa");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdtipoActa")
                        .HasColumnName("iIDTipoActa");

                    b.Property<int>("INumeroActa")
                        .HasColumnName("iNumeroActa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TContenido")
                        .IsRequired()
                        .HasColumnName("tContenido")
                        .HasColumnType("ntext");

                    b.HasKey("IIdacta");

                    b.HasIndex("IIdclaseActa");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdtipoActa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblActas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActividadEconomica", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TCiiu")
                        .IsRequired()
                        .HasColumnName("tCIIU")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TNombreActividad")
                        .IsRequired()
                        .HasColumnName("tNombreActividad")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblActiv__DC512D721E5F7FD0");

                    b.HasIndex("TCiiu")
                        .IsUnique()
                        .HasName("UQ_tCIIU");

                    b.ToTable("tblActividadEconomica");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAfp", b =>
                {
                    b.Property<long>("IIdafp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAFP")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(10);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.HasKey("IIdafp");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblAFP","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblArls", b =>
                {
                    b.Property<long>("IIdarl")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDARL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(5);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(100);

                    b.HasKey("IIdarl");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblARLs","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAsignacion", b =>
                {
                    b.Property<long>("IIdasignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAsignacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargo")
                        .HasColumnName("iIDCargo");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.HasKey("IIdasignacion");

                    b.HasIndex("IIdcargo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblAsignacion","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtanalisisCausas", b =>
                {
                    b.Property<long>("IIdanalisisCausa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAnalisisCausa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<int>("IIdsubtablaAnalisisCausa")
                        .HasColumnName("iIDSubtablaAnalisisCausa");

                    b.Property<int>("IIdsubtablaTipoAnalisisCausa")
                        .HasColumnName("iIDSubtablaTipoAnalisisCausa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TValorAnalisisCausa")
                        .IsRequired()
                        .HasColumnName("tValorAnalisisCausa")
                        .HasMaxLength(100);

                    b.Property<string>("TValorTipoAnalisisCausa")
                        .IsRequired()
                        .HasColumnName("tValorTipoAnalisisCausa")
                        .HasMaxLength(100);

                    b.HasKey("IIdanalisisCausa");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATAnalisisCausas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtequiposProteccion", b =>
                {
                    b.Property<long>("IIdatequipoProteccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDATEquipoProteccion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdacidenteTrabajo")
                        .HasColumnName("iIDAcidenteTrabajo");

                    b.Property<long>("IIdequipoProteccion")
                        .HasColumnName("iIDEquipoProteccion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdatequipoProteccion");

                    b.HasIndex("IIdacidenteTrabajo");

                    b.HasIndex("IIdequipoProteccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATEquiposProteccion","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtinformacionSuceso", b =>
                {
                    b.Property<long>("IIdinformacionSuceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInformacionSuceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("ICosto")
                        .HasColumnName("iCosto");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<int>("IIdsubtablaTipoDano")
                        .HasColumnName("iIDSubtablaTipoDano");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(200);

                    b.Property<string>("TEntidadNotificada")
                        .IsRequired()
                        .HasColumnName("tEntidadNotificada")
                        .HasMaxLength(100);

                    b.Property<string>("TValorTipoDano")
                        .IsRequired()
                        .HasColumnName("tValorTipoDano")
                        .HasMaxLength(100);

                    b.HasKey("IIdinformacionSuceso");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATInformacionSuceso","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtmedidasAccionesCorrectivas", b =>
                {
                    b.Property<long>("IIdmedidaAccionCorrectiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMedidaAccionCorrectiva")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaEjecucion")
                        .HasColumnName("dtFechaEjecucion")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaSeguimiento")
                        .HasColumnName("dtFechaSeguimiento")
                        .HasColumnType("date");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<int>("IIdsubtablaTipoMedida")
                        .HasColumnName("iIDSubtablaTipoMedida");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TEjecucion")
                        .IsRequired()
                        .HasColumnName("tEjecucion")
                        .HasMaxLength(200);

                    b.Property<string>("TImplementacion")
                        .IsRequired()
                        .HasColumnName("tImplementacion")
                        .HasMaxLength(200);

                    b.Property<string>("TMedidasPlanteadas")
                        .IsRequired()
                        .HasColumnName("tMedidasPlanteadas")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoMedida")
                        .IsRequired()
                        .HasColumnName("tValorTipoMedida")
                        .HasMaxLength(100);

                    b.HasKey("IIdmedidaAccionCorrectiva")
                        .HasName("PK_tblMedidasAccionesCorrectivas");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATMedidasAccionesCorrectivas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtmedidasSeguridad", b =>
                {
                    b.Property<long>("IIdatmedidaSeguridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDATMedidaSeguridad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<int>("IIdsubtablaTipoControl")
                        .HasColumnName("iIDSubtablaTipoControl");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TMedidaSeguridad")
                        .IsRequired()
                        .HasColumnName("tMedidaSeguridad")
                        .HasMaxLength(300);

                    b.Property<string>("TValorTipoControl")
                        .IsRequired()
                        .HasColumnName("tValorTipoControl")
                        .HasMaxLength(100);

                    b.HasKey("IIdatmedidaSeguridad");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATMedidasSeguridad","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtpartesAfectadas", b =>
                {
                    b.Property<long>("IIdatparteAfectada")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDATParteAfectada")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<long>("IIdparteCuerpo")
                        .HasColumnName("iIDParteCuerpo");

                    b.Property<int>("IIdsubtablaAgenteLesion")
                        .HasColumnName("iIDSubtablaAgenteLesion");

                    b.Property<int>("IIdsubtablaCostadoCuerpo")
                        .HasColumnName("iIDSubtablaCostadoCuerpo");

                    b.Property<int>("IIdsubtablaMecanismoLesion")
                        .HasColumnName("iIDSubtablaMecanismoLesion");

                    b.Property<int>("IIdsubtablaTipoLesion")
                        .HasColumnName("iIDSubtablaTipoLesion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TIdvalorCostadoCuerpo")
                        .HasColumnName("tIDValorCostadoCuerpo")
                        .HasMaxLength(100);

                    b.Property<string>("TValorAgenteLesion")
                        .IsRequired()
                        .HasColumnName("tValorAgenteLesion")
                        .HasMaxLength(100);

                    b.Property<string>("TValorMecanismoLesion")
                        .IsRequired()
                        .HasColumnName("tValorMecanismoLesion")
                        .HasMaxLength(100);

                    b.Property<string>("TValorTipoLesion")
                        .IsRequired()
                        .HasColumnName("tValorTipoLesion")
                        .HasMaxLength(100);

                    b.HasKey("IIdatparteAfectada");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IIdparteCuerpo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATPartesAfectadas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtpersonas", b =>
                {
                    b.Property<long>("IIdpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPersona")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BLicenciaSo")
                        .HasColumnName("bLicenciaSO");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdaccidenteTrabajo")
                        .HasColumnName("iIDAccidenteTrabajo");

                    b.Property<int>("IIdsubtablaTipoPersona")
                        .HasColumnName("iIDSubtablaTipoPersona");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCargo")
                        .IsRequired()
                        .HasColumnName("tCargo")
                        .HasMaxLength(150);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(150);

                    b.Property<string>("TNumeroLicSo")
                        .HasColumnName("tNumeroLicSO")
                        .HasMaxLength(50);

                    b.Property<string>("TValorTipoPersona")
                        .IsRequired()
                        .HasColumnName("tValorTipoPersona")
                        .HasMaxLength(100);

                    b.HasKey("IIdpersona");

                    b.HasIndex("IIdaccidenteTrabajo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblATPersonas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAuditoria", b =>
                {
                    b.Property<long>("IIdauditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAuditoria")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(1000);

                    b.Property<string>("TFormulario")
                        .IsRequired()
                        .HasColumnName("tFormulario")
                        .HasMaxLength(500);

                    b.Property<string>("TUsuarioInsercion")
                        .IsRequired()
                        .HasColumnName("tUsuarioInsercion")
                        .HasMaxLength(50);

                    b.HasKey("IIdauditoria");

                    b.ToTable("tblAuditoria","auditoria");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoHorasHombreTrabajadas", b =>
                {
                    b.Property<long>("IIdhorasHombreTrabajadas")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDHorasHombreTrabajadas")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumDiasTrabajados")
                        .HasColumnName("iNumDiasTrabajados");

                    b.Property<int?>("INumEmpleados")
                        .HasColumnName("iNumEmpleados");

                    b.Property<int?>("INumHorasTrabajadas")
                        .HasColumnName("iNumHorasTrabajadas");

                    b.Property<int?>("INumTotalHorasAusentismo")
                        .HasColumnName("iNumTotalHorasAusentismo");

                    b.Property<int?>("INumTotalHorasExtras")
                        .HasColumnName("iNumTotalHorasExtras");

                    b.Property<int?>("INumTrabajadores")
                        .HasColumnName("iNumTrabajadores");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.HasKey("IIdhorasHombreTrabajadas");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoHorasHombreTrabajadas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndicadoresInfraestructura", b =>
                {
                    b.Property<long>("IIdindicadorInfraestructura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndicadorInfraestructura")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumHorasDisponibles")
                        .HasColumnName("iNumHorasDisponibles");

                    b.Property<int?>("IRecursosFinancieros")
                        .HasColumnName("iRecursosFinancieros");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdindicadorInfraestructura")
                        .HasName("PK_tblIndicadoresInfraestructura");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoIndicadoresInfraestructura","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndicadoresProceso", b =>
                {
                    b.Property<long>("IIdindicadorProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndicadorProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumUsuariosChequeoMedico")
                        .HasColumnName("iNumUsuariosChequeoMedico");

                    b.Property<int?>("INumUsuariosEquipoProtPersonal")
                        .HasColumnName("iNumUsuariosEquipoProtPersonal");

                    b.Property<int?>("INumUsuariosPrimAuxilios")
                        .HasColumnName("iNumUsuariosPrimAuxilios");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdindicadorProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoIndicadoresProceso","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndiceAccidentalidad", b =>
                {
                    b.Property<long>("IIdindiceAccidentalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndiceAccidentalidad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumCasos")
                        .HasColumnName("iNumCasos");

                    b.Property<int?>("INumDiasCargados")
                        .HasColumnName("iNumDiasCargados");

                    b.Property<int?>("INumDiasPerdidos")
                        .HasColumnName("iNumDiasPerdidos");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdindiceAccidentalidad");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoIndiceAccidentalidad","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndiceEnfermedadProfesional", b =>
                {
                    b.Property<long>("IIdindiceEnfProfesional")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndiceEnfProfesional")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumCasos")
                        .HasColumnName("iNumCasos");

                    b.Property<int?>("INumDias")
                        .HasColumnName("iNumDias");

                    b.Property<int?>("INumDiasCargados")
                        .HasColumnName("iNumDiasCargados");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdindiceEnfProfesional");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoIndiceEnfermedadProfesional","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoPrevalenciaIncidencia", b =>
                {
                    b.Property<long>("IIdprevalenciaIncidenciaAusentismo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPrevalenciaIncidenciaAusentismo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int?>("INumCasosPrevalencia")
                        .HasColumnName("iNumCasosPrevalencia");

                    b.Property<int?>("INumEpisodiosNuevos")
                        .HasColumnName("iNumEpisodiosNuevos");

                    b.Property<int?>("INumHorasPerdidas")
                        .HasColumnName("iNumHorasPerdidas");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<long>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.Property<string>("TMes")
                        .IsRequired()
                        .HasColumnName("tMes")
                        .HasMaxLength(50);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdprevalenciaIncidenciaAusentismo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.HasIndex("IVigencia");

                    b.ToTable("tblAusentismoPrevalenciaIncidencia","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAyudas", b =>
                {
                    b.Property<long>("IIdayuda")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAyuda")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TFuncionalidad")
                        .IsRequired()
                        .HasColumnName("tFuncionalidad")
                        .HasColumnType("ntext");

                    b.Property<string>("TObjetivo")
                        .IsRequired()
                        .HasColumnName("tObjetivo")
                        .HasColumnType("ntext");

                    b.Property<string>("TUrl")
                        .IsRequired()
                        .HasColumnName("tUrl")
                        .HasMaxLength(100);

                    b.HasKey("IIdayuda");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblAyudas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblBlobs", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(225);

                    b.Property<string>("Creator")
                        .HasMaxLength(100);

                    b.Property<int>("FileType");

                    b.Property<string>("MimeType")
                        .HasMaxLength(50);

                    b.Property<string>("OriginalName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Year")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FileType");

                    b.ToTable("tblBlobs","files");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCajasCompensacion", b =>
                {
                    b.Property<long>("IIdcajaCompensacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCajaCompensacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(10);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.HasKey("IIdcajaCompensacion");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblCajasCompensacion","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfil", b =>
                {
                    b.Property<long>("IIdcargoPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfil")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BEstudioSeguridad")
                        .HasColumnName("bEstudioSeguridad");

                    b.Property<bool>("BVisitaDomiciliaria")
                        .HasColumnName("bVisitaDomiciliaria");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnName("dtFechaActualizacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IEdadDesde")
                        .HasColumnName("iEdadDesde");

                    b.Property<int>("IEdadHasta")
                        .HasColumnName("iEdadHasta");

                    b.Property<int>("IExperienciaAños")
                        .HasColumnName("iExperienciaAños");

                    b.Property<long?>("IGenero")
                        .HasColumnName("iGenero");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdcargo")
                        .HasColumnName("iIDCargo");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfil");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdcargo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfil","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilCompetenciasCorporativas", b =>
                {
                    b.Property<long>("IIdperfilCargoCompetenciasCorp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilCargoCompetenciasCorp")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("ICompetenciaCorporativa")
                        .HasColumnName("iCompetenciaCorporativa");

                    b.Property<long>("IIdperfilCargo")
                        .HasColumnName("iIDPerfilCargo");

                    b.Property<long>("INivelRequerido")
                        .HasColumnName("iNivelRequerido");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TObservaciones")
                        .IsRequired()
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdperfilCargoCompetenciasCorp");

                    b.HasIndex("ICompetenciaCorporativa");

                    b.HasIndex("IIdperfilCargo");

                    b.HasIndex("INivelRequerido");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilCompetenciasCorporativas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilCompetenciasFuncionales", b =>
                {
                    b.Property<long>("IIdcargoPerfilCompetenciasFunc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilCompetenciasFunc")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("ICompetenciaFuncional")
                        .HasColumnName("iCompetenciaFuncional");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("INivelRequerido")
                        .HasColumnName("iNivelRequerido");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TObservaciones")
                        .IsRequired()
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdcargoPerfilCompetenciasFunc");

                    b.HasIndex("ICompetenciaFuncional");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("INivelRequerido");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilCompetenciasFuncionales","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilFuncionesAmbientales", b =>
                {
                    b.Property<long>("IIdcargoPerfilFuncionAmbi")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilFuncionAmbi")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IFuncionAmbiental")
                        .HasColumnName("iFuncionAmbiental");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IPeriodicidad")
                        .HasColumnName("iPeriodicidad");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfilFuncionAmbi");

                    b.HasIndex("IFuncionAmbiental");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IPeriodicidad");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilFuncionesAmbientales","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilFuncionesSst", b =>
                {
                    b.Property<long>("IIdcargoPerfilFuncionesSst")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilFuncionesSST")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IPeriodicidad")
                        .HasColumnName("iPeriodicidad");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TFuncionSst")
                        .IsRequired()
                        .HasColumnName("tFuncionSST")
                        .HasMaxLength(500);

                    b.HasKey("IIdcargoPerfilFuncionesSst");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IPeriodicidad");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilFuncionesSST","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilIdiomas", b =>
                {
                    b.Property<long>("IIdcargoPerfilIdiomas")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilIdiomas")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IIdioma")
                        .HasColumnName("iIdioma");

                    b.Property<long>("INivelConversacion")
                        .HasColumnName("iNivelConversacion");

                    b.Property<long>("INivelEscritura")
                        .HasColumnName("iNivelEscritura");

                    b.Property<long>("INivelLectura")
                        .HasColumnName("iNivelLectura");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfilIdiomas");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IIdioma");

                    b.HasIndex("INivelConversacion");

                    b.HasIndex("INivelEscritura");

                    b.HasIndex("INivelLectura");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilIdiomas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilNivelAcademico", b =>
                {
                    b.Property<long>("IIdcargoPerfilNivAcad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilNivAcad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("ICarrera")
                        .HasColumnName("iCarrera");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IIdnivelAcademico")
                        .HasColumnName("iIDNivelAcademico");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfilNivAcad");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IIdnivelAcademico");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilNivelAcademico","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilNivelAutoridad", b =>
                {
                    b.Property<long>("IIdcargoPerfilNivelAutoridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilNivelAutoridad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("INivelAutoridad")
                        .HasColumnName("iNivelAutoridad");

                    b.Property<long>("IRendicionCuentas")
                        .HasColumnName("iRendicionCuentas");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfilNivelAutoridad");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("INivelAutoridad");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilNivelAutoridad","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilObjetivos", b =>
                {
                    b.Property<long>("IIdcargoPerfilObj")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilObj")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TObjetivoCargo")
                        .IsRequired()
                        .HasColumnName("tObjetivoCargo")
                        .HasMaxLength(500);

                    b.HasKey("IIdcargoPerfilObj");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilObjetivos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilResponsabilidadSst", b =>
                {
                    b.Property<long>("IIdcargoPerfilResponSst")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilResponSST")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IPeriodicidad")
                        .HasColumnName("iPeriodicidad");

                    b.Property<long>("IResponsabilidad")
                        .HasColumnName("iResponsabilidad");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdcargoPerfilResponSst");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IPeriodicidad");

                    b.HasIndex("IResponsabilidad");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilResponsabilidadSST","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilResponsabilidades", b =>
                {
                    b.Property<long>("IIdcargoPerfilResponsabilidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargoPerfilResponsabilidades")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BResponsabilidad")
                        .HasColumnName("bResponsabilidad");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargoPerfil")
                        .HasColumnName("iIDCargoPerfil");

                    b.Property<long>("IResponsabilidad")
                        .HasColumnName("iResponsabilidad");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TAclaracion")
                        .IsRequired()
                        .HasColumnName("tAclaracion")
                        .HasMaxLength(500);

                    b.HasKey("IIdcargoPerfilResponsabilidades");

                    b.HasIndex("IIdcargoPerfil");

                    b.HasIndex("IResponsabilidad");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblCargoPerfilResponsabilidades","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargos", b =>
                {
                    b.Property<long>("IIdcargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCargo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BRepresentanteLegal")
                        .HasColumnName("bRepresentanteLegal");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtUsuarioModificacion")
                        .HasColumnName("dtUsuarioModificacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long?>("IIdjefe")
                        .HasColumnName("iIDJefe");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.Property<string>("TNombreCargo")
                        .IsRequired()
                        .HasColumnName("tNombreCargo")
                        .HasMaxLength(50);

                    b.HasKey("IIdcargo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdusuarioCreador");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblCargos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie", b =>
                {
                    b.Property<decimal>("IdCie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Actualizacion")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<bool?>("Asterisco");

                    b.Property<string>("Clave")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool?>("Fetal");

                    b.Property<decimal?>("LimiteInferiorEscala")
                        .HasColumnName("Limite_Inferior_Escala")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("LimiteInferiorTiempo")
                        .HasColumnName("Limite_Inferior_Tiempo")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("LimiteSuperiorEscala")
                        .HasColumnName("Limite_Superior_Escala")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("LimiteSuperiorTiempo")
                        .HasColumnName("Limite_Superior_Tiempo")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Lista1")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Lista2")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Lista3")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Lista4")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("ListaBecker")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("ListaCpu")
                        .HasColumnName("ListaCPU")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("ListaCsemm")
                        .HasColumnName("ListaCSEMM")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("ListaGbd")
                        .HasColumnName("ListaGBD")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("ListaOps")
                        .HasColumnName("ListaOPS")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Modificacion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("NoDefuncion")
                        .HasColumnName("No_Defuncion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal?>("OpcionA")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("OpcionB")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("OpcionC")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Sexo")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<bool?>("Trivial");

                    b.HasKey("IdCie");

                    b.HasIndex("Lista1");

                    b.HasIndex("Lista2");

                    b.HasIndex("Lista3");

                    b.HasIndex("Lista4");

                    b.HasIndex("ListaBecker");

                    b.HasIndex("ListaCpu");

                    b.HasIndex("ListaCsemm");

                    b.HasIndex("ListaGbd");

                    b.HasIndex("ListaOps");

                    b.ToTable("tblCIE");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie10", b =>
                {
                    b.Property<int>("IIdcie10")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCIE10")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDiasMaxAcumulados")
                        .HasColumnName("iDiasMaxAcumulados");

                    b.Property<int>("IDiasMaxConsulta")
                        .HasColumnName("iDiasMaxConsulta");

                    b.Property<long?>("IIdsexo")
                        .HasColumnName("iIDSexo");

                    b.Property<int?>("IIdtipoCie")
                        .HasColumnName("iIDTipoCie");

                    b.Property<string>("TCapitulo")
                        .IsRequired()
                        .HasColumnName("tCapitulo")
                        .HasMaxLength(50);

                    b.Property<string>("TCaracter")
                        .IsRequired()
                        .HasColumnName("tCaracter")
                        .HasMaxLength(50);

                    b.Property<string>("TCategoria")
                        .IsRequired()
                        .HasColumnName("tCategoria")
                        .HasMaxLength(50);

                    b.Property<string>("TCie")
                        .IsRequired()
                        .HasColumnName("tCIE")
                        .HasMaxLength(50);

                    b.Property<string>("TCie10")
                        .IsRequired()
                        .HasColumnName("tCIE10")
                        .HasMaxLength(50);

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.Property<string>("TTituloCapitulo")
                        .IsRequired()
                        .HasColumnName("tTituloCapitulo")
                        .HasMaxLength(500);

                    b.HasKey("IIdcie10");

                    b.HasIndex("IIdsexo");

                    b.HasIndex("IIdtipoCie");

                    b.ToTable("tblCIE10","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie10DiagnosticoIncapacidad", b =>
                {
                    b.Property<long>("IIdcie10DiagnosticoIncapacidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCie10DiagnosticoIncapacidad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IIdcie10")
                        .HasColumnName("iIDCIE10");

                    b.Property<long>("IIddiagnosticoIncapacidad")
                        .HasColumnName("iIDDiagnosticoIncapacidad");

                    b.HasKey("IIdcie10DiagnosticoIncapacidad");

                    b.HasIndex("IIdcie10");

                    b.HasIndex("IIddiagnosticoIncapacidad");

                    b.ToTable("tblCie10DiagnosticoIncapacidad","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCiedetalle", b =>
                {
                    b.Property<decimal>("IdCieDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("IdCie")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("IdCieDetalle");

                    b.HasIndex("IdCie");

                    b.ToTable("tblCIEDetalle");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCiiu", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clase")
                        .HasMaxLength(255);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500);

                    b.Property<string>("Division")
                        .HasMaxLength(255);

                    b.Property<bool?>("EsClase");

                    b.Property<bool?>("EsDivision");

                    b.Property<bool?>("EsGrupo");

                    b.Property<bool?>("EsSeccion");

                    b.Property<string>("Grupo")
                        .HasMaxLength(255);

                    b.Property<string>("Seccion")
                        .HasMaxLength(255);

                    b.HasKey("IId")
                        .HasName("PK_tblCIUU");

                    b.ToTable("tblCIIU");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCiuo08", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BEsCategoria")
                        .HasColumnName("bEsCategoria");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<short?>("ICategoria")
                        .HasColumnName("iCategoria");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("TIdentificador")
                        .IsRequired()
                        .HasColumnName("tIdentificador")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("IId");

                    b.ToTable("tblCIUO08");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblClasificacionRiesgos", b =>
                {
                    b.Property<long>("IIdclasificacionRiesgo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDClasificacionRiesgo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<int>("IIdriesgo")
                        .HasColumnName("iIDRiesgo");

                    b.Property<int>("IIdtipoRiesgo")
                        .HasColumnName("iIDTipoRiesgo");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TNombreArea")
                        .IsRequired()
                        .HasColumnName("tNombreArea")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreRiesgo")
                        .IsRequired()
                        .HasColumnName("tNombreRiesgo")
                        .HasMaxLength(200);

                    b.Property<string>("TRiesgo")
                        .IsRequired()
                        .HasColumnName("tRiesgo")
                        .HasMaxLength(200);

                    b.HasKey("IIdclasificacionRiesgo");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblClasificacionRiesgos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCodigosCorrelacion", b =>
                {
                    b.Property<int>("IIdcodigoCorrelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCodigoCorrelacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IIdcie10")
                        .HasColumnName("iIDCIE10");

                    b.Property<string>("TCodigoCorrelacion")
                        .IsRequired()
                        .HasColumnName("tCodigoCorrelacion")
                        .HasMaxLength(10);

                    b.HasKey("IIdcodigoCorrelacion");

                    b.HasIndex("IIdcie10");

                    b.ToTable("tblCodigosCorrelacion","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblConceptoRehabilitacion", b =>
                {
                    b.Property<int>("IIdConceptoRehabilitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIdConceptoRehabilitacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionOtrosTratamientos")
                        .HasMaxLength(4000);

                    b.Property<bool?>("EsFarmacologico");

                    b.Property<bool?>("EsFonoaudiologia");

                    b.Property<bool?>("EsOtrosTratamientos");

                    b.Property<bool?>("EsQuirurgico");

                    b.Property<bool?>("EsTerapiaFisica");

                    b.Property<bool?>("EsTerapiaOcupaciona");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdconcepto")
                        .HasColumnName("iIDConcepto");

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<long>("IIdfinalidadTratamiento")
                        .HasColumnName("iIDFinalidadTratamiento");

                    b.Property<long>("IIdmedico")
                        .HasColumnName("iIDMedico");

                    b.Property<int>("IIdpaciente")
                        .HasColumnName("iIDPaciente");

                    b.Property<long>("IIdplazoCorto")
                        .HasColumnName("iIDPlazoCorto");

                    b.Property<long>("IIdplazoLargo")
                        .HasColumnName("iIDPlazoLargo");

                    b.Property<long>("IIdpronostico")
                        .HasColumnName("iIDPronostico");

                    b.Property<long>("IIdremision")
                        .HasColumnName("iIDRemision");

                    b.Property<long>("IIdsecuela")
                        .HasColumnName("iIDSecuela");

                    b.HasKey("IIdConceptoRehabilitacion");

                    b.HasIndex("IIdmedico");

                    b.ToTable("tblConceptoRehabilitacion","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCorredores", b =>
                {
                    b.Property<int>("IIdcorredor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCorredor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(10);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(400);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.HasKey("IIdcorredor");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblCorredores","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDashBoard", b =>
                {
                    b.Property<int>("IIdperfil")
                        .HasColumnName("iIDPerfil");

                    b.Property<long>("IIdtipoTarea")
                        .HasColumnName("iIDTipoTarea");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.HasKey("IIdperfil", "IIdtipoTarea");

                    b.HasIndex("IIdtipoTarea");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblDashBoard","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticoCondicionTrabajo", b =>
                {
                    b.Property<long>("IIdcondicionTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCondicionTrabajo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaDiagnostico")
                        .HasColumnName("dtFechaDiagnostico")
                        .HasColumnType("date");

                    b.Property<long>("IActividades")
                        .HasColumnName("iActividades");

                    b.Property<long>("ICargo")
                        .HasColumnName("iCargo");

                    b.Property<long>("IControlAdministrativo")
                        .HasColumnName("iControlAdministrativo");

                    b.Property<int>("IControlFuente")
                        .HasColumnName("iControlFuente");

                    b.Property<int>("IControlIndividuo")
                        .HasColumnName("iControlIndividuo");

                    b.Property<long>("IControlIngenieria")
                        .HasColumnName("iControlIngenieria");

                    b.Property<int>("IControlMedio")
                        .HasColumnName("iControlMedio");

                    b.Property<long>("IElementosProteccion")
                        .HasColumnName("iElementosProteccion");

                    b.Property<int>("IEvaluacionDeficiencia")
                        .HasColumnName("iEvaluacionDeficiencia");

                    b.Property<int>("IEvaluacionExposicion")
                        .HasColumnName("iEvaluacionExposicion");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("INivelConsecuencia")
                        .HasColumnName("iNivelConsecuencia");

                    b.Property<int>("INivelRiesgo")
                        .HasColumnName("iNivelRiesgo");

                    b.Property<int>("INumeroExpuestos")
                        .HasColumnName("iNumeroExpuestos");

                    b.Property<int>("IPeligrosCalificacion")
                        .HasColumnName("iPeligrosCalificacion");

                    b.Property<int>("IPeligrosDescripcion")
                        .HasColumnName("iPeligrosDescripcion");

                    b.Property<long>("IProceso")
                        .HasColumnName("iProceso");

                    b.Property<long>("IRequisitoLegal")
                        .HasColumnName("iRequisitoLegal");

                    b.Property<bool>("IRutinarias")
                        .HasColumnName("iRutinarias");

                    b.Property<long>("ISucursal")
                        .HasColumnName("iSucursal");

                    b.Property<long>("ITareas")
                        .HasColumnName("iTareas");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TAceptabilidadRiesgo")
                        .IsRequired()
                        .HasColumnName("tAceptabilidadRiesgo")
                        .HasMaxLength(50);

                    b.Property<string>("TEliminacion")
                        .IsRequired()
                        .HasColumnName("tEliminacion")
                        .HasMaxLength(1000);

                    b.Property<string>("TInterpretacionNivelRiesgo")
                        .IsRequired()
                        .HasColumnName("tInterpretacionNivelRiesgo")
                        .HasMaxLength(1000);

                    b.Property<string>("TInterpretacionProbabilidad")
                        .IsRequired()
                        .HasColumnName("tInterpretacionProbabilidad")
                        .HasMaxLength(1000);

                    b.Property<string>("TNivelProbabilidad")
                        .IsRequired()
                        .HasColumnName("tNivelProbabilidad")
                        .HasMaxLength(50);

                    b.Property<string>("TPeorConsecuencia")
                        .IsRequired()
                        .HasColumnName("tPeorConsecuencia")
                        .HasMaxLength(500);

                    b.Property<string>("TSustitucion")
                        .IsRequired()
                        .HasColumnName("tSustitucion")
                        .HasMaxLength(1000);

                    b.HasKey("IIdcondicionTrabajo");

                    b.HasIndex("IActividades");

                    b.HasIndex("ICargo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IRequisitoLegal");

                    b.HasIndex("ISucursal");

                    b.HasIndex("ITareas");

                    b.ToTable("tblDiagnosticoCondicionTrabajo","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticoInicial", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdestandar")
                        .HasColumnName("iIDEstandar");

                    b.Property<int>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<DateTime>("DtFechaDiagnostico")
                        .HasColumnName("dtFechaDiagnostico")
                        .HasColumnType("date");

                    b.Property<string>("TPregunta")
                        .HasColumnName("tPregunta")
                        .HasMaxLength(50);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BCumple")
                        .HasColumnName("bCumple");

                    b.Property<bool>("BNoAplica")
                        .HasColumnName("bNoAplica");

                    b.Property<bool>("BNoCumple")
                        .HasColumnName("bNoCumple");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.HasKey("IIdempresa", "IIdestandar", "IVersion", "DtFechaDiagnostico", "TPregunta")
                        .HasName("PK_tblDiagnosticoInicial_1");

                    b.HasIndex("IIdestandar");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblDiagnosticoInicial","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticos", b =>
                {
                    b.Property<int>("IIddiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDDiagnostico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIddiagnosticoCapitulo")
                        .HasColumnName("iIDDiagnosticoCapitulo");

                    b.Property<int?>("IIddiagnosticoNomenclatura")
                        .HasColumnName("iIDDiagnosticoNomenclatura");

                    b.Property<int?>("IIdpais")
                        .HasColumnName("iIDPais");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TClave")
                        .HasColumnName("tClave")
                        .HasMaxLength(200);

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.HasKey("IIddiagnostico");

                    b.ToTable("tblDiagnosticos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticosCapitulos", b =>
                {
                    b.Property<int>("IIddiagnosticoCapitulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDDiagnosticoCapitulo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IGrupoCapitulo")
                        .HasColumnName("iGrupoCapitulo");

                    b.Property<int?>("IIddiagnosticoNomenclatura")
                        .HasColumnName("iIDDiagnosticoNomenclatura");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigoCapitulo")
                        .HasColumnName("tCodigoCapitulo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreCapitulo")
                        .HasColumnName("tNombreCapitulo")
                        .HasMaxLength(200);

                    b.HasKey("IIddiagnosticoCapitulo");

                    b.ToTable("tblDiagnosticosCapitulos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticosIncapacidades", b =>
                {
                    b.Property<long>("IIddiagnosticoIncapacidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDDiagnosticoIncapacidad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BEsTranscripcion")
                        .HasColumnName("bEsTranscripcion");

                    b.Property<bool>("BProrroga")
                        .HasColumnName("bProrroga");

                    b.Property<bool>("BSoat")
                        .HasColumnName("bSOAT");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaEmisionIncapacidad")
                        .HasColumnName("dtFechaEmisionIncapacidad")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaFin")
                        .HasColumnName("dtFechaFin")
                        .HasColumnType("datetime");

                    b.Property<int?>("IDiasAcumuladosPorroga")
                        .HasColumnName("iDiasAcumuladosPorroga");

                    b.Property<int>("IDiasIncapacidad")
                        .HasColumnName("iDiasIncapacidad");

                    b.Property<long>("IIdafp")
                        .HasColumnName("iIDAFP");

                    b.Property<long>("IIdarl")
                        .HasColumnName("iIDARL");

                    b.Property<long?>("IIddiagnosticoCorrelacion")
                        .HasColumnName("iIDDiagnosticoCorrelacion");

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<long>("IIdips")
                        .HasColumnName("iIDIPS");

                    b.Property<long?>("IIdorigenCalificadoIncapacidad")
                        .HasColumnName("iIDOrigenCalificadoIncapacidad");

                    b.Property<int>("IIdpaciente")
                        .HasColumnName("iIDPaciente");

                    b.Property<long>("IIdpresuntoOrigenIncapacidad")
                        .HasColumnName("iIDPresuntoOrigenIncapacidad");

                    b.Property<long>("IIdtipoAtencion")
                        .HasColumnName("iIDTipoAtencion");

                    b.Property<long>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.Property<string>("NumeroIncapacidadIpstranscripcion")
                        .HasColumnName("NumeroIncapacidadIPSTranscripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TCodigoCorto")
                        .IsRequired()
                        .HasColumnName("tCodigoCorto")
                        .HasMaxLength(50);

                    b.Property<string>("TDescripcionSintomatologica")
                        .HasColumnName("tDescripcionSintomatologica")
                        .IsUnicode(false);

                    b.Property<string>("TLugar")
                        .HasColumnName("tLugar")
                        .HasMaxLength(1000);

                    b.Property<string>("TModo")
                        .HasColumnName("tModo")
                        .HasMaxLength(1000);

                    b.Property<string>("TTiempo")
                        .HasColumnName("tTiempo")
                        .HasMaxLength(1000);

                    b.Property<Guid>("UiCodigoDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uiCodigoDiagnostico")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("IIddiagnosticoIncapacidad")
                        .HasName("PK_tblDiagnosticos_1");

                    b.HasIndex("IIdafp");

                    b.HasIndex("IIdarl");

                    b.HasIndex("IIddiagnosticoCorrelacion");

                    b.HasIndex("IIdeps");

                    b.HasIndex("IIdips");

                    b.HasIndex("IIdorigenCalificadoIncapacidad");

                    b.HasIndex("IIdpaciente");

                    b.HasIndex("IIdpresuntoOrigenIncapacidad");

                    b.HasIndex("IIdtipoAtencion");

                    b.ToTable("tblDiagnosticosIncapacidades","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticosNomenclaturas", b =>
                {
                    b.Property<int>("IIddiagnosticoNomenclatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDDiagnosticoNomenclatura")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TNomenclatura")
                        .HasColumnName("tNomenclatura")
                        .HasMaxLength(200);

                    b.HasKey("IIddiagnosticoNomenclatura")
                        .HasName("PK_tblDiagnosticoNomenclatura");

                    b.ToTable("tblDiagnosticosNomenclaturas","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDivipola", b =>
                {
                    b.Property<long>("Iddivipola")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDDIVIPOLA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<string>("Codigodivipola")
                        .HasColumnName("CODIGODIVIPOLA")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Fechainsercion")
                        .HasColumnName("FECHAINSERCION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fechamodificacion")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Iddepto")
                        .HasColumnName("IDDEPTO")
                        .HasMaxLength(50);

                    b.Property<string>("Idmunicipio")
                        .HasColumnName("IDMUNICIPIO")
                        .HasMaxLength(50);

                    b.Property<string>("Idpais")
                        .HasColumnName("IDPAIS")
                        .HasMaxLength(20);

                    b.Property<string>("Nombredepto")
                        .HasColumnName("NOMBREDEPTO")
                        .HasMaxLength(100);

                    b.Property<string>("Nombremunicipio")
                        .HasColumnName("NOMBREMUNICIPIO")
                        .HasMaxLength(100);

                    b.Property<string>("Nombrepais")
                        .HasColumnName("NOMBREPAIS")
                        .HasMaxLength(100);

                    b.Property<string>("Nombrepoblacion")
                        .HasColumnName("NOMBREPOBLACION")
                        .HasMaxLength(100);

                    b.Property<string>("Usuarioinsercion")
                        .HasColumnName("USUARIOINSERCION")
                        .HasMaxLength(50);

                    b.Property<string>("Usuariomodificacion")
                        .HasColumnName("USUARIOMODIFICACION")
                        .HasMaxLength(50);

                    b.HasKey("Iddivipola");

                    b.ToTable("tblDivipola");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblElementos", b =>
                {
                    b.Property<int>("IIdelemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDElemento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdpais")
                        .HasColumnName("iIDPais");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(200);

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300);

                    b.HasKey("IIdelemento");

                    b.HasIndex("IIdusuarioInsercion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblElementos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmisores", b =>
                {
                    b.Property<long>("IIdemisor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmisor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .IsRequired()
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(10);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.HasKey("IIdemisor");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblEmisores","jurisprudencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpleados", b =>
                {
                    b.Property<long>("IIdempleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpleado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BExamenMedico")
                        .HasColumnName("bExamenMedico");

                    b.Property<bool>("BInduccion")
                        .HasColumnName("bInduccion");

                    b.Property<bool>("BRepresentanteLegal")
                        .HasColumnName("bRepresentanteLegal");

                    b.Property<DateTime>("DtFechaAfiliacionAfp")
                        .HasColumnName("dtFechaAfiliacionAFP")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaAfiliacionArl")
                        .HasColumnName("dtFechaAfiliacionARL")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaAfiliacionEps")
                        .HasColumnName("dtFechaAfiliacionEPS")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaExamenMedico")
                        .HasColumnName("dtFechaExamenMedico")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaInduccion")
                        .HasColumnName("dtFechaInduccion")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaIngreso")
                        .HasColumnName("dtFechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaNacimiento")
                        .HasColumnName("dtFechaNacimiento")
                        .HasColumnType("date");

                    b.Property<long>("EmployeeDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(CONVERT([bigint],(0),0))");

                    b.Property<long>("IIdafp")
                        .HasColumnName("iIDAFP");

                    b.Property<long?>("IIdarl")
                        .HasColumnName("iIDARL");

                    b.Property<long>("IIdcargo")
                        .HasColumnName("iIDCargo");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<long>("IIdestadoCivil")
                        .HasColumnName("iIDEstadoCivil");

                    b.Property<long>("IIdformacionEducativa")
                        .HasColumnName("iIDFormacionEducativa");

                    b.Property<long>("IIdgenero")
                        .HasColumnName("iIDGenero");

                    b.Property<long>("IIdlugarDomicilio")
                        .HasColumnName("iIDLugarDomicilio");

                    b.Property<long>("IIdlugarExpedicion")
                        .HasColumnName("iIDLugarExpedicion");

                    b.Property<long>("IIdlugarNacimiento")
                        .HasColumnName("iIDLugarNacimiento");

                    b.Property<int>("IIdmonedaSalario")
                        .HasColumnName("iIDMonedaSalario");

                    b.Property<long>("IIdnacionalidad")
                        .HasColumnName("iIDNacionalidad");

                    b.Property<long>("IIdsucursal")
                        .HasColumnName("iIDSucursal");

                    b.Property<long>("IIdtipoDocumento")
                        .HasColumnName("iIDTipoDocumento");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<int>("IValorSalario")
                        .HasColumnName("iValorSalario");

                    b.Property<long>("IiDtipoVinculacion")
                        .HasColumnName("iiDTipoVinculacion");

                    b.Property<string>("TDireccionDomicilio")
                        .IsRequired()
                        .HasColumnName("tDireccionDomicilio")
                        .HasMaxLength(300);

                    b.Property<string>("TEmail")
                        .HasColumnName("tEmail")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroDocumento")
                        .IsRequired()
                        .HasColumnName("tNumeroDocumento")
                        .HasMaxLength(50);

                    b.Property<string>("TPrimerApellido")
                        .IsRequired()
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(100);

                    b.Property<string>("TPrimerNombre")
                        .IsRequired()
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(100);

                    b.Property<string>("TSegundoApellido")
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(100);

                    b.Property<string>("TSegundoNombre")
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(100);

                    b.HasKey("IIdempleado");

                    b.HasIndex("IIdarl");

                    b.HasIndex("IIdcargo");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdeps");

                    b.HasIndex("IIdestadoCivil");

                    b.HasIndex("IIdformacionEducativa");

                    b.HasIndex("IIdgenero");

                    b.HasIndex("IIdlugarDomicilio");

                    b.HasIndex("IIdlugarExpedicion");

                    b.HasIndex("IIdlugarNacimiento");

                    b.HasIndex("IIdsucursal");

                    b.HasIndex("IIdtipoDocumento");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IiDtipoVinculacion");

                    b.ToTable("tblEmpleados","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpleadosDetalles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AchievedTitle");

                    b.Property<DateTime>("AuthorizedTo");

                    b.Property<long>("EmployeeId");

                    b.Property<string>("Ocupation");

                    b.Property<string>("OriginProgramType");

                    b.Property<string>("ReportingEntity");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("tblEmpleadosDetalles");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaArea", b =>
                {
                    b.Property<long>("IIdempresaArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaArea")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtUsuarioCreacion")
                        .HasColumnName("dtUsuarioCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(20);

                    b.Property<string>("TNombreArea")
                        .IsRequired()
                        .HasColumnName("tNombreArea")
                        .HasMaxLength(200);

                    b.HasKey("IIdempresaArea");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaArea","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlEficacia", b =>
                {
                    b.Property<long>("IIdcontrolEficacia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDControlEficacia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcontrolEficacia");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaControlEficacia","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlFrecuencia", b =>
                {
                    b.Property<long>("IIdcontrolFrecuencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDControlFrecuencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcontrolFrecuencia");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaControlFrecuencia","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlHerramientas", b =>
                {
                    b.Property<long>("IIdcontrolHerramienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDControlHerramienta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcontrolHerramienta")
                        .HasName("PK_tblEmpresaControlHerramienta");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaControlHerramientas","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlProcedimientos", b =>
                {
                    b.Property<long>("IIdcontrolProcedimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDControlProcedimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcontrolProcedimiento");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaControlProcedimientos","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlResponsable", b =>
                {
                    b.Property<long>("IIdcontrolResponsable")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDControlResponsable")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcontrolResponsable");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaControlResponsable","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstandarDocGenSis", b =>
                {
                    b.Property<long>("IIdempresaEstandarDocGenSis")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaEstandarDocGenSis")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdclasePolitica")
                        .HasColumnName("iIDClasePolitica");

                    b.Property<long>("IIdcobertura")
                        .HasColumnName("iIDCobertura");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdestado")
                        .HasColumnName("iIDEstado");

                    b.Property<int?>("IIdsubtablaNivelCobertura")
                        .HasColumnName("iIDSubtablaNivelCobertura");

                    b.Property<long>("IIdtipoDocumento")
                        .HasColumnName("iIDTipoDocumento");

                    b.Property<long?>("IIdtipoPolitica")
                        .HasColumnName("iIDTipoPolitica");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int?>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasColumnType("text");

                    b.Property<string>("TIdvalorNivelCobertura")
                        .HasColumnName("tIDValorNivelCobertura")
                        .HasMaxLength(100);

                    b.HasKey("IIdempresaEstandarDocGenSis");

                    b.HasIndex("IIdcobertura");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestado");

                    b.HasIndex("IIdtipoDocumento");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaEstandarDocGenSis","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstandares", b =>
                {
                    b.Property<long>("IIdempresaEstandar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaEstandar")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdestandar")
                        .HasColumnName("iIDEstandar");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdempresaEstandar")
                        .HasName("PK_tblEmpresaPoliticas");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestandar");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaEstandares","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstructuraProcesos", b =>
                {
                    b.Property<long>("IIdempresaEstructuraProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaEstructuraProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("INivelProceso")
                        .HasColumnName("iNivelProceso");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdempresaEstructuraProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("INivelProceso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaEstructuraProcesos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaGestora", b =>
                {
                    b.Property<long>("IIdempresaGestora")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaGestora")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IDigitoVerificacion")
                        .HasColumnName("iDigitoVerificacion");

                    b.Property<long>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TNumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.Property<string>("TRazonSocial")
                        .IsRequired()
                        .HasColumnName("tRazonSocial")
                        .HasMaxLength(400);

                    b.Property<string>("TUrl")
                        .HasColumnName("tUrl")
                        .HasMaxLength(300);

                    b.HasKey("IIdempresaGestora");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaGestora","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaJurisprudencias", b =>
                {
                    b.Property<long>("IIdempresaJurisprudencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaJurisprudencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdjurisprudencia")
                        .HasColumnName("iIDJurisprudencia");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.HasKey("IIdempresaJurisprudencia");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdjurisprudencia");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblEmpresaJurisprudencias","jurisprudencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaParametros", b =>
                {
                    b.Property<long>("IIdempresaParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaParametro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFecha")
                        .HasColumnName("dtFecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdcampo")
                        .HasColumnName("iIDCampo");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int?>("IValor")
                        .HasColumnName("iValor");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.Property<string>("TTexto")
                        .HasColumnName("tTexto")
                        .HasMaxLength(200);

                    b.Property<string>("TTipo")
                        .IsRequired()
                        .HasColumnName("tTipo")
                        .HasMaxLength(100);

                    b.HasKey("IIdempresaParametro");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaParametros","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaPolitica", b =>
                {
                    b.Property<long>("IIdempresaPolitica")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaPolitica")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<long>("IidtipoPolitica")
                        .HasColumnName("IIDTipoPolitica");

                    b.Property<string>("TPolitica")
                        .IsRequired()
                        .HasColumnName("tPolitica")
                        .HasColumnType("text");

                    b.HasKey("IIdempresaPolitica");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IidtipoPolitica");

                    b.ToTable("tblEmpresaPolitica","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaPoliticaControlCambios", b =>
                {
                    b.Property<long>("IIdempresaPoliticaControlCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaPoliticaControlCambio")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCambio")
                        .HasColumnName("dtFechaCambio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdempresaPolitica")
                        .HasColumnName("iIDEmpresaPolitica");

                    b.Property<int?>("IIdusuario")
                        .HasColumnName("iIDUsuario");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<int?>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TDescripcionCambio")
                        .HasColumnName("tDescripcionCambio");

                    b.HasKey("IIdempresaPoliticaControlCambio");

                    b.HasIndex("IIdempresaPolitica");

                    b.HasIndex("IIdusuario");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblEmpresaPoliticaControlCambios","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaProcesoRiesgos", b =>
                {
                    b.Property<long>("IIdempresaProcesoRiesgo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaProcesoRiesgo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdclasificacionRiesgo")
                        .HasColumnName("iIDClasificacionRiesgo");

                    b.Property<long>("IIdempresaProceso")
                        .HasColumnName("iIDEmpresaProceso");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdempresaProcesoRiesgo");

                    b.HasIndex("IIdclasificacionRiesgo");

                    b.HasIndex("IIdempresaProceso");

                    b.ToTable("tblEmpresaProcesoRiesgos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", b =>
                {
                    b.Property<long>("IIdempresaProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdnivelProceso")
                        .HasColumnName("iIDNivelProceso");

                    b.Property<long?>("IIdpadre")
                        .HasColumnName("iIDPadre");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(20);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(100);

                    b.HasKey("IIdempresaProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdnivelProceso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaProcesos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaRiesgoValoracion", b =>
                {
                    b.Property<long>("IIdriesgoValoracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoValoracion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IAlcanceMapa")
                        .HasColumnName("iAlcanceMapa");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdvaloracion")
                        .HasColumnName("iIDValoracion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int?>("IValorInferior")
                        .HasColumnName("iValorInferior");

                    b.Property<int?>("IValorSuperior")
                        .HasColumnName("iValorSuperior");

                    b.Property<int>("IValoracionRiesgo")
                        .HasColumnName("iValoracionRiesgo");

                    b.Property<string>("TColor")
                        .HasColumnName("tColor")
                        .HasMaxLength(50);

                    b.Property<string>("TValoracion")
                        .IsRequired()
                        .HasColumnName("tValoracion")
                        .HasMaxLength(100);

                    b.HasKey("IIdriesgoValoracion")
                        .HasName("PK_tblEmpresaProbabilidadImpacto");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEmpresaRiesgoValoracion","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresas", b =>
                {
                    b.Property<long>("IIdempresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInicialArl")
                        .HasColumnName("dtFechaInicialARL")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaInicialCaja")
                        .HasColumnName("dtFechaInicialCaja")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaInicialCorredor")
                        .HasColumnName("dtFechaInicialCorredor")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<short?>("IIdactividadEconomica1")
                        .HasColumnName("iIDActividadEconomica1");

                    b.Property<short?>("IIdactividadEconomica2")
                        .HasColumnName("iIDActividadEconomica2");

                    b.Property<short?>("IIdactividadEconomica3")
                        .HasColumnName("iIDActividadEconomica3");

                    b.Property<long?>("IIdarl")
                        .HasColumnName("iIDARL");

                    b.Property<long?>("IIdcajaCompensacion")
                        .HasColumnName("iIDCajaCompensacion");

                    b.Property<int?>("IIdcorredor")
                        .HasColumnName("iIDCorredor");

                    b.Property<long>("IIdempresaGestora")
                        .HasColumnName("iIDEmpresaGestora");

                    b.Property<long>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<long>("IIdubicacion")
                        .HasColumnName("iIDUbicacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<long>("IIdvendedor")
                        .HasColumnName("iIDVendedor");

                    b.Property<int>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TDireccion")
                        .HasColumnName("tDireccion")
                        .HasMaxLength(1200);

                    b.Property<string>("TFax")
                        .HasColumnName("tFax")
                        .HasMaxLength(100);

                    b.Property<string>("TNombreComercial")
                        .IsRequired()
                        .HasColumnName("tNombreComercial")
                        .HasMaxLength(400);

                    b.Property<string>("TNumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(100);

                    b.Property<string>("TRazonSocial")
                        .IsRequired()
                        .HasColumnName("tRazonSocial")
                        .HasMaxLength(510);

                    b.Property<string>("TTelefonoPrincipal")
                        .HasColumnName("tTelefonoPrincipal")
                        .HasMaxLength(200);

                    b.Property<string>("TTelefonoSecundario")
                        .HasColumnName("tTelefonoSecundario")
                        .HasMaxLength(100);

                    b.HasKey("IIdempresa");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.ToTable("tblEmpresas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasArls", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdarl")
                        .HasColumnName("iIDARL");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DFechaInicio")
                        .HasColumnName("dFechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.HasKey("IIdempresa", "IIdarl");

                    b.HasIndex("IIdarl");

                    b.HasIndex("IIdusuarioCreador");

                    b.ToTable("tblEmpresas-ARLs","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasCajasCompensacion", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdcajaCompensacion")
                        .HasColumnName("iIDCajaCompensacion");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DFechaInicio")
                        .HasColumnName("dFechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.HasKey("IIdempresa", "IIdcajaCompensacion");

                    b.HasIndex("IIdcajaCompensacion");

                    b.ToTable("tblEmpresas-CajasCompensacion","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasCorredores", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdcorredor")
                        .HasColumnName("iIDCorredor");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DFechaInicio")
                        .HasColumnName("dFechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.HasKey("IIdempresa", "IIdcorredor");

                    b.HasIndex("IIdcorredor");

                    b.HasIndex("IIdusuarioCreador");

                    b.ToTable("tblEmpresas-Corredores","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasPacientes", b =>
                {
                    b.Property<int>("IIdempresaPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaPaciente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TCiiun")
                        .IsRequired()
                        .HasColumnName("tCIIUN")
                        .HasMaxLength(20);

                    b.Property<string>("TDireccion")
                        .IsRequired()
                        .HasColumnName("tDireccion")
                        .HasMaxLength(50);

                    b.Property<string>("TEmail")
                        .IsRequired()
                        .HasColumnName("tEmail")
                        .HasMaxLength(200);

                    b.Property<string>("TNit")
                        .IsRequired()
                        .HasColumnName("tNIT")
                        .HasMaxLength(20);

                    b.Property<string>("TRazonSocial")
                        .IsRequired()
                        .HasColumnName("tRazonSocial")
                        .HasMaxLength(200);

                    b.Property<string>("TTelefono")
                        .IsRequired()
                        .HasColumnName("tTelefono")
                        .HasMaxLength(50);

                    b.HasKey("IIdempresaPaciente");

                    b.ToTable("tblEmpresasPacientes","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasTerceros", b =>
                {
                    b.Property<long>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("IIdactividadEconomica")
                        .HasColumnName("iIDActividadEconomica");

                    b.Property<byte?>("IIdtipoSociedad")
                        .HasColumnName("iIDTipoSociedad");

                    b.Property<long>("INit")
                        .HasColumnName("iNIT");

                    b.Property<string>("TDireccion")
                        .IsRequired()
                        .HasColumnName("tDireccion")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("TObjetoSocial")
                        .IsRequired()
                        .HasColumnName("tObjetoSocial")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("TRazonSocial")
                        .IsRequired()
                        .HasColumnName("tRazonSocial")
                        .HasMaxLength(700)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__TblEmpre__DC512D72840ED019");

                    b.HasIndex("IIdactividadEconomica");

                    b.HasIndex("IIdtipoSociedad");

                    b.HasIndex("TRazonSocial")
                        .IsUnique()
                        .HasName("UQ_RazonSocial");

                    b.ToTable("TblEmpresasTerceros");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", b =>
                {
                    b.Property<long>("IIdempresaVigencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEmpresaVigencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaDesde")
                        .HasColumnName("dtFechaDesde")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaHasta")
                        .HasColumnName("dtFechaHasta")
                        .HasColumnType("date");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long?>("IIdestadoVigencia")
                        .HasColumnName("iIDEstadoVigencia");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int>("IVigencia")
                        .HasColumnName("iVigencia");

                    b.HasKey("IIdempresaVigencia");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestadoVigencia");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblEmpresasVigencia","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEntradasSalidas", b =>
                {
                    b.Property<long>("IIdentradaSalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEntradaSalida")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdareaProceso")
                        .HasColumnName("iIDAreaProceso");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int?>("IIdsubtablaClaseOrigen")
                        .HasColumnName("iIDSubtablaClaseOrigen");

                    b.Property<int>("IIdsubtablaPeriodicidad")
                        .HasColumnName("iIDSubtablaPeriodicidad");

                    b.Property<int>("IIdsubtablaTipoEntradaSalidaProceso")
                        .HasColumnName("iIDSubtablaTipoEntradaSalidaProceso");

                    b.Property<int>("IIdsubtablaTipoOrigen")
                        .HasColumnName("iIDSubtablaTipoOrigen");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300);

                    b.Property<string>("TIdvalorClaseOrigen")
                        .HasColumnName("tIDValorClaseOrigen")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorPeriodicidad")
                        .IsRequired()
                        .HasColumnName("tIDValorPeriodicidad")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorTipoEntradaSalidaProceso")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoEntradaSalidaProceso")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorTipoOrigen")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoOrigen")
                        .HasMaxLength(100);

                    b.Property<string>("TOrigenExterno")
                        .HasColumnName("tOrigenExterno")
                        .HasMaxLength(200);

                    b.HasKey("IIdentradaSalida");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblEntradasSalidas","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEps", b =>
                {
                    b.Property<long>("IIdeps")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEPS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(10);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.Property<string>("TPathLogo")
                        .IsRequired()
                        .HasColumnName("tPathLogo")
                        .HasMaxLength(200);

                    b.HasKey("IIdeps");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblEPS","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEstadoAfiliacion", b =>
                {
                    b.Property<byte>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IId");

                    b.ToTable("tblEstadoAfiliacion","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEstandarNumerales", b =>
                {
                    b.Property<long>("IIdnumeral")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDNumeral")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(200);

                    b.HasKey("IIdnumeral");

                    b.ToTable("tblEstandarNumerales","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEstandarTipoPoliticas", b =>
                {
                    b.Property<long>("IIdestandarTipoPolitica")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEstandarTipoPolitica")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdestandar")
                        .HasColumnName("iIDEstandar");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TTipoPolitica")
                        .IsRequired()
                        .HasColumnName("tTipoPolitica")
                        .HasMaxLength(250);

                    b.HasKey("IIdestandarTipoPolitica");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestandar");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblEstandarTipoPoliticas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEventosCalendario", b =>
                {
                    b.Property<int>("IIdeventoCalendario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEventoCalendario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFin")
                        .HasColumnName("dtFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInicio")
                        .HasColumnName("dtFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdentidad")
                        .HasColumnName("iIDEntidad");

                    b.Property<int?>("IIdsubTablaTipoCalendario")
                        .HasColumnName("iIDSubTablaTipoCalendario");

                    b.Property<int?>("IIdusuarioAsignado")
                        .HasColumnName("iIDUsuarioAsignado");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TAsunto")
                        .HasColumnName("tAsunto");

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion");

                    b.Property<string>("TIdvalorTipoCalendario")
                        .HasColumnName("tIDValorTipoCalendario")
                        .HasMaxLength(200);

                    b.Property<string>("TLugar")
                        .HasColumnName("tLugar");

                    b.HasKey("IIdeventoCalendario");

                    b.ToTable("tblEventosCalendario","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEventosCalendarioParticipantes", b =>
                {
                    b.Property<int>("IIdeventoCalendarioParticipante")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDEventoCalendarioParticipante")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdeventoCalendario")
                        .HasColumnName("iIDEventoCalendario");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCorreoElectronico")
                        .HasColumnName("tCorreoElectronico")
                        .HasMaxLength(200);

                    b.HasKey("IIdeventoCalendarioParticipante");

                    b.HasIndex("IIdeventoCalendario");

                    b.ToTable("tblEventosCalendarioParticipantes","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblExtintoresTipo", b =>
                {
                    b.Property<long>("IIdextintorTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDExtintorTipo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IAgente")
                        .HasColumnName("iAgente");

                    b.Property<int>("ICapacidad")
                        .HasColumnName("iCapacidad");

                    b.Property<int>("IUnidad")
                        .HasColumnName("iUnidad");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TAgente")
                        .IsRequired()
                        .HasColumnName("tAgente")
                        .HasMaxLength(50);

                    b.Property<string>("TCapacidad")
                        .IsRequired()
                        .HasColumnName("tCapacidad")
                        .HasMaxLength(50);

                    b.Property<string>("TUnidad")
                        .IsRequired()
                        .HasColumnName("tUnidad")
                        .HasMaxLength(50);

                    b.HasKey("IIdextintorTipo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblExtintoresTipo","Equipos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormatos", b =>
                {
                    b.Property<long>("IIdformato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDFormato")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdclaseFormato")
                        .HasColumnName("iIDClaseFormato");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<int>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TContenido")
                        .IsRequired()
                        .HasColumnName("tContenido")
                        .HasColumnType("ntext");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100);

                    b.HasKey("IIdformato")
                        .HasName("PK_administracion.tblFormatos");

                    b.HasIndex("IIdclaseFormato");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblFormatos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormularios", b =>
                {
                    b.Property<int>("IIdformulario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDFormulario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<decimal?>("DTamanoArchivo")
                        .HasColumnName("dTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TFormulario")
                        .IsRequired()
                        .HasColumnName("tFormulario");

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreFormulario")
                        .IsRequired()
                        .HasColumnName("tNombreFormulario")
                        .HasMaxLength(100);

                    b.HasKey("IIdformulario");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblFormularios","encuestas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormulariosRespuestas", b =>
                {
                    b.Property<int>("IIdformularioRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDFormularioRespuesta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdformularioRespuestaEncabezado")
                        .HasColumnName("iIDFormularioRespuestaEncabezado");

                    b.Property<string>("TCampo")
                        .IsRequired()
                        .HasColumnName("tCampo")
                        .HasMaxLength(50);

                    b.Property<string>("TRespuesta")
                        .HasColumnName("tRespuesta")
                        .HasMaxLength(200);

                    b.HasKey("IIdformularioRespuesta");

                    b.HasIndex("IIdformularioRespuestaEncabezado");

                    b.ToTable("tblFormulariosRespuestas","encuestas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormulariosRespuestasEncabezados", b =>
                {
                    b.Property<int>("IIdformularioRespuestaEncabezado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDFormularioRespuestaEncabezado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdformulario")
                        .HasColumnName("iIDFormulario");

                    b.Property<string>("TDireccionIp")
                        .IsRequired()
                        .HasColumnName("tDireccionIP")
                        .HasMaxLength(50);

                    b.HasKey("IIdformularioRespuestaEncabezado");

                    b.HasIndex("IIdformulario");

                    b.ToTable("tblFormulariosRespuestasEncabezados","encuestas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIdiomas", b =>
                {
                    b.Property<int>("IIdidioma")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIdioma")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(200);

                    b.Property<string>("TCodigoPais")
                        .HasColumnName("tCodigoPais")
                        .HasMaxLength(200);

                    b.Property<string>("TNombre")
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TPais")
                        .HasColumnName("tPais")
                        .HasMaxLength(200);

                    b.HasKey("IIdidioma");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblIdiomas","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalle", b =>
                {
                    b.Property<long>("IIdindicadorDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndicadorDetalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdmatrizIndicador")
                        .HasColumnName("iIDMatrizIndicador");

                    b.Property<long>("IIdresponsableAnalisis")
                        .HasColumnName("iIDResponsableAnalisis");

                    b.Property<long>("IIdresponsableInformacion")
                        .HasColumnName("iIDResponsableInformacion");

                    b.Property<int>("IIdsubtablaFrecuenciaAnalisis")
                        .HasColumnName("iIDSubtablaFrecuenciaAnalisis");

                    b.Property<int>("IIdsubtablaRecoleccionPeriodicidad")
                        .HasColumnName("iIDSubtablaRecoleccionPeriodicidad");

                    b.Property<int>("IIdsubtablaTipoIndicador")
                        .HasColumnName("iIDSubtablaTipoIndicador");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(200);

                    b.Property<string>("TFormula")
                        .IsRequired()
                        .HasColumnName("tFormula")
                        .HasMaxLength(200);

                    b.Property<string>("TIdvalorFrecuenciaAnalisis")
                        .IsRequired()
                        .HasColumnName("tIDValorFrecuenciaAnalisis")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRecoleccionPeriodicidad")
                        .IsRequired()
                        .HasColumnName("tIDValorRecoleccionPeriodicidad")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorTipoIndicador")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoIndicador")
                        .HasMaxLength(100);

                    b.Property<string>("TMeta")
                        .IsRequired()
                        .HasColumnName("tMeta")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreIndicador")
                        .IsRequired()
                        .HasColumnName("tNombreIndicador")
                        .HasMaxLength(100);

                    b.Property<string>("TOrigenDatos")
                        .IsRequired()
                        .HasColumnName("tOrigenDatos")
                        .HasMaxLength(200);

                    b.HasKey("IIdindicadorDetalle")
                        .HasName("PK_tblIndicadores");

                    b.HasIndex("IIdresponsableAnalisis");

                    b.HasIndex("IIdresponsableInformacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblIndicadoresDetalle","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalleHistorico", b =>
                {
                    b.Property<long>("IIdindicadorDetalleHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndicadorDetalleHistorico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdindicadorDetalle")
                        .HasColumnName("iIDIndicadorDetalle");

                    b.Property<long>("IIdmatrizIndicador")
                        .HasColumnName("iIDMatrizIndicador");

                    b.Property<long>("IIdresponsableAnalisis")
                        .HasColumnName("iIDResponsableAnalisis");

                    b.Property<long>("IIdresponsableInformacion")
                        .HasColumnName("iIDResponsableInformacion");

                    b.Property<int>("IIdsubtablaFrecuenciaAnalisis")
                        .HasColumnName("iIDSubtablaFrecuenciaAnalisis");

                    b.Property<int>("IIdsubtablaRecoleccionPeriodicidad")
                        .HasColumnName("iIDSubtablaRecoleccionPeriodicidad");

                    b.Property<int>("IIdsubtablaTipoIndicador")
                        .HasColumnName("iIDSubtablaTipoIndicador");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(200);

                    b.Property<string>("TFormula")
                        .IsRequired()
                        .HasColumnName("tFormula")
                        .HasMaxLength(200);

                    b.Property<string>("TIdvalorFrecuenciaAnalisis")
                        .IsRequired()
                        .HasColumnName("tIDValorFrecuenciaAnalisis")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRecoleccionPeriodicidad")
                        .IsRequired()
                        .HasColumnName("tIDValorRecoleccionPeriodicidad")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorTipoIndicador")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoIndicador")
                        .HasMaxLength(100);

                    b.Property<string>("TMeta")
                        .IsRequired()
                        .HasColumnName("tMeta")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreIndicador")
                        .IsRequired()
                        .HasColumnName("tNombreIndicador")
                        .HasMaxLength(100);

                    b.Property<string>("TOrigenDatos")
                        .IsRequired()
                        .HasColumnName("tOrigenDatos")
                        .HasMaxLength(200);

                    b.HasKey("IIdindicadorDetalleHistorico");

                    b.HasIndex("IIdindicadorDetalle");

                    b.ToTable("tblIndicadoresDetalleHistorico","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresMatriz", b =>
                {
                    b.Property<long>("IIdmatrizIndicador")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMatrizIndicador")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaEmision")
                        .HasColumnName("dtFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempleadoAprobo")
                        .HasColumnName("iIDEmpleadoAprobo");

                    b.Property<long>("IIdempleadoElaboro")
                        .HasColumnName("iIDEmpleadoElaboro");

                    b.Property<long>("IIdempleadoReviso")
                        .HasColumnName("iIDEmpleadoReviso");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdsubtablaEstadoIndicadoresMatriz")
                        .HasColumnName("iIDSubtablaEstadoIndicadoresMatriz");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TIdvalorEstadoIndicadoresMatriz")
                        .IsRequired()
                        .HasColumnName("tIDValorEstadoIndicadoresMatriz")
                        .HasMaxLength(100);

                    b.Property<string>("TObjetivo")
                        .IsRequired()
                        .HasColumnName("tObjetivo")
                        .HasMaxLength(200);

                    b.HasKey("IIdmatrizIndicador")
                        .HasName("PK_tblMatrizIndicadores");

                    b.HasIndex("IIdempleadoAprobo");

                    b.HasIndex("IIdempleadoElaboro");

                    b.HasIndex("IIdempleadoReviso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblIndicadoresMatriz","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresMatrizHistorico", b =>
                {
                    b.Property<long>("IIdmatrizIndicadorHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMatrizIndicadorHistorico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaEmision")
                        .HasColumnName("dtFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempleadoAprobo")
                        .HasColumnName("iIDEmpleadoAprobo");

                    b.Property<long>("IIdempleadoElaboro")
                        .HasColumnName("iIDEmpleadoElaboro");

                    b.Property<long>("IIdempleadoReviso")
                        .HasColumnName("iIDEmpleadoReviso");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdmatrizIndicador")
                        .HasColumnName("iIDMatrizIndicador");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdsubtablaEstadoIndicadoresMatriz")
                        .HasColumnName("iIDSubtablaEstadoIndicadoresMatriz");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<int>("IVersion")
                        .HasColumnName("iVersion");

                    b.Property<string>("TIdvalorEstadoIndicadoresMatriz")
                        .IsRequired()
                        .HasColumnName("tIDValorEstadoIndicadoresMatriz")
                        .HasMaxLength(100);

                    b.Property<string>("TObjetivo")
                        .IsRequired()
                        .HasColumnName("tObjetivo")
                        .HasMaxLength(200);

                    b.HasKey("IIdmatrizIndicadorHistorico")
                        .HasName("PK_tblMatrizIndicadoresHistorico");

                    b.ToTable("tblIndicadoresMatrizHistorico","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresSeguimiento", b =>
                {
                    b.Property<long>("IIdindicadorSeguimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIndicadorSeguimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdindicadorDetalle")
                        .HasColumnName("iIDIndicadorDetalle");

                    b.Property<int>("IIdsubtablaRequierePlanAccion")
                        .HasColumnName("iIDSubtablaRequierePlanAccion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<double>("IResultado")
                        .HasColumnName("iResultado");

                    b.Property<string>("TAnalisis")
                        .IsRequired()
                        .HasColumnName("tAnalisis")
                        .HasMaxLength(200);

                    b.Property<string>("TIdvalorRequierePlanAccion")
                        .IsRequired()
                        .HasColumnName("tIDValorRequierePlanAccion")
                        .HasMaxLength(100);

                    b.HasKey("IIdindicadorSeguimiento");

                    b.HasIndex("IIdindicadorDetalle");

                    b.ToTable("tblIndicadoresSeguimiento","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionExtintoresDetalle", b =>
                {
                    b.Property<long>("IIdinspeccionExtintorDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInspeccionExtintorDetalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BMedidaIntervencion")
                        .HasColumnName("bMedidaIntervencion");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaProximaRecarga")
                        .HasColumnName("dtFechaProximaRecarga")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaProximoMtto")
                        .HasColumnName("dtFechaProximoMtto")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaUltimaRecarga")
                        .HasColumnName("dtFechaUltimaRecarga")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaUltimoMtto")
                        .HasColumnName("dtFechaUltimoMtto")
                        .HasColumnType("date");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdextintorTipo")
                        .HasColumnName("iIDExtintorTipo");

                    b.Property<long>("IIdinspeccion")
                        .HasColumnName("iIDInspeccion");

                    b.Property<int>("IIdsubtablaAccesoExtintor")
                        .HasColumnName("iIDSubtablaAccesoExtintor");

                    b.Property<int>("IIdsubtablaSenalizacionExtintor")
                        .HasColumnName("iIDSubtablaSenalizacionExtintor");

                    b.Property<int>("IIdsubtablaUbicacionExtintor")
                        .HasColumnName("iIDSubtablaUbicacionExtintor");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigoInterno")
                        .IsRequired()
                        .HasColumnName("tCodigoInterno")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorAccesoExtintor")
                        .IsRequired()
                        .HasColumnName("tIDValorAccesoExtintor")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorSenalizacionExtintor")
                        .IsRequired()
                        .HasColumnName("tIDValorSenalizacionExtintor")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorUbicacionExtintor")
                        .IsRequired()
                        .HasColumnName("tIDValorUbicacionExtintor")
                        .HasMaxLength(100);

                    b.Property<string>("TObservaciones")
                        .IsRequired()
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(500);

                    b.HasKey("IIdinspeccionExtintorDetalle");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdextintorTipo");

                    b.HasIndex("IIdinspeccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInspeccionExtintoresDetalle","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionExtintoresDetalleMtto", b =>
                {
                    b.Property<long>("IIdinspeccionExtintorDetalleMtto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInspeccionExtintorDetalleMtto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdinspeccionExtintorDetalle")
                        .HasColumnName("iIDInspeccionExtintorDetalle");

                    b.Property<int>("IIdsubtablaParteExtintor")
                        .HasColumnName("iIDSubtablaParteExtintor");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TIdvalorParteExtintor")
                        .IsRequired()
                        .HasColumnName("tIDValorParteExtintor")
                        .HasMaxLength(50);

                    b.HasKey("IIdinspeccionExtintorDetalleMtto")
                        .HasName("PK_tblInspeccionExtintoresMtto");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInspeccionExtintoresDetalleMtto","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspecciones", b =>
                {
                    b.Property<long>("IIdinspeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInspeccion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInspeccion")
                        .HasColumnName("dtFechaInspeccion")
                        .HasColumnType("date");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdinspector")
                        .HasColumnName("iIDInspector");

                    b.Property<int>("IIdsubtablaTipoInspeccion")
                        .HasColumnName("iIDSubtablaTipoInspeccion");

                    b.Property<int>("IIdsubtablaTipoInspector")
                        .HasColumnName("iIDSubtablaTipoInspector");

                    b.Property<long?>("IIdtarea")
                        .HasColumnName("iIDTarea");

                    b.Property<long>("IIdvigencia")
                        .HasColumnName("iIDVigencia");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TIdvalorTipoInspeccion")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoInspeccion")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorTipoInspector")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoInspector")
                        .HasMaxLength(100);

                    b.HasKey("IIdinspeccion")
                        .HasName("PK_tblInspeccionExtintores");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdtarea");

                    b.HasIndex("IIdvigencia");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInspecciones","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionesPrograma", b =>
                {
                    b.Property<long>("IIdinspeccionPrograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInspeccionPrograma")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BTipoResponsable")
                        .HasColumnName("bTipoResponsable");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInspeccion")
                        .HasColumnName("dtFechaInspeccion")
                        .HasColumnType("date");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<int>("IIdsubtablaTipoInspeccion")
                        .HasColumnName("iIDSubtablaTipoInspeccion");

                    b.Property<long>("IIdtarea")
                        .HasColumnName("iIDTarea");

                    b.Property<long>("IIdvigencia")
                        .HasColumnName("iIDVigencia");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TIdvalorTipoInspeccion")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoInspeccion")
                        .HasMaxLength(100);

                    b.HasKey("IIdinspeccionPrograma");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdtarea");

                    b.HasIndex("IIdvigencia");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInspeccionesPrograma","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaAlumbrado", b =>
                {
                    b.Property<long>("IIdalumbrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDAlumbrado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdinspeccion")
                        .HasColumnName("iIDInspeccion");

                    b.Property<int>("IIdsubtablaEstadoLuminarias")
                        .HasColumnName("iIDSubtablaEstadoLuminarias");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCantidad")
                        .IsRequired()
                        .HasColumnName("tCantidad")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorEstadoLuminarias")
                        .IsRequired()
                        .HasColumnName("tIDValorEstadoLuminarias")
                        .HasMaxLength(100);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(200);

                    b.Property<string>("TPotencia")
                        .IsRequired()
                        .HasColumnName("tPotencia")
                        .HasMaxLength(100);

                    b.Property<string>("TTipoLampara")
                        .IsRequired()
                        .HasColumnName("tTipoLampara")
                        .HasMaxLength(100);

                    b.HasKey("IIdalumbrado");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdinspeccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInstalacionElectricaAlumbrado","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaCircuitos", b =>
                {
                    b.Property<long>("IIdcircuito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDCircuito")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdinspeccion")
                        .HasColumnName("iIDInspeccion");

                    b.Property<int>("IIdsubtablaEstadoProteccion")
                        .HasColumnName("iIDSubtablaEstadoProteccion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCapacidadAcometida")
                        .IsRequired()
                        .HasColumnName("tCapacidadAcometida")
                        .HasMaxLength(100);

                    b.Property<string>("TCorrienteNominal")
                        .IsRequired()
                        .HasColumnName("tCorrienteNominal")
                        .HasMaxLength(100);

                    b.Property<string>("TTablero")
                        .IsRequired()
                        .HasColumnName("tTablero")
                        .HasMaxLength(100);

                    b.Property<string>("TTipoProteccion")
                        .IsRequired()
                        .HasColumnName("tTipoProteccion")
                        .HasMaxLength(100);

                    b.Property<string>("TValorEstadoProteccion")
                        .IsRequired()
                        .HasColumnName("tValorEstadoProteccion")
                        .HasMaxLength(100);

                    b.HasKey("IIdcircuito");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdinspeccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInstalacionElectricaCircuitos","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaInterruptores", b =>
                {
                    b.Property<long>("IIdinterruptor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDInterruptor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BFunciona")
                        .HasColumnName("bFunciona");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdinspeccion")
                        .HasColumnName("iIDInspeccion");

                    b.Property<int>("IIdsubtablaEstadoInterruptor")
                        .HasColumnName("iIDSubtablaEstadoInterruptor");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCalibre")
                        .IsRequired()
                        .HasColumnName("tCalibre")
                        .HasMaxLength(100);

                    b.Property<string>("TCantidad")
                        .IsRequired()
                        .HasColumnName("tCantidad")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorEstadoInterruptor")
                        .IsRequired()
                        .HasColumnName("tIDValorEstadoInterruptor")
                        .HasMaxLength(100);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(200);

                    b.HasKey("IIdinterruptor");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdinspeccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInstalacionElectricaInterruptores","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaTomas", b =>
                {
                    b.Property<long>("IIdtoma")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDToma")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BFunciona")
                        .HasColumnName("bFunciona");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdarea")
                        .HasColumnName("iIDArea");

                    b.Property<long>("IIdinspeccion")
                        .HasColumnName("iIDInspeccion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCantidad")
                        .IsRequired()
                        .HasColumnName("tCantidad")
                        .HasMaxLength(100);

                    b.Property<string>("TObservaciones")
                        .HasColumnName("tObservaciones")
                        .HasMaxLength(200);

                    b.Property<string>("TPotencia")
                        .IsRequired()
                        .HasColumnName("tPotencia")
                        .HasMaxLength(100);

                    b.Property<string>("TTipo")
                        .IsRequired()
                        .HasColumnName("tTipo")
                        .HasMaxLength(100);

                    b.HasKey("IIdtoma");

                    b.HasIndex("IIdarea");

                    b.HasIndex("IIdinspeccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblInstalacionElectricaTomas","Inspecciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInventarioEmpresas", b =>
                {
                    b.Property<int>("IIdinventarioEmpresas")
                        .HasColumnName("iIDInventarioEmpresas");

                    b.HasKey("IIdinventarioEmpresas");

                    b.ToTable("tblInventarioEmpresas","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIps", b =>
                {
                    b.Property<long>("IIdips")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIPS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("ICodigoHabilitacion")
                        .HasColumnName("iCodigoHabilitacion");

                    b.Property<long?>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<long?>("IIdubicacion")
                        .HasColumnName("iIDUbicacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<long>("ITipoIps")
                        .HasColumnName("iTipoIPS");

                    b.Property<string>("TCodigoExterno")
                        .HasColumnName("tCodigoExterno")
                        .HasMaxLength(20);

                    b.Property<int?>("TDigitoVerificacion")
                        .HasColumnName("tDigitoVerificacion");

                    b.Property<string>("TDireccion")
                        .HasColumnName("tDireccion")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("TEmail")
                        .HasColumnName("tEmail")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(100);

                    b.Property<string>("TPathLogo")
                        .IsRequired()
                        .HasColumnName("tPathLogo")
                        .HasMaxLength(200);

                    b.Property<string>("TTelefono")
                        .HasColumnName("tTelefono")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("IIdips");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IIdubicacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("ITipoIps");

                    b.ToTable("tblIPS","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIpssEps", b =>
                {
                    b.Property<long>("IIdipseps")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDIPSEPS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<long>("IIdips")
                        .HasColumnName("iIDIPS");

                    b.HasKey("IIdipseps")
                        .HasName("PK_tblIPS-EPS");

                    b.HasIndex("IIdeps");

                    b.HasIndex("IIdips");

                    b.ToTable("tblIPSs-EPS","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblJurisprudencias", b =>
                {
                    b.Property<long>("IIdjurisprudencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDJurisprudencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IAño")
                        .HasColumnName("iAño");

                    b.Property<long>("IIdemisor")
                        .HasColumnName("iIDEmisor");

                    b.Property<long>("ILegislacion")
                        .HasColumnName("iLegislacion");

                    b.Property<int>("INumero")
                        .HasColumnName("iNumero");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TArticulos")
                        .IsRequired()
                        .HasColumnName("tArticulos")
                        .HasMaxLength(500);

                    b.Property<string>("TControl")
                        .IsRequired()
                        .HasColumnName("tControl")
                        .HasMaxLength(500);

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.Property<string>("TObligacion")
                        .IsRequired()
                        .HasColumnName("tObligacion")
                        .HasMaxLength(500);

                    b.HasKey("IIdjurisprudencia");

                    b.HasIndex("IIdemisor");

                    b.HasIndex("ILegislacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblJurisprudencias","jurisprudencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblListaDetalle", b =>
                {
                    b.Property<decimal>("IdListaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigos")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DescripcionEsp")
                        .HasColumnName("Descripcion_Esp")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("DescripcionIng")
                        .HasColumnName("Descripcion_ing")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Grupo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("Lista")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("IdListaDetalle");

                    b.ToTable("tblListaDetalle");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMapaProcesoPosiciones", b =>
                {
                    b.Property<long>("IIdposicionProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPosicionProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdempresaProceso")
                        .HasColumnName("iIDEmpresaProceso");

                    b.Property<int>("IPosicionX")
                        .HasColumnName("iPosicionX");

                    b.Property<int>("IPosicionY")
                        .HasColumnName("iPosicionY");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdposicionProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdempresaProceso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblMapaProcesoPosiciones","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMedicamentos", b =>
                {
                    b.Property<int>("IIdmedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMedicamento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<decimal?>("DCantidad")
                        .HasColumnName("dCantidad")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal?>("DCantidadCum")
                        .HasColumnName("dCantidadCum")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("DtFechaActivo")
                        .HasColumnName("dtFechaActivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaExpedicion")
                        .HasColumnName("dtFechaExpedicion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInactivo")
                        .HasColumnName("dtFechaInactivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaVencimiento")
                        .HasColumnName("dtFechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<int?>("IConsecutivo")
                        .HasColumnName("iConsecutivo");

                    b.Property<int>("IIdpais")
                        .HasColumnName("iIDPais");

                    b.Property<int?>("IIdsubtablaInvimaEstado")
                        .HasColumnName("iIDSubtablaInvimaEstado");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<int?>("ILlaveValidacion")
                        .HasColumnName("iLlaveValidacion");

                    b.Property<string>("TAtc")
                        .HasColumnName("tATC")
                        .HasMaxLength(400);

                    b.Property<string>("TConcentracion")
                        .HasColumnName("tConcentracion")
                        .HasMaxLength(400);

                    b.Property<string>("TDescripcionAtc")
                        .HasColumnName("tDescripcionATC")
                        .HasMaxLength(400);

                    b.Property<string>("TDescripcionComercial")
                        .HasColumnName("tDescripcionComercial")
                        .HasMaxLength(800);

                    b.Property<string>("TEstadoCum")
                        .HasColumnName("tEstadoCum")
                        .HasMaxLength(400);

                    b.Property<string>("TEstadoRegistro")
                        .HasColumnName("tEstadoRegistro")
                        .HasMaxLength(400);

                    b.Property<string>("TExpediente")
                        .HasColumnName("tExpediente")
                        .HasMaxLength(400);

                    b.Property<string>("TExpedienteCum")
                        .HasColumnName("tExpedienteCum")
                        .HasMaxLength(400);

                    b.Property<string>("TFormaFarmaceutica")
                        .HasColumnName("tFormaFarmaceutica")
                        .HasMaxLength(400);

                    b.Property<string>("TModalidad")
                        .HasColumnName("tModalidad")
                        .HasMaxLength(400);

                    b.Property<string>("TMuestraMedica")
                        .HasColumnName("tMuestraMedica")
                        .HasMaxLength(400);

                    b.Property<string>("TNombreRol")
                        .HasColumnName("tNombreROL")
                        .HasMaxLength(400);

                    b.Property<string>("TPrincipioActivo")
                        .HasColumnName("tPrincipioActivo")
                        .HasMaxLength(600);

                    b.Property<string>("TProducto")
                        .HasColumnName("tProducto")
                        .HasMaxLength(400);

                    b.Property<string>("TRegistroSanitario")
                        .HasColumnName("tRegistroSanitario")
                        .HasMaxLength(400);

                    b.Property<string>("TTipoRol")
                        .HasColumnName("tTipoROL")
                        .HasMaxLength(400);

                    b.Property<string>("TTitular")
                        .HasColumnName("tTitular")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidad")
                        .HasColumnName("tUnidad")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidadMedida")
                        .HasColumnName("tUnidadMedida")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidadReferencia")
                        .HasColumnName("tUnidadReferencia")
                        .HasMaxLength(400);

                    b.Property<string>("TValorInvimaEstado")
                        .HasColumnName("tValorInvimaEstado")
                        .HasMaxLength(200);

                    b.Property<string>("TViaAdministracion")
                        .HasColumnName("tViaAdministracion")
                        .HasMaxLength(400);

                    b.HasKey("IIdmedicamento")
                        .HasName("PK_tblMedicamentos_1");

                    b.HasIndex("IIdsubtablaInvimaEstado", "TValorInvimaEstado");

                    b.ToTable("tblMedicamentos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMedicamentosTemp", b =>
                {
                    b.Property<int>("IIdmedicamentoTemp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMedicamentoTemp")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<decimal?>("DCantidad")
                        .HasColumnName("dCantidad")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal?>("DCantidadCum")
                        .HasColumnName("dCantidadCum")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("DtFechaActivo")
                        .HasColumnName("dtFechaActivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaExpedicion")
                        .HasColumnName("dtFechaExpedicion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInactivo")
                        .HasColumnName("dtFechaInactivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaVencimiento")
                        .HasColumnName("dtFechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<int?>("IConsecutivo")
                        .HasColumnName("iConsecutivo");

                    b.Property<int>("IIdpais")
                        .HasColumnName("iIDPais");

                    b.Property<int?>("IIdsubtablaInvimaEstado")
                        .HasColumnName("iIDSubtablaInvimaEstado");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<int?>("ILlaveValidacion")
                        .HasColumnName("iLlaveValidacion");

                    b.Property<string>("TAtc")
                        .HasColumnName("tATC")
                        .HasMaxLength(400);

                    b.Property<string>("TConcentracion")
                        .HasColumnName("tConcentracion")
                        .HasMaxLength(400);

                    b.Property<string>("TDescripcionAtc")
                        .HasColumnName("tDescripcionATC")
                        .HasMaxLength(400);

                    b.Property<string>("TDescripcionComercial")
                        .HasColumnName("tDescripcionComercial")
                        .HasMaxLength(800);

                    b.Property<string>("TEstadoCum")
                        .HasColumnName("tEstadoCum")
                        .HasMaxLength(400);

                    b.Property<string>("TEstadoRegistro")
                        .HasColumnName("tEstadoRegistro")
                        .HasMaxLength(400);

                    b.Property<string>("TExpediente")
                        .HasColumnName("tExpediente")
                        .HasMaxLength(400);

                    b.Property<string>("TExpedienteCum")
                        .HasColumnName("tExpedienteCum")
                        .HasMaxLength(400);

                    b.Property<string>("TFormaFarmaceutica")
                        .HasColumnName("tFormaFarmaceutica")
                        .HasMaxLength(400);

                    b.Property<string>("TModalidad")
                        .HasColumnName("tModalidad")
                        .HasMaxLength(400);

                    b.Property<string>("TMuestraMedica")
                        .HasColumnName("tMuestraMedica")
                        .HasMaxLength(400);

                    b.Property<string>("TNombreRol")
                        .HasColumnName("tNombreROL")
                        .HasMaxLength(400);

                    b.Property<string>("TPrincipioActivo")
                        .HasColumnName("tPrincipioActivo")
                        .HasMaxLength(600);

                    b.Property<string>("TProducto")
                        .HasColumnName("tProducto")
                        .HasMaxLength(400);

                    b.Property<string>("TRegistroSanitario")
                        .HasColumnName("tRegistroSanitario")
                        .HasMaxLength(400);

                    b.Property<string>("TTipoRol")
                        .HasColumnName("tTipoROL")
                        .HasMaxLength(400);

                    b.Property<string>("TTitular")
                        .HasColumnName("tTitular")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidad")
                        .HasColumnName("tUnidad")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidadMedida")
                        .HasColumnName("tUnidadMedida")
                        .HasMaxLength(400);

                    b.Property<string>("TUnidadReferencia")
                        .HasColumnName("tUnidadReferencia")
                        .HasMaxLength(400);

                    b.Property<string>("TValorInvimaEstado")
                        .HasColumnName("tValorInvimaEstado")
                        .HasMaxLength(200);

                    b.Property<string>("TViaAdministracion")
                        .HasColumnName("tViaAdministracion")
                        .HasMaxLength(400);

                    b.HasKey("IIdmedicamentoTemp")
                        .HasName("PK_tblMedicamentosTemp_1");

                    b.HasIndex("IIdsubtablaInvimaEstado", "TValorInvimaEstado");

                    b.ToTable("tblMedicamentosTemp","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMenu", b =>
                {
                    b.Property<int>("IIdmenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMenu")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int?>("IIdpadre")
                        .HasColumnName("iIDPadre");

                    b.Property<int>("IPosicion")
                        .HasColumnName("iPosicion");

                    b.Property<int?>("IPosicionPadre")
                        .HasColumnName("iPosicionPadre");

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("IIdmenu");

                    b.ToTable("tblMenu","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMenuPerfiles", b =>
                {
                    b.Property<int>("IIdperfil")
                        .HasColumnName("iIDPerfil");

                    b.Property<int>("IIdmenu")
                        .HasColumnName("iIDMenu");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.HasKey("IIdperfil", "IIdmenu")
                        .HasName("PK__tblMenuP__2B258DC93650AE39");

                    b.HasIndex("IIdmenu");

                    b.ToTable("tblMenuPerfiles","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMultivalores", b =>
                {
                    b.Property<long>("IIdmultivalor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDMultivalor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdsubtabla")
                        .HasColumnName("iIDSubtabla");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.Property<int>("IOrden")
                        .HasColumnName("iOrden");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(4000);

                    b.Property<string>("TSubtabla")
                        .IsRequired()
                        .HasColumnName("tSubtabla")
                        .HasMaxLength(200);

                    b.Property<string>("TValor")
                        .IsRequired()
                        .HasColumnName("tValor")
                        .HasMaxLength(200);

                    b.HasKey("IIdmultivalor");

                    b.HasIndex("IIdusuarioCreador");

                    b.HasIndex("IIdsubtabla", "TValor")
                        .IsUnique()
                        .HasName("IDX_Subtabla");

                    b.ToTable("tblMultivalores");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNotificacionesElectronicas", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("IIdtemplateNotificacion")
                        .HasColumnName("iIDTemplateNotificacion");

                    b.Property<short>("INumeroDias")
                        .HasColumnName("iNumeroDias");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("TIdentificador")
                        .IsRequired()
                        .HasColumnName("tIdentificador")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblNotif__DC512D72AD5DFFA3");

                    b.HasIndex("IIdtemplateNotificacion");

                    b.HasIndex("TIdentificador")
                        .IsUnique()
                        .HasName("UQ_tblNotificacionesElectronicas_tIdentificador");

                    b.ToTable("tblNotificacionesElectronicas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNotificacionesUsuarios", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<short>("IIdNotificacionElectronica")
                        .HasColumnName("iIdNotificacionElectronica");

                    b.Property<byte>("IIdTipoNotificacion")
                        .HasColumnName("iIdTipoNotificacion");

                    b.Property<short>("IIdusuarioNotificacion")
                        .HasColumnName("iIDUsuarioNotificacion");

                    b.HasKey("IId")
                        .HasName("PK__tblNotif__DC512D7225EE4213");

                    b.ToTable("tblNotificaciones_Usuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNumerales", b =>
                {
                    b.Property<long>("IIdnumeral")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDNumeral")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BSoa")
                        .HasColumnName("bSOA");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdsubtablaEstandar")
                        .HasColumnName("iIDSubtablaEstandar");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300);

                    b.Property<string>("TIdvalorEstandar")
                        .IsRequired()
                        .HasColumnName("tIDValorEstandar")
                        .HasMaxLength(100);

                    b.Property<string>("TNumeral")
                        .IsRequired()
                        .HasColumnName("tNumeral")
                        .HasMaxLength(50);

                    b.HasKey("IIdnumeral");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblNumerales","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNumeralesProceso", b =>
                {
                    b.Property<long>("IIdnumeralProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDNumeralProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdnumeral")
                        .HasColumnName("iIDNumeral");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<long>("IIdsubtablaEstandar")
                        .HasColumnName("iIDSubtablaEstandar");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TIdvalorEstandar")
                        .IsRequired()
                        .HasColumnName("tIDValorEstandar")
                        .HasMaxLength(100);

                    b.HasKey("IIdnumeralProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdnumeral");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblNumeralesProceso","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPacientes", b =>
                {
                    b.Property<int>("IIdpaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPaciente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtFechaNacimiento")
                        .HasColumnName("dtFechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int?>("IEdad")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("iEdad")
                        .HasComputedColumnSql("((CONVERT([int],CONVERT([char](8),sysdatetime(),(112)),0)-CONVERT([char](8),[dtFechaNacimiento],(112)))/(10000))");

                    b.Property<long>("IIdafp")
                        .HasColumnName("iIDAFP");

                    b.Property<long>("IIdarl")
                        .HasColumnName("iIDARL");

                    b.Property<short>("IIdciuo08")
                        .HasColumnName("iIDCIUO08");

                    b.Property<short>("IIddane")
                        .HasColumnName("iIDDANE");

                    b.Property<long?>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdempresaPaciente")
                        .HasColumnName("iIDEmpresaPaciente");

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<byte?>("IIdestadoAfiliacion")
                        .HasColumnName("iIDEstadoAfiliacion");

                    b.Property<long>("IIdgenero")
                        .HasColumnName("iIDGenero");

                    b.Property<byte?>("IIdregimenAfiliacion")
                        .HasColumnName("iIDRegimenAfiliacion");

                    b.Property<byte?>("IIdtipoAfiliacion")
                        .HasColumnName("iIDTipoAfiliacion");

                    b.Property<long>("IIdtipoDoc")
                        .HasColumnName("iIDTipoDoc");

                    b.Property<string>("TDireccion")
                        .IsRequired()
                        .HasColumnName("tDireccion")
                        .HasMaxLength(50);

                    b.Property<string>("TEmail")
                        .IsRequired()
                        .HasColumnName("tEmail")
                        .HasMaxLength(200);

                    b.Property<string>("TNumeroDocumento")
                        .IsRequired()
                        .HasColumnName("tNumeroDocumento")
                        .HasMaxLength(50);

                    b.Property<string>("TPrimerApellido")
                        .IsRequired()
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(50);

                    b.Property<string>("TPrimerNombre")
                        .IsRequired()
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(50);

                    b.Property<string>("TSegundoApellido")
                        .IsRequired()
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(50);

                    b.Property<string>("TSegundoNombre")
                        .IsRequired()
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(50);

                    b.Property<string>("TTelefono")
                        .IsRequired()
                        .HasColumnName("tTelefono")
                        .HasMaxLength(50);

                    b.HasKey("IIdpaciente");

                    b.HasIndex("IIdafp");

                    b.HasIndex("IIdarl");

                    b.HasIndex("IIdciuo08");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdeps");

                    b.HasIndex("IIdestadoAfiliacion");

                    b.HasIndex("IIdgenero");

                    b.HasIndex("IIdregimenAfiliacion");

                    b.HasIndex("IIdtipoAfiliacion");

                    b.HasIndex("IIdtipoDoc");

                    b.ToTable("tblPacientes","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblParametrosEmpresas", b =>
                {
                    b.Property<short>("IIdparametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDParametro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("TIdentificador")
                        .HasColumnName("tIdentificador")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("TValor")
                        .HasColumnName("tValor");

                    b.HasKey("IIdparametro")
                        .HasName("PK__Parametr__7F00682EEC2DDBB7");

                    b.HasIndex("TIdentificador", "IIdempresa")
                        .IsUnique()
                        .HasName("UQ_tblParametrosEmpresas_tIdentificador")
                        .HasFilter("[tIdentificador] IS NOT NULL AND [iIDEmpresa] IS NOT NULL");

                    b.ToTable("tblParametrosEmpresas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPartesCuerpo", b =>
                {
                    b.Property<long>("IIdparteCuerpo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDParteCuerpo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdpadre")
                        .HasColumnName("iIDPadre");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigo")
                        .IsRequired()
                        .HasColumnName("tCodigo")
                        .HasMaxLength(30);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(200);

                    b.HasKey("IIdparteCuerpo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPartesCuerpo","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPeoresConsecuencias", b =>
                {
                    b.Property<long>("IIdpeorConsecuencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPeorConsecuencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdclasificacionRiesgo")
                        .HasColumnName("iIDClasificacionRiesgo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TPeorConsecuencia")
                        .IsRequired()
                        .HasColumnName("tPeorConsecuencia")
                        .HasMaxLength(300);

                    b.HasKey("IIdpeorConsecuencia");

                    b.ToTable("tblPeoresConsecuencias","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoAfp", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoAfp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoAFP")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<long>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdafp")
                        .HasColumnName("iIDAFP");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoAfp");

                    b.HasIndex("IIdafp");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoAFP","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoCargo", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoCargo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcargo")
                        .HasColumnName("iIDCargo");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoCargo");

                    b.HasIndex("IIdcargo");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoCargo","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEdad", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoEdad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoEdad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdgenero")
                        .HasColumnName("iIDGenero");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TRangoEdad")
                        .IsRequired()
                        .HasColumnName("tRangoEdad")
                        .HasMaxLength(50);

                    b.HasKey("IIdperfilSocioDemoEdad");

                    b.HasIndex("IIdgenero");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoEdad","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEps", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoEps")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoEPS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdeps")
                        .HasColumnName("iIDEPS");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoEps");

                    b.HasIndex("IIdeps");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoEPS","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEstadoCivil", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoEstadoCivil")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdestadoCivil")
                        .HasColumnName("iIDEstadoCivil");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoEstadoCivil");

                    b.HasIndex("IIdestadoCivil");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoEstadoCivil","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoFormacionEduc", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoFormacionEduc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoFormacionEduc")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdformacionEduc")
                        .HasColumnName("iIDFormacionEduc");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoFormacionEduc");

                    b.HasIndex("IIdformacionEduc");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoFormacionEduc","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoSucursal", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoSucursal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<long>("IIdsucursal")
                        .HasColumnName("iIDSucursal");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoSucursal");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IIdsucursal");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoSucursal","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoTipoVincul", b =>
                {
                    b.Property<long>("IIdperfilSocioDemoTipoVincul")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemoTipoVincul")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<int>("CantidadEmpleados");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdperfilSocioDemo")
                        .HasColumnName("iIDPerfilSocioDemo");

                    b.Property<long>("IIdtipoVinculacion")
                        .HasColumnName("iIDTipoVinculacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemoTipoVincul");

                    b.HasIndex("IIdperfilSocioDemo");

                    b.HasIndex("IIdtipoVinculacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemoTipoVincul","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", b =>
                {
                    b.Property<long>("IIdperfilSocioDemografico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfilSocioDemografico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdperfilSocioDemografico");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPerfilSocioDemografico","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfiles", b =>
                {
                    b.Property<int>("IIdperfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPerfil")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(20);

                    b.HasKey("IIdperfil")
                        .HasName("PK_tblPefiles");

                    b.ToTable("tblPerfiles","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPhva", b =>
                {
                    b.Property<long>("IIdphva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPHVA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdsubtablaTipoPhva")
                        .HasColumnName("iIDSubtablaTipoPHVA");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TActividad")
                        .IsRequired()
                        .HasColumnName("tActividad")
                        .HasMaxLength(200);

                    b.Property<string>("TIdvalorTipoPhva")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoPHVA")
                        .HasMaxLength(100);

                    b.HasKey("IIdphva");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPHVA","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccion", b =>
                {
                    b.Property<long>("IIdplanAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanAccion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaFinal")
                        .HasColumnName("dtFechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInicial")
                        .HasColumnName("dtFechaInicial")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<long>("IIdsucursal")
                        .HasColumnName("iIDSucursal");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(1000);

                    b.HasKey("IIdplanAccion");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdresponsable");

                    b.HasIndex("IIdsucursal");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanAccion","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionActividades", b =>
                {
                    b.Property<long>("IIdplanAccionActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanAccionActividad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCompromiso")
                        .HasColumnName("dtFechaCompromiso")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdplanAccionRazon")
                        .HasColumnName("iIDPlanAccionRazon");

                    b.Property<int>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(1000);

                    b.HasKey("IIdplanAccionActividad");

                    b.HasIndex("IIdplanAccionRazon");

                    b.HasIndex("IIdresponsable");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanAccionActividades","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionRazones", b =>
                {
                    b.Property<long>("IIdplanAccionRazon")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanAccionRazon")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdplanAccion")
                        .HasColumnName("iIDPlanAccion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(2000);

                    b.HasKey("IIdplanAccionRazon");

                    b.HasIndex("IIdplanAccion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanAccionRazones","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionTareas", b =>
                {
                    b.Property<long>("IIdplanAccionTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanAccionTarea")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdplanAccionActividad")
                        .HasColumnName("iIDPlanAccionActividad");

                    b.Property<long>("IIdtarea")
                        .HasColumnName("iIDTarea");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdplanAccionTarea");

                    b.HasIndex("IIdplanAccionActividad");

                    b.HasIndex("IIdtarea");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanAccionTareas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacion", b =>
                {
                    b.Property<long>("IIdplanCapacitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanCapacitacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaEvaluacion")
                        .HasColumnName("dtFechaEvaluacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaFinal")
                        .HasColumnName("dtFechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaInicial")
                        .HasColumnName("dtFechaInicial")
                        .HasColumnType("date");

                    b.Property<long>("IIdcapacitador")
                        .HasColumnName("iIDCapacitador");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<int>("IIdsubtablaTipoCapacitador")
                        .HasColumnName("iIDSubtablaTipoCapacitador");

                    b.Property<long>("IIdtarea")
                        .HasColumnName("iIDTarea");

                    b.Property<long>("IIdtipoCapacitacion")
                        .HasColumnName("iIDTipoCapacitacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TIdvalorTipoCapacitador")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoCapacitador")
                        .HasMaxLength(100);

                    b.Property<string>("TObjetivos")
                        .IsRequired()
                        .HasColumnName("tObjetivos")
                        .HasMaxLength(500);

                    b.Property<string>("TRecursos")
                        .IsRequired()
                        .HasColumnName("tRecursos")
                        .HasMaxLength(500);

                    b.Property<string>("TTematica")
                        .IsRequired()
                        .HasColumnName("tTematica")
                        .HasMaxLength(500);

                    b.HasKey("IIdplanCapacitacion");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdresponsable");

                    b.HasIndex("IIdtarea");

                    b.HasIndex("IIdtipoCapacitacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanCapacitacion","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacionAsistentes", b =>
                {
                    b.Property<long>("IIdplanCapacitacionAsistente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanCapacitacionAsistente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempleado")
                        .HasColumnName("iIDEmpleado");

                    b.Property<long>("IIdplanCapacitacion")
                        .HasColumnName("iIDPlanCapacitacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.HasKey("IIdplanCapacitacionAsistente");

                    b.HasIndex("IIdempleado");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanCapacitacionAsistentes","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacionSesiones", b =>
                {
                    b.Property<long>("IIdplanCapacitacionSesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPlanCapacitacionSesion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaFinal")
                        .HasColumnName("dtFechaFinal")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtFechaInicial")
                        .HasColumnName("dtFechaInicial")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("IHoraFinal")
                        .HasColumnName("iHoraFinal");

                    b.Property<TimeSpan>("IHoraInicial")
                        .HasColumnName("iHoraInicial");

                    b.Property<long>("IIdplanCapacitacion")
                        .HasColumnName("iIDPlanCapacitacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(100);

                    b.HasKey("IIdplanCapacitacionSesion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPlanCapacitacionSesiones","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPosiblesRiesgos", b =>
                {
                    b.Property<long>("IIdposibleRiesgo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDPosibleRiesgo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TPosibleRiesgo")
                        .IsRequired()
                        .HasColumnName("tPosibleRiesgo")
                        .HasMaxLength(300);

                    b.HasKey("IIdposibleRiesgo");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblPosiblesRiesgos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblProcedimientos", b =>
                {
                    b.Property<long>("IIdprocedimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDProcedimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<long>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TActividad")
                        .IsRequired()
                        .HasColumnName("tActividad")
                        .HasMaxLength(300);

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.Property<string>("TEntradaSalida")
                        .IsRequired()
                        .HasColumnName("tEntradaSalida")
                        .HasMaxLength(300);

                    b.Property<string>("TVa")
                        .IsRequired()
                        .HasColumnName("tVA")
                        .HasMaxLength(50);

                    b.HasKey("IIdprocedimiento");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdresponsable");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblProcedimientos","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblProcesos", b =>
                {
                    b.Property<long>("IIdproceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtUsuarioCreacion")
                        .HasColumnName("dtUsuarioCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdtipoProceso")
                        .HasColumnName("iIDTipoProceso");

                    b.Property<long?>("ILider")
                        .HasColumnName("iLider");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(20);

                    b.Property<string>("TNombreProceso")
                        .IsRequired()
                        .HasColumnName("tNombreProceso")
                        .HasMaxLength(200);

                    b.HasKey("IIdproceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdtipoProceso");

                    b.HasIndex("ILider");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblProcesos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstados", b =>
                {
                    b.Property<long>("IIdrecobroEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroEstado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdentidad")
                        .HasColumnName("iIDEntidad");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TColor")
                        .HasColumnName("tColor")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroEstado")
                        .HasName("PK_tblEstadosRecobro");

                    b.HasIndex("IIdentidad");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRecobroEstados","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentos", b =>
                {
                    b.Property<int>("IIdrecobroEstadoDocumentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroEstadoDocumentos")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdentidad")
                        .HasColumnName("iIDEntidad");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TColor")
                        .HasColumnName("tColor")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroEstadoDocumentos")
                        .HasName("PK_tblEstadosRecobroDocumentos");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRecobroEstadosDocumentos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentosIdiomas", b =>
                {
                    b.Property<int>("IIdrecobroEstadosDocumentosIdiomas")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroEstadosDocumentosIdiomas")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdidioma")
                        .HasColumnName("iIDIdioma");

                    b.Property<int?>("IIdrecobroEstado")
                        .HasColumnName("iIDRecobroEstado");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TEstadoNombre")
                        .HasColumnName("tEstadoNombre")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroEstadosDocumentosIdiomas")
                        .HasName("PK_tblEstadosRecobroDocumentosIdiomas");

                    b.HasIndex("IIdidioma");

                    b.HasIndex("IIdrecobroEstado");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRecobroEstadosDocumentosIdiomas","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosIdiomas", b =>
                {
                    b.Property<int>("IIdrecobroEstadosIdiomas")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroEstadosIdiomas")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdidioma")
                        .HasColumnName("iIDIdioma");

                    b.Property<long?>("IIdrecobroEstado")
                        .HasColumnName("iIDRecobroEstado");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TEstadoNombre")
                        .HasColumnName("tEstadoNombre")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroEstadosIdiomas")
                        .HasName("PK_tblEstadosRecobroIdiomas");

                    b.HasIndex("IIdidioma");

                    b.HasIndex("IIdrecobroEstado");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRecobroEstadosIdiomas","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobros", b =>
                {
                    b.Property<int>("IIdrecobro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobro")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFinRecobro")
                        .HasColumnName("dtFechaFinRecobro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInicioRecobro")
                        .HasColumnName("dtFechaInicioRecobro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIddivipolaDestino")
                        .HasColumnName("iIDDivipolaDestino");

                    b.Property<int?>("IIddivipolaOrigen")
                        .HasColumnName("iIDDivipolaOrigen");

                    b.Property<int?>("IIdempresaDestino")
                        .HasColumnName("iIDEmpresaDestino");

                    b.Property<long?>("IIdempresaOrigen")
                        .HasColumnName("iIDEmpresaOrigen");

                    b.Property<long?>("IIdrecobroEstado")
                        .HasColumnName("iIDRecobroEstado");

                    b.Property<int?>("IIdsubtablaTipoRecobro")
                        .HasColumnName("iIDSubtablaTipoRecobro");

                    b.Property<int?>("IIdtipoEmpresaDestino")
                        .HasColumnName("iIDTipoEmpresaDestino");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TObservacionRecobro")
                        .HasColumnName("tObservacionRecobro")
                        .HasMaxLength(2000);

                    b.Property<string>("TValorTipoRecobro")
                        .HasColumnName("tValorTipoRecobro")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobro");

                    b.HasIndex("IIdempresaOrigen");

                    b.HasIndex("IIdrecobroEstado");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblRecobros","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentos", b =>
                {
                    b.Property<int>("IIdrecobroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<decimal?>("DImpuestos")
                        .HasColumnName("dImpuestos")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DValorBruto")
                        .HasColumnName("dValorBruto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DValorNeto")
                        .HasColumnName("dValorNeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaDocumento")
                        .HasColumnName("dtFechaDocumento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdestado")
                        .HasColumnName("iIDEstado");

                    b.Property<int?>("IIdrecobro")
                        .HasColumnName("iIDRecobro");

                    b.Property<int?>("IIdsubtablaTipoDocumento")
                        .HasColumnName("iIDSubtablaTipoDocumento");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TNumeroDocumento")
                        .HasColumnName("tNumeroDocumento")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoDocumento")
                        .HasColumnName("tValorTipoDocumento")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumento");

                    b.HasIndex("IIdestado");

                    b.HasIndex("IIdrecobro");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.HasIndex("IIdsubtablaTipoDocumento", "TValorTipoDocumento");

                    b.ToTable("tblRecobrosDocumentos","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroDocumentoSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumentoSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroDocumento")
                        .HasColumnName("iIDRecobroDocumento");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumentoSoporte");

                    b.ToTable("tblRecobrosDocumentosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuarios", b =>
                {
                    b.Property<int>("IIdrecobroDocumentoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumentoUsuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroDocumento")
                        .HasColumnName("iIDRecobroDocumento");

                    b.Property<int?>("IIdsubtablaTipoIdentificacion")
                        .HasColumnName("iIDSubtablaTipoIdentificacion");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TNumeroIdentificacion")
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.Property<string>("TPrimerApellido")
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(200);

                    b.Property<string>("TPrimerNombre")
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TSegundoApellido")
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(200);

                    b.Property<string>("TSegundoNombre")
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoIdentificacion")
                        .HasColumnName("tValorTipoIdentificacion")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumentoUsuario");

                    b.HasIndex("IIdrecobroDocumento");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.HasIndex("IIdsubtablaTipoIdentificacion", "TValorTipoIdentificacion");

                    b.ToTable("tblRecobrosDocumentosUsuarios","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuariosDiagnosticos", b =>
                {
                    b.Property<int>("IIdrecobroDocumentoUsuarioDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnostico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaDiagnostico")
                        .HasColumnName("dtFechaDiagnostico")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaOcurrenciaOrigen")
                        .HasColumnName("dtFechaOcurrenciaOrigen")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIddiagnostico")
                        .HasColumnName("iIDDiagnostico");

                    b.Property<int?>("IIdrecobroDocumentoUsuario")
                        .HasColumnName("iIDRecobroDocumentoUsuario");

                    b.Property<int?>("IIdsubTablaTipoOrigen")
                        .HasColumnName("iIDSubTablaTipoOrigen");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TValorTipoOrigen")
                        .HasColumnName("tValorTipoOrigen")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumentoUsuarioDiagnostico");

                    b.ToTable("tblRecobrosDocumentosUsuariosDiagnosticos","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuariosDiagnosticosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroDocumentoUsuarioDiagnosticoSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnosticoSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnostico");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumentoUsuarioDiagnosticoSoporte");

                    b.ToTable("tblRecobrosDocumentosUsuariosDiagnosticosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuariosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroDocumentoUsuarioSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroDocumentoUsuarioSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroDocumentoUsuario")
                        .HasColumnName("iIDRecobroDocumentoUsuario");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroDocumentoUsuarioSoporte");

                    b.ToTable("tblRecobrosDocumentosUsuariosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobro")
                        .HasColumnName("iIDRecobro");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroSoporte");

                    b.ToTable("tblRecobrosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosElementos", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioElemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioElemento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaEntrega")
                        .HasColumnName("dtFechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFormulacion")
                        .HasColumnName("dtFechaFormulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("ICantidad")
                        .HasColumnName("iCantidad");

                    b.Property<int?>("IIdelemento")
                        .HasColumnName("iIDElemento");

                    b.Property<int?>("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnostico");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigoAutorizacion")
                        .HasColumnName("tCodigoAutorizacion")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreQuienFormula")
                        .HasColumnName("tNombreQuienFormula")
                        .HasMaxLength(300);

                    b.HasKey("IIdrecobroUsuarioElemento");

                    b.HasIndex("IIdrecobroDocumentoUsuarioDiagnostico");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblRecobrosUsuariosElementos","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosElementosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioElementosSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioElementosSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroUsuarioElemento")
                        .HasColumnName("iIDRecobroUsuarioElemento");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroUsuarioElementosSoporte");

                    b.ToTable("tblRecobrosUsuariosElementosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosMedicamentos", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioMedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioMedicamento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaEntrega")
                        .HasColumnName("dtFechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFormulacion")
                        .HasColumnName("dtFechaFormulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("ICantidad")
                        .HasColumnName("iCantidad");

                    b.Property<int?>("IIdmedicamento")
                        .HasColumnName("iIDMedicamento");

                    b.Property<int?>("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnostico");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigoAutorizacion")
                        .HasColumnName("tCodigoAutorizacion")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreQuienFormula")
                        .HasColumnName("tNombreQuienFormula")
                        .HasMaxLength(300);

                    b.HasKey("IIdrecobroUsuarioMedicamento")
                        .HasName("PK_tblRecobroUsuarioMedicamentos");

                    b.ToTable("tblRecobrosUsuariosMedicamentos","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosMedicamentosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioMedicamentoSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioMedicamentoSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroUsuarioMedicamento")
                        .HasColumnName("iIDRecobroUsuarioMedicamento");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroUsuarioMedicamentoSoporte");

                    b.ToTable("tblRecobrosUsuariosMedicamentosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosServiciosProcedimientos", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioServicioProcedimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioServicioProcedimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaEntrega")
                        .HasColumnName("dtFechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFormulacion")
                        .HasColumnName("dtFechaFormulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("ICantidad")
                        .HasColumnName("iCantidad");

                    b.Property<int?>("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasColumnName("iIDRecobroDocumentoUsuarioDiagnostico");

                    b.Property<int?>("IIdservicioProcedimiento")
                        .HasColumnName("iIDServicioProcedimiento");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigoAutorizacion")
                        .HasColumnName("tCodigoAutorizacion")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreQuienFormula")
                        .HasColumnName("tNombreQuienFormula")
                        .HasMaxLength(300);

                    b.HasKey("IIdrecobroUsuarioServicioProcedimiento");

                    b.HasIndex("IIdrecobroDocumentoUsuarioDiagnostico");

                    b.HasIndex("IIdservicioProcedimiento");

                    b.HasIndex("IIdusuarioCreacion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblRecobrosUsuariosServiciosProcedimientos","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosServiciosProcedimientosSoportes", b =>
                {
                    b.Property<int>("IIdrecobroUsuarioServiciosProcedimientosSoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecobroUsuarioServiciosProcedimientosSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdrecobroUsuarioServicioProcedimiento")
                        .HasColumnName("iIDRecobroUsuarioServicioProcedimiento");

                    b.Property<int?>("IIdsubtablaTipoSoporte")
                        .HasColumnName("iIDSubtablaTipoSoporte");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<decimal?>("ITamanoArchivo")
                        .HasColumnName("iTamanoArchivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TDirectorio")
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivo")
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(200);

                    b.Property<string>("TNombreArchivoOriginal")
                        .HasColumnName("tNombreArchivoOriginal")
                        .HasMaxLength(200);

                    b.Property<string>("TValorTipoSoporte")
                        .HasColumnName("tValorTipoSoporte")
                        .HasMaxLength(200);

                    b.HasKey("IIdrecobroUsuarioServiciosProcedimientosSoporte");

                    b.ToTable("tblRecobrosUsuariosServiciosProcedimientosSoportes","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecursos", b =>
                {
                    b.Property<long>("IIdrecurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRecurso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("ICantidadValor")
                        .HasColumnName("iCantidadValor");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdsubtablaTipoRecurso")
                        .HasColumnName("iIDSubtablaTipoRecurso");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300);

                    b.Property<string>("TIdvalorTipoRecurso")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoRecurso")
                        .HasMaxLength(100);

                    b.HasKey("IIdrecurso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRecursos","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRegimenAfiliacion", b =>
                {
                    b.Property<byte>("IId")
                        .HasColumnName("iID");

                    b.Property<DateTime>("DtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblRegim__DC512D720DE71FBD");

                    b.ToTable("tblRegimenAfiliacion","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsi", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdformato")
                        .HasColumnName("iIDFormato");

                    b.Property<DateTime>("DtFechaRhsi")
                        .HasColumnName("dtFechaRHSI")
                        .HasColumnType("date");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<string>("TArl")
                        .IsRequired()
                        .HasColumnName("tARL")
                        .HasMaxLength(100);

                    b.Property<string>("TCiudad")
                        .IsRequired()
                        .HasColumnName("tCiudad")
                        .HasMaxLength(50);

                    b.Property<string>("TDepartamento")
                        .IsRequired()
                        .HasColumnName("tDepartamento")
                        .HasMaxLength(50);

                    b.Property<string>("TDireccion")
                        .IsRequired()
                        .HasColumnName("tDireccion")
                        .HasMaxLength(100);

                    b.Property<string>("TNit")
                        .IsRequired()
                        .HasColumnName("tNit")
                        .HasMaxLength(50);

                    b.Property<string>("TNombreEmpresa")
                        .IsRequired()
                        .HasColumnName("tNombreEmpresa")
                        .HasMaxLength(100);

                    b.Property<string>("TPais")
                        .IsRequired()
                        .HasColumnName("tPais")
                        .HasMaxLength(50);

                    b.Property<string>("TRepresentanteLegal")
                        .IsRequired()
                        .HasColumnName("tRepresentanteLegal")
                        .HasMaxLength(150);

                    b.Property<string>("TSucursales")
                        .IsRequired()
                        .HasColumnName("tSucursales")
                        .HasMaxLength(500);

                    b.Property<string>("TTelefono")
                        .IsRequired()
                        .HasColumnName("tTelefono")
                        .HasMaxLength(50);

                    b.HasKey("IIdempresa", "IIdformato", "DtFechaRhsi")
                        .HasName("PK_administracion.tblRHSI");

                    b.HasIndex("IIdformato");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblRHSI","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsiactividadEconomica", b =>
                {
                    b.Property<long>("IIdrhsiactividadEconomica")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRHSIActividadEconomica")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaRhsi")
                        .HasColumnName("dtFechaRHSI")
                        .HasColumnType("date");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdformato")
                        .HasColumnName("iIDFormato");

                    b.Property<string>("TActividadEconomica")
                        .IsRequired()
                        .HasColumnName("tActividadEconomica")
                        .HasMaxLength(1000);

                    b.Property<string>("TCodigo")
                        .IsRequired()
                        .HasColumnName("tCodigo")
                        .HasMaxLength(50);

                    b.HasKey("IIdrhsiactividadEconomica");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdformato");

                    b.ToTable("tblRHSIActividadEconomica","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsiriesgos", b =>
                {
                    b.Property<long>("IIdrhsiriesgo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRHSIRiesgo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaRhsi")
                        .HasColumnName("dtFechaRHSI")
                        .HasColumnType("date");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdformato")
                        .HasColumnName("iIDFormato");

                    b.Property<string>("TArea")
                        .IsRequired()
                        .HasColumnName("tArea")
                        .HasMaxLength(50);

                    b.Property<string>("TTipoRiesgo")
                        .IsRequired()
                        .HasColumnName("tTipoRiesgo")
                        .HasMaxLength(50);

                    b.Property<string>("Triesgo")
                        .IsRequired()
                        .HasColumnName("TRiesgo")
                        .HasMaxLength(1000);

                    b.HasKey("IIdrhsiriesgo")
                        .HasName("PK_administracion.tblRHSIRiesgos");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdformato");

                    b.ToTable("tblRHSIRiesgos","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoAnalisis", b =>
                {
                    b.Property<long>("IIdriesgoAnalisis")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoAnalisis")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdriesgoIdentificacion")
                        .HasColumnName("iIDRiesgoIdentificacion");

                    b.Property<int>("IIdsubtablaRiesgoImpacto")
                        .HasColumnName("iIDSubtablaRiesgoImpacto");

                    b.Property<int>("IIdsubtablaRiesgoProbabilidad")
                        .HasColumnName("iIDSubtablaRiesgoProbabilidad");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TEvaluacion")
                        .IsRequired()
                        .HasColumnName("tEvaluacion")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRiesgoImpacto")
                        .IsRequired()
                        .HasColumnName("tIDValorRiesgoImpacto")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRiesgoProbabilidad")
                        .IsRequired()
                        .HasColumnName("tIDValorRiesgoProbabilidad")
                        .HasMaxLength(100);

                    b.HasKey("IIdriesgoAnalisis");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoAnalisis","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoCausas", b =>
                {
                    b.Property<long>("IIdriesgoCausa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoCausa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdriesgoIdentificacion")
                        .HasColumnName("iIDRiesgoIdentificacion");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TCausa")
                        .IsRequired()
                        .HasColumnName("tCausa")
                        .HasMaxLength(250);

                    b.HasKey("IIdriesgoCausa");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoCausas","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoControlValoraciones", b =>
                {
                    b.Property<long>("IIdriesgoControlValoracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoControlValoracion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdcontrolEficacia")
                        .HasColumnName("iIDControlEficacia");

                    b.Property<long>("IIdcontrolFrecuencia")
                        .HasColumnName("iIDControlFrecuencia");

                    b.Property<long>("IIdcontrolHerramienta")
                        .HasColumnName("iIDControlHerramienta");

                    b.Property<long>("IIdcontrolProcedimiento")
                        .HasColumnName("iIDControlProcedimiento");

                    b.Property<long>("IIdcontrolResponsable")
                        .HasColumnName("iIDControlResponsable");

                    b.Property<long>("IIdriesgoControl")
                        .HasColumnName("iIDRiesgoControl");

                    b.Property<int>("ITotal")
                        .HasColumnName("iTotal");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.HasKey("IIdriesgoControlValoracion");

                    b.HasIndex("IIdcontrolEficacia");

                    b.HasIndex("IIdcontrolFrecuencia");

                    b.HasIndex("IIdcontrolHerramienta");

                    b.HasIndex("IIdcontrolProcedimiento");

                    b.HasIndex("IIdcontrolResponsable");

                    b.HasIndex("IIdriesgoControl");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoControlValoraciones","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoControles", b =>
                {
                    b.Property<long>("IIdriesgoControl")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoControl")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdriesgoIdentificacion")
                        .HasColumnName("iIDRiesgoIdentificacion");

                    b.Property<int>("IIdsubtablaTipoControl")
                        .HasColumnName("iIDSubtablaTipoControl");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TControl")
                        .IsRequired()
                        .HasColumnName("tControl")
                        .HasMaxLength(250);

                    b.Property<string>("TIdvalorTipoControl")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoControl")
                        .HasMaxLength(100);

                    b.HasKey("IIdriesgoControl");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoControles","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoEfectos", b =>
                {
                    b.Property<long>("IIdriesgoEfecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoEfecto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdriesgoIdentificacion")
                        .HasColumnName("iIDRiesgoIdentificacion");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TEfecto")
                        .IsRequired()
                        .HasColumnName("tEfecto")
                        .HasMaxLength(250);

                    b.HasKey("IIdriesgoEfecto");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoEfectos","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoIdentificacion", b =>
                {
                    b.Property<long>("IIdriesgoIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoIdentificacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdproceso")
                        .HasColumnName("iIDProceso");

                    b.Property<int>("IIdsubtablaTipoRiesgo")
                        .HasColumnName("iIDSubtablaTipoRiesgo");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TDescripcionAgente")
                        .IsRequired()
                        .HasColumnName("tDescripcionAgente")
                        .HasMaxLength(250);

                    b.Property<string>("TDescripcionRiesgo")
                        .IsRequired()
                        .HasColumnName("tDescripcionRiesgo")
                        .HasMaxLength(250);

                    b.Property<string>("TIdvalorTipoRiesgo")
                        .IsRequired()
                        .HasColumnName("tIDValorTipoRiesgo")
                        .HasMaxLength(100);

                    b.Property<string>("TNombreRiesgo")
                        .IsRequired()
                        .HasColumnName("tNombreRiesgo")
                        .HasMaxLength(100);

                    b.HasKey("IIdriesgoIdentificacion");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdproceso");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoIdentificacion","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoResidual", b =>
                {
                    b.Property<long>("IIdriesgoResidual")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoResidual")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdriesgoIdentificacion")
                        .HasColumnName("iIDRiesgoIdentificacion");

                    b.Property<int?>("IIdsubtablaOpcionManejo")
                        .HasColumnName("iIDSubtablaOpcionManejo");

                    b.Property<int>("IIdsubtablaRiesgoImpacto")
                        .HasColumnName("iIDSubtablaRiesgoImpacto");

                    b.Property<int>("IIdsubtablaRiesgoProbabilidad")
                        .HasColumnName("iIDSubtablaRiesgoProbabilidad");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TIdvalorOpcionManejo")
                        .HasColumnName("tIDValorOpcionManejo")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRiesgoImpacto")
                        .IsRequired()
                        .HasColumnName("tIDValorRiesgoImpacto")
                        .HasMaxLength(100);

                    b.Property<string>("TIdvalorRiesgoProbabilidad")
                        .IsRequired()
                        .HasColumnName("tIDValorRiesgoProbabilidad")
                        .HasMaxLength(100);

                    b.Property<string>("TValoracion")
                        .IsRequired()
                        .HasColumnName("tValoracion")
                        .HasMaxLength(100);

                    b.HasKey("IIdriesgoResidual");

                    b.HasIndex("IIdriesgoIdentificacion");

                    b.HasIndex("IUsuarioInsercion");

                    b.ToTable("tblRiesgoResidual","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoResidualAcciones", b =>
                {
                    b.Property<long>("IIdriesgoResidualAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDRiesgoResidualAccion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdresponsable")
                        .HasColumnName("iIDResponsable");

                    b.Property<long>("IIdriesgoResidual")
                        .HasColumnName("iIDRiesgoResidual");

                    b.Property<int>("IUsuarioInsercion")
                        .HasColumnName("iUsuarioInsercion");

                    b.Property<string>("TAccion")
                        .IsRequired()
                        .HasColumnName("tAccion")
                        .HasMaxLength(200);

                    b.Property<string>("TIndicadores")
                        .IsRequired()
                        .HasColumnName("tIndicadores")
                        .HasMaxLength(200);

                    b.HasKey("IIdriesgoResidualAccion");

                    b.HasIndex("IIdriesgoResidual");

                    b.ToTable("tblRiesgoResidualAcciones","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblServiciosProcedimientos", b =>
                {
                    b.Property<int>("IIdservicioProcedimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDServicioProcedimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdpais")
                        .HasColumnName("iIDPais");

                    b.Property<int?>("IIdusuarioInsercion")
                        .HasColumnName("iIDUsuarioInsercion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TCodigo")
                        .HasColumnName("tCodigo")
                        .HasMaxLength(200);

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(300);

                    b.HasKey("IIdservicioProcedimiento");

                    b.HasIndex("IIdusuarioInsercion");

                    b.HasIndex("IIdusuarioModificacion");

                    b.ToTable("tblServiciosProcedimientos","administracion");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoa", b =>
                {
                    b.Property<long>("IIdsoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDSOA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdnumeral")
                        .HasColumnName("iIDNumeral");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TAplicacion")
                        .IsRequired()
                        .HasColumnName("tAplicacion")
                        .HasMaxLength(300);

                    b.Property<string>("TJustificacion")
                        .IsRequired()
                        .HasColumnName("tJustificacion")
                        .HasMaxLength(300);

                    b.HasKey("IIdsoa");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdnumeral");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblSOA","proceso");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoportes", b =>
                {
                    b.Property<long>("IIdsoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdclaseSoporte")
                        .HasColumnName("iIDClaseSoporte");

                    b.Property<long>("IIddocumento")
                        .HasColumnName("iIDDocumento");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdplataforma")
                        .HasColumnName("iIDPlataforma");

                    b.Property<long>("IIdtipoDocumento")
                        .HasColumnName("iIDTipoDocumento");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int>("ITamañoArchivo")
                        .HasColumnName("iTamañoArchivo");

                    b.Property<string>("TDirectorio")
                        .IsRequired()
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(4000);

                    b.Property<string>("TNombreArchivo")
                        .IsRequired()
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(4000);

                    b.HasKey("IIdsoporte")
                        .HasName("PK_tblSoportes_1");

                    b.HasIndex("IIdclaseSoporte");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdtipoDocumento");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblSoportes","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoportes1", b =>
                {
                    b.Property<long>("IIdsoporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDSoporte")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdjurisprudencia")
                        .HasColumnName("iIDJurisprudencia");

                    b.Property<int>("IIdplataforma")
                        .HasColumnName("iIDPlataforma");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int>("ITamañoArchivo")
                        .HasColumnName("iTamañoArchivo");

                    b.Property<string>("TDirectorio")
                        .IsRequired()
                        .HasColumnName("tDirectorio")
                        .HasMaxLength(4000);

                    b.Property<string>("TNombreArchivo")
                        .IsRequired()
                        .HasColumnName("tNombreArchivo")
                        .HasMaxLength(4000);

                    b.HasKey("IIdsoporte");

                    b.HasIndex("IIdjurisprudencia");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblSoportes","jurisprudencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSucursalRiesgo", b =>
                {
                    b.Property<long>("IIdsucursal")
                        .HasColumnName("iIDSucursal");

                    b.Property<long>("IIdclaseRiesgo")
                        .HasColumnName("iIDClaseRiesgo");

                    b.Property<int>("IIdcodigoRiesgo")
                        .HasColumnName("iIDCodigoRiesgo");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.HasKey("IIdsucursal", "IIdclaseRiesgo", "IIdcodigoRiesgo");

                    b.HasIndex("IIdclaseRiesgo");

                    b.ToTable("tblSucursalRiesgo","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", b =>
                {
                    b.Property<long>("IIdsucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDSucursal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long?>("IIdestado")
                        .HasColumnName("iIDEstado");

                    b.Property<long>("IIdubicacion")
                        .HasColumnName("iIDUbicacion");

                    b.Property<int>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModifiacion")
                        .HasColumnName("iIDUsuarioModifiacion");

                    b.Property<string>("TCodigo")
                        .IsRequired()
                        .HasColumnName("tCodigo")
                        .HasMaxLength(50);

                    b.Property<string>("TDireccion")
                        .IsRequired()
                        .HasColumnName("tDireccion")
                        .HasMaxLength(300);

                    b.Property<string>("TEmail")
                        .HasColumnName("tEmail")
                        .HasMaxLength(50);

                    b.Property<string>("TFax")
                        .HasColumnName("tFax")
                        .HasMaxLength(10);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(100);

                    b.Property<string>("TSigla")
                        .IsRequired()
                        .HasColumnName("tSigla")
                        .HasMaxLength(10);

                    b.Property<string>("TTelefono")
                        .IsRequired()
                        .HasColumnName("tTelefono")
                        .HasMaxLength(50);

                    b.Property<string>("TTelefono2")
                        .HasColumnName("tTelefono2")
                        .HasMaxLength(50);

                    b.HasKey("IIdsucursal");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestado");

                    b.HasIndex("IIdubicacion");

                    b.HasIndex("IIdusuarioCreacion");

                    b.ToTable("tblSucursalesEmpresas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTareaActividades", b =>
                {
                    b.Property<long>("IIdtareaActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDTareaActividad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaFin")
                        .HasColumnName("dtFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaInicio")
                        .HasColumnName("dtFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdtarea")
                        .HasColumnName("iIDTarea");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(500);

                    b.HasKey("IIdtareaActividad");

                    b.HasIndex("IIdtarea");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblTareaActividades","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTareas", b =>
                {
                    b.Property<long>("IIdtarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDTarea")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaFin")
                        .HasColumnName("dtFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInicio")
                        .HasColumnName("dtFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaInsercion")
                        .HasColumnName("dtFechaInsercion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaVencimiento")
                        .HasColumnName("dtFechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<long>("IIdestadoTarea")
                        .HasColumnName("iIDEstadoTarea");

                    b.Property<long>("IIdtipoTarea")
                        .HasColumnName("iIDTipoTarea");

                    b.Property<int>("IIdusuarioInsecion")
                        .HasColumnName("iIDUsuarioInsecion");

                    b.Property<int>("IIdusuarioTarea")
                        .HasColumnName("iIDUsuarioTarea");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(1000);

                    b.HasKey("IIdtarea");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IIdestadoTarea");

                    b.HasIndex("IIdtipoTarea");

                    b.HasIndex("IIdusuarioInsecion");

                    b.HasIndex("IIdusuarioTarea");

                    b.ToTable("tblTareas","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTemplateNotificaciones", b =>
                {
                    b.Property<byte>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("TDescripcion")
                        .IsRequired()
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TTemplate")
                        .IsRequired()
                        .HasColumnName("tTemplate");

                    b.HasKey("IId")
                        .HasName("PK__tblTempl__DC512D72314575BF");

                    b.HasIndex("TNombre")
                        .IsUnique()
                        .HasName("UQ_tblTemplateNotificaciones");

                    b.ToTable("tblTemplateNotificaciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoAfiliacion", b =>
                {
                    b.Property<byte>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblTipoA__DC512D721A0FFEF8");

                    b.ToTable("tblTipoAfiliacion","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoCie", b =>
                {
                    b.Property<int>("IIdtipoCie")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDTipoCie")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TTipoCie")
                        .IsRequired()
                        .HasColumnName("tTipoCie")
                        .HasMaxLength(50);

                    b.HasKey("IIdtipoCie");

                    b.ToTable("tblTipoCIE","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoEmpresa", b =>
                {
                    b.Property<int>("IIdtipoEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDTipoEmpresa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime?>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtFechaModificacion")
                        .HasColumnName("dtFechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("IIdusuarioCreacion")
                        .HasColumnName("iIDUsuarioCreacion");

                    b.Property<int?>("IIdusuarioModificacion")
                        .HasColumnName("iIDUsuarioModificacion");

                    b.Property<string>("TTipoEmpresa")
                        .HasColumnName("tTipoEmpresa")
                        .HasMaxLength(200);

                    b.HasKey("IIdtipoEmpresa");

                    b.ToTable("tblTipoEmpresa","recobro");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoProceso", b =>
                {
                    b.Property<long>("IIdtipoProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDTipoProceso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TCodigoTipoProceso")
                        .HasColumnName("tCodigoTipoProceso")
                        .HasMaxLength(50);

                    b.Property<string>("TNombreTipoProceso")
                        .IsRequired()
                        .HasColumnName("tNombreTipoProceso")
                        .HasMaxLength(200);

                    b.HasKey("IIdtipoProceso");

                    b.HasIndex("IIdempresa");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblTipoProceso","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoSociedadEmpresa", b =>
                {
                    b.Property<byte>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblTipoS__DC512D720EDAFB87");

                    b.HasIndex("TNombre")
                        .IsUnique()
                        .HasName("UQ_tNombreSociedad");

                    b.ToTable("tblTipoSociedadEmpresa");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTiposArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tblTiposArchivo","files");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTiposNotificaciones", b =>
                {
                    b.Property<byte>("Iid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bActivo")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TDescripcion")
                        .HasColumnName("tDescripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TNombre")
                        .IsRequired()
                        .HasColumnName("tNombre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Iid")
                        .HasName("PK__tblTipos__C4972B4C30B48AA3");

                    b.HasIndex("TNombre")
                        .IsUnique()
                        .HasName("UQ_tblTiposNotificaciones");

                    b.ToTable("tblTiposNotificaciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTranscripciones", b =>
                {
                    b.Property<int>("Iid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtfechaCreacion")
                        .HasColumnName("DTFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<short?>("IDiasIncapacidad")
                        .HasColumnName("iDiasIncapacidad");

                    b.Property<string>("IedadPaciente")
                        .HasColumnName("IEdadPaciente")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("IidDiagnostico")
                        .HasColumnName("IIdDiagnostico");

                    b.Property<short?>("OcrproviderId")
                        .HasColumnName("OCRProviderId");

                    b.Property<string>("OcrserviceText")
                        .HasColumnName("OCRServiceText")
                        .IsUnicode(false);

                    b.Property<string>("Ocrtext")
                        .HasColumnName("OCRText")
                        .IsUnicode(false);

                    b.Property<string>("TblobId")
                        .HasColumnName("TBlobId")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("TcentroAtencion")
                        .HasColumnName("TCentroAtencion")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TclaseIncapacidad")
                        .HasColumnName("TClaseIncapacidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TcodigoExternoIps")
                        .HasColumnName("TCodigoExternoIPS")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Tdiagnostico")
                        .HasColumnName("TDiagnostico")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TfechaCreacion")
                        .HasColumnName("TFechaCreacion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TfechaFinal")
                        .HasColumnName("TFechaFinal")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TfechaInicial")
                        .HasColumnName("TFechaInicial")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TgeneroPaciente")
                        .HasColumnName("TGeneroPaciente")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TidCie10")
                        .HasColumnName("TIdCie10")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TnombreEps")
                        .HasColumnName("TNombreEPS")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TnombreIps")
                        .HasColumnName("TNombreIPS")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TnombreMedico")
                        .HasColumnName("TNombreMedico")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TnombrePaciente")
                        .HasColumnName("TNombrePaciente")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TnumeroIdentificacionEps")
                        .HasColumnName("TNumeroIdentificacionEPS")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TnumeroIdentificacionIps")
                        .HasColumnName("TNumeroIdentificacionIPS")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TnumeroIdentificacionPaciente")
                        .HasColumnName("TNumeroIdentificacionPaciente")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TnumeroIncapacidad")
                        .HasColumnName("TNumeroIncapacidad")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TregistroMedico")
                        .HasColumnName("TRegistroMedico")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TtipoIdentificacionIps")
                        .HasColumnName("TTipoIdentificacionIPS")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TtipoIdentificacionMedico")
                        .HasColumnName("TTIpoIdentificacionMedico")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TtipoIdentificacionPaciente")
                        .HasColumnName("TTipoIdentificacionPaciente")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Iid")
                        .HasName("PK__tblTrans__C4972BAC02938F0D");

                    b.ToTable("tblTranscripciones","Incapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuarios", b =>
                {
                    b.Property<int>("IIdusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDUsuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<bool>("BCambioPassword")
                        .HasColumnName("bCambioPassword");

                    b.Property<DateTime>("DtFechaCambioPassword")
                        .HasColumnName("dtFechaCambioPassword")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("IIdgenero")
                        .HasColumnName("iIDGenero");

                    b.Property<int?>("IIdsubtablaTipoDoc")
                        .HasColumnName("iIDSubtablaTipoDoc");

                    b.Property<long>("IIdtipoDoc")
                        .HasColumnName("iIDTipoDoc");

                    b.Property<int>("IIdusuarioCreador")
                        .HasColumnName("iIDUsuarioCreador");

                    b.Property<long?>("IPerfilDocumentos")
                        .HasColumnName("iPerfilDocumentos");

                    b.Property<string>("TCelular")
                        .HasColumnName("tCelular")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TClave")
                        .IsRequired()
                        .HasColumnName("tClave")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TEmail")
                        .IsRequired()
                        .HasColumnName("tEmail")
                        .HasMaxLength(50);

                    b.Property<string>("TIdnumDoc")
                        .IsRequired()
                        .HasColumnName("tIDNumDoc")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("TIdvalorTipoDoc")
                        .HasColumnName("tIDValorTipoDoc")
                        .HasMaxLength(50);

                    b.Property<string>("TPrimerApellido")
                        .IsRequired()
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(50);

                    b.Property<string>("TPrimerNombre")
                        .IsRequired()
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(50);

                    b.Property<string>("TSegundoApellido")
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(50);

                    b.Property<string>("TSegundoNombre")
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(50);

                    b.Property<string>("TTelefono")
                        .HasColumnName("tTelefono")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TUsuario")
                        .IsRequired()
                        .HasColumnName("tUsuario")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IIdusuario");

                    b.HasIndex("IIdtipoDoc");

                    b.ToTable("tblUsuarios","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuariosEmpresas", b =>
                {
                    b.Property<long>("IIdempresa")
                        .HasColumnName("iIDEmpresa");

                    b.Property<int>("IIdusuario")
                        .HasColumnName("iIDUsuario");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.HasKey("IIdempresa", "IIdusuario");

                    b.HasIndex("IIdusuario");

                    b.ToTable("tblUsuariosEmpresas","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuariosNotificaciones", b =>
                {
                    b.Property<short>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bActivo")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("IIdips")
                        .HasColumnName("iIDIPS");

                    b.Property<string>("TCargo")
                        .IsRequired()
                        .HasColumnName("tCargo")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TEmail")
                        .IsRequired()
                        .HasColumnName("tEmail")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("TNombreEmpresa")
                        .IsRequired()
                        .HasColumnName("tNombreEmpresa")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TNumeroCelular")
                        .HasColumnName("tNumeroCelular")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TPrimerApellido")
                        .IsRequired()
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TPrimerNombre")
                        .IsRequired()
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TSegundoApellido")
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TSegundoNombre")
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IId")
                        .HasName("PK__tblUsuar__DC512D72DF444916");

                    b.ToTable("tblUsuariosNotificaciones");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuariosPerfiles", b =>
                {
                    b.Property<int>("IIdusuario")
                        .HasColumnName("iIDUsuario");

                    b.Property<int>("IIdperfil")
                        .HasColumnName("iIDPerfil");

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.HasKey("IIdusuario", "IIdperfil")
                        .HasName("PK__tblUsuar__757DB5881C870FD6");

                    b.HasIndex("IIdperfil");

                    b.ToTable("tblUsuariosPerfiles","seguridad");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblVendedor", b =>
                {
                    b.Property<long>("IIdvendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iIDVendedor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BActivo")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnName("dtFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long>("IIdempresaGestora")
                        .HasColumnName("iIDEmpresaGestora");

                    b.Property<long>("IIdtipoIdentificacion")
                        .HasColumnName("iIDTipoIdentificacion");

                    b.Property<int>("IUsuarioCreacion")
                        .HasColumnName("iUsuarioCreacion");

                    b.Property<string>("TNumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("tNumeroIdentificacion")
                        .HasMaxLength(200);

                    b.Property<string>("TPrimerApellido")
                        .IsRequired()
                        .HasColumnName("tPrimerApellido")
                        .HasMaxLength(100);

                    b.Property<string>("TPrimerNombre")
                        .IsRequired()
                        .HasColumnName("tPrimerNombre")
                        .HasMaxLength(100);

                    b.Property<string>("TSegundoApellido")
                        .HasColumnName("tSegundoApellido")
                        .HasMaxLength(100);

                    b.Property<string>("TSegundoNombre")
                        .HasColumnName("tSegundoNombre")
                        .HasMaxLength(100);

                    b.HasKey("IIdvendedor");

                    b.HasIndex("IIdempresaGestora");

                    b.HasIndex("IIdtipoIdentificacion");

                    b.HasIndex("IUsuarioCreacion");

                    b.ToTable("tblVendedor","negocio");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TerapeuticaPosibles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TerapeuticaPosible");

                    b.HasKey("Id");

                    b.ToTable("TerapeuticaPosibles","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TipoSecuelas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoSecuela");

                    b.HasKey("Id");

                    b.ToTable("TipoSecuelas","Conceptos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.ConceptoRehabilitacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.Conceptos", "Conceptos")
                        .WithMany()
                        .HasForeignKey("ConceptosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.ConceptosMedicos", "ConceptosMedicos")
                        .WithMany()
                        .HasForeignKey("ConceptosMedicosId");

                    b.HasOne("Kustodya.ApplicationCore.Entities.DescripcionSecuelas", "DescripcionSecuelas")
                        .WithMany()
                        .HasForeignKey("DescripcionSecuelasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.Etiologias", "Etiologias")
                        .WithMany()
                        .HasForeignKey("EtiologiasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.FinalidadTratamientos", "FinalidadTratamientos")
                        .WithMany()
                        .HasForeignKey("FinalidadTratamientosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.NotaRemisiones", "NotaRemisiones")
                        .WithMany()
                        .HasForeignKey("NotaRemisionesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.PlazoCorto", "PlazoCorto")
                        .WithMany()
                        .HasForeignKey("PlazoCortoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.PlazoLargo", "PlazoLargo")
                        .WithMany()
                        .HasForeignKey("PlazoLargoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.Pronosticos", "Pronosticos")
                        .WithMany()
                        .HasForeignKey("PronosticosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.Remisiones", "Remisiones")
                        .WithMany()
                        .HasForeignKey("RemisionesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDiagnosticos", "TblDiagnosticos")
                        .WithMany()
                        .HasForeignKey("TblDiagnosticosIIddiagnostico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPacientes", "TblPacientes")
                        .WithMany()
                        .HasForeignKey("TblPacientesIIdpaciente");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TipoSecuelas", "TipoSecuelas")
                        .WithMany()
                        .HasForeignKey("TipoSecuelasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.Incapacidad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.Afiliado", "Afiliado")
                        .WithMany()
                        .HasForeignKey("AfiliadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdactividadEconomicaNavigation")
                        .WithMany("TblAccidentesTrabajoIIdactividadEconomicaNavigation")
                        .HasForeignKey("IIdactividadEconomica")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdcargoTrabNavigation")
                        .WithMany("TblAccidentesTrabajo")
                        .HasForeignKey("IIdcargoTrab")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAccidentesTrabajo")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepstrabajadorNavigation")
                        .WithMany("TblAccidentesTrabajo")
                        .HasForeignKey("IIdepstrabajador")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoEventoNavigation")
                        .WithMany("TblAccidentesTrabajoIIdtipoEventoNavigation")
                        .HasForeignKey("IIdtipoEvento")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores6");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblAccidentesTrabajoIIdtipoIdentificacionNavigation")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoVinculaciontrabNavigation")
                        .WithMany("TblAccidentesTrabajoIIdtipoVinculaciontrabNavigation")
                        .HasForeignKey("IIdtipoVinculaciontrab")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores4");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoVinculadorNavigation")
                        .WithMany("TblAccidentesTrabajoIIdtipoVinculadorNavigation")
                        .HasForeignKey("IIdtipoVinculador")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdtrabajadorNavigation")
                        .WithMany("TblAccidentesTrabajo")
                        .HasForeignKey("IIdtrabajador")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdubicacionSucEmpleadorNavigation")
                        .WithMany("TblAccidentesTrabajoIIdubicacionSucEmpleadorNavigation")
                        .HasForeignKey("IIdubicacionSucEmpleador")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblDivipola");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdubicacionTrabajadorNavigation")
                        .WithMany("TblAccidentesTrabajoIIdubicacionTrabajadorNavigation")
                        .HasForeignKey("IIdubicacionTrabajador")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores3");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IJornadaNavigation")
                        .WithMany("TblAccidentesTrabajoIJornadaNavigation")
                        .HasForeignKey("IJornada")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblMultivalores5");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAccidentesTrabajo")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAccidentesTrabajo_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensual", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdclaseActaNavigation")
                        .WithMany("TblActaMensualIIdclaseActaNavigation")
                        .HasForeignKey("IIdclaseActa")
                        .HasConstraintName("FK_tblActaMensual_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblActaMensual")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblActaMensual_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdubicacionNavigation")
                        .WithMany("TblActaMensual")
                        .HasForeignKey("IIdubicacion")
                        .HasConstraintName("FK_tblActaMensual_tblDivipola");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ITipoReunionNavigation")
                        .WithMany("TblActaMensualITipoReunionNavigation")
                        .HasForeignKey("ITipoReunion")
                        .HasConstraintName("FK_tblActaMensual_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblActaMensual")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblActaMensual_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualCompromisoActividades", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblActaMensualCompromisos", "IIdactaMensualCompromisoNavigation")
                        .WithMany("TblActaMensualCompromisoActividades")
                        .HasForeignKey("IIdactaMensualCompromiso")
                        .HasConstraintName("FK_tblActaMensualCompromisoActividades_tblActaMensualCompromisos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblActaMensualCompromisoActividades")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblActaMensualCompromisoActividades_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualCompromisos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblActaMensual", "IActaConfirmacionNavigation")
                        .WithMany("TblActaMensualCompromisos")
                        .HasForeignKey("IActaConfirmacion")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblActaMensual1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IEstadoNavigation")
                        .WithMany("TblActaMensualCompromisos")
                        .HasForeignKey("IEstado")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblActaMensual");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblActaMensualCompromisos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioAsignadoNavigation")
                        .WithMany("TblActaMensualCompromisosIUsuarioAsignadoNavigation")
                        .HasForeignKey("IUsuarioAsignado")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioConfirmacionNavigation")
                        .WithMany("TblActaMensualCompromisosIUsuarioConfirmacionNavigation")
                        .HasForeignKey("IUsuarioConfirmacion")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblUsuarios1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblActaMensualCompromisosIUsuarioCreacionNavigation")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblActaMensualCompromisos_tblUsuarios2");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActaMensualParticipantes", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblActaMensual", "IIdactaMensualNavigation")
                        .WithMany("TblActaMensualParticipantes")
                        .HasForeignKey("IIdactaMensual")
                        .HasConstraintName("FK_tblActaMensualParticipantes_tblActaMensual");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdempleadoNavigation")
                        .WithMany("TblActaMensualParticipantes")
                        .HasForeignKey("IIdempleado")
                        .HasConstraintName("FK_tblActaMensualParticipantes_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblActaMensualParticipantes")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblActaMensualParticipantes_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblActas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdclaseActaNavigation")
                        .WithMany("TblActasIIdclaseActaNavigation")
                        .HasForeignKey("IIdclaseActa")
                        .HasConstraintName("FK_tblActas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblActas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblActas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoActaNavigation")
                        .WithMany("TblActasIIdtipoActaNavigation")
                        .HasForeignKey("IIdtipoActa")
                        .HasConstraintName("FK_tblActas_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblActas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblActas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAfp", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblAfp")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblAFP_tblAFP");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblAfp")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblAFP_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblArls", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblArls")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblARLs_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblArls")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblARLs_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAsignacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdcargoNavigation")
                        .WithMany("TblAsignacion")
                        .HasForeignKey("IIdcargo")
                        .HasConstraintName("FK_tblAsignacion_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAsignacion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAsignacion_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblAsignacion")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblAsignacion_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblAsignacion")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblAsignacion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtanalisisCausas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtanalisisCausas")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATAnalisisCausas_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtanalisisCausas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATAnalisisCausas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtequiposProteccion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdacidenteTrabajoNavigation")
                        .WithMany("TblAtequiposProteccion")
                        .HasForeignKey("IIdacidenteTrabajo")
                        .HasConstraintName("FK_tblATEquiposProteccion_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdequipoProteccionNavigation")
                        .WithMany("TblAtequiposProteccion")
                        .HasForeignKey("IIdequipoProteccion")
                        .HasConstraintName("FK_tblATEquiposProteccion_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtequiposProteccion")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATEquiposProteccion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtinformacionSuceso", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtinformacionSuceso")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATInformacionSuceso_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtinformacionSuceso")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATInformacionSuceso_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtmedidasAccionesCorrectivas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtmedidasAccionesCorrectivas")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATMedidasAccionesCorrectivas_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtmedidasAccionesCorrectivas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATMedidasAccionesCorrectivas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtmedidasSeguridad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtmedidasSeguridad")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATMedidasSeguridad_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtmedidasSeguridad")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATMedidasSeguridad_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtpartesAfectadas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtpartesAfectadas")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATPartesAfectadas_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPartesCuerpo", "IIdparteCuerpoNavigation")
                        .WithMany("TblAtpartesAfectadas")
                        .HasForeignKey("IIdparteCuerpo")
                        .HasConstraintName("FK_tblATPartesAfectadas_tblPartesCuerpo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtpartesAfectadas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATPartesAfectadas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAtpersonas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAccidentesTrabajo", "IIdaccidenteTrabajoNavigation")
                        .WithMany("TblAtpersonas")
                        .HasForeignKey("IIdaccidenteTrabajo")
                        .HasConstraintName("FK_tblATPersonas_tblAccidentesTrabajo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAtpersonas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblATPersonas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoHorasHombreTrabajadas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoHorasHombreTrabajadas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAusentismoHorasHombreTrabajadas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoHorasHombreTrabajadas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAusentismoHorasHombreTrabajadas_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoHorasHombreTrabajadas")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblAusentismoHorasHombreTrabajadas_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndicadoresInfraestructura", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoIndicadoresInfraestructura")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblIndicadoresInfraestructura_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoIndicadoresInfraestructura")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblIndicadoresInfraestructura_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoIndicadoresInfraestructura")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblIndicadoresInfraestructura_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndicadoresProceso", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoIndicadoresProceso")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAusentismoIndicadoresProceso_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoIndicadoresProceso")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAusentismoIndicadoresProceso_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoIndicadoresProceso")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblAusentismoIndicadoresProceso_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndiceAccidentalidad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoIndiceAccidentalidad")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAusentismoIndiceAccidentalidad_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoIndiceAccidentalidad")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAusentismoIndiceAccidentalidad_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoIndiceAccidentalidad")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblAusentismoIndiceAccidentalidad_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoIndiceEnfermedadProfesional", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoIndiceEnfermedadProfesional")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAusentismoIndiceEnfermedadProfesional_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoIndiceEnfermedadProfesional")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAusentismoIndiceEnfermedadProfesional_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoIndiceEnfermedadProfesional")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblAusentismoIndiceEnfermedadProfesional_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAusentismoPrevalenciaIncidencia", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblAusentismoPrevalenciaIncidencia")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblAusentismoPrevalenciaIncidencia_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAusentismoPrevalenciaIncidencia")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAusentismoPrevalenciaIncidencia_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IVigenciaNavigation")
                        .WithMany("TblAusentismoPrevalenciaIncidencia")
                        .HasForeignKey("IVigencia")
                        .HasConstraintName("FK_tblAusentismoPrevalenciaIncidencia_tblEmpresasVigencia");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblAyudas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblAyudas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblAyudas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblBlobs", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTiposArchivo", "FileTypeNavigation")
                        .WithMany("TblBlobs")
                        .HasForeignKey("FileType")
                        .HasConstraintName("FK_tblBlobs_tblTiposArchivo");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCajasCompensacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblCajasCompensacion")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblCajasCompensacion_tblCajasCompensacion");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblCajasCompensacion")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblCajasCompensacion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfil", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblCargoPerfil")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblCargoPerfil_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdcargoNavigation")
                        .WithMany("TblCargoPerfil")
                        .HasForeignKey("IIdcargo")
                        .HasConstraintName("FK_tblCargoPerfil_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblCargoPerfil")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblCargoPerfil_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfil")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfil_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilCompetenciasCorporativas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ICompetenciaCorporativaNavigation")
                        .WithMany("TblCargoPerfilCompetenciasCorporativasICompetenciaCorporativaNavigation")
                        .HasForeignKey("ICompetenciaCorporativa")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasCorporativas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdperfilCargoNavigation")
                        .WithMany("TblCargoPerfilCompetenciasCorporativas")
                        .HasForeignKey("IIdperfilCargo")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasCorporativas_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelRequeridoNavigation")
                        .WithMany("TblCargoPerfilCompetenciasCorporativasINivelRequeridoNavigation")
                        .HasForeignKey("INivelRequerido")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasCorporativas_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilCompetenciasCorporativas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasCorporativas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilCompetenciasFuncionales", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ICompetenciaFuncionalNavigation")
                        .WithMany("TblCargoPerfilCompetenciasFuncionalesICompetenciaFuncionalNavigation")
                        .HasForeignKey("ICompetenciaFuncional")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasFuncionales_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilCompetenciasFuncionales")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasFuncionales_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelRequeridoNavigation")
                        .WithMany("TblCargoPerfilCompetenciasFuncionalesINivelRequeridoNavigation")
                        .HasForeignKey("INivelRequerido")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasFuncionales_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilCompetenciasFuncionales")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilCompetenciasFuncionales_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilFuncionesAmbientales", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IFuncionAmbientalNavigation")
                        .WithMany("TblCargoPerfilFuncionesAmbientalesIFuncionAmbientalNavigation")
                        .HasForeignKey("IFuncionAmbiental")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesAmbientales_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilFuncionesAmbientales")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesAmbientales_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IPeriodicidadNavigation")
                        .WithMany("TblCargoPerfilFuncionesAmbientalesIPeriodicidadNavigation")
                        .HasForeignKey("IPeriodicidad")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesAmbientales_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilFuncionesAmbientales")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesAmbientales_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilFuncionesSst", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilFuncionesSst")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesSST_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IPeriodicidadNavigation")
                        .WithMany("TblCargoPerfilFuncionesSst")
                        .HasForeignKey("IPeriodicidad")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesSST_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilFuncionesSst")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilFuncionesSST_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilIdiomas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilIdiomas")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdiomaNavigation")
                        .WithMany("TblCargoPerfilIdiomasIIdiomaNavigation")
                        .HasForeignKey("IIdioma")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelConversacionNavigation")
                        .WithMany("TblCargoPerfilIdiomasINivelConversacionNavigation")
                        .HasForeignKey("INivelConversacion")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblMultivalores3");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelEscrituraNavigation")
                        .WithMany("TblCargoPerfilIdiomasINivelEscrituraNavigation")
                        .HasForeignKey("INivelEscritura")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblMultivalores2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelLecturaNavigation")
                        .WithMany("TblCargoPerfilIdiomasINivelLecturaNavigation")
                        .HasForeignKey("INivelLectura")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilIdiomas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilIdiomas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilNivelAcademico", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilNivelAcademico")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilNivelAcademico_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdnivelAcademicoNavigation")
                        .WithMany("TblCargoPerfilNivelAcademico")
                        .HasForeignKey("IIdnivelAcademico")
                        .HasConstraintName("FK_tblCargoPerfilNivelAcademico_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilNivelAcademico")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilNivelAcademico_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilNivelAutoridad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilNivelAutoridad")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilNivelAutoridad_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelAutoridadNavigation")
                        .WithMany("TblCargoPerfilNivelAutoridad")
                        .HasForeignKey("INivelAutoridad")
                        .HasConstraintName("FK_tblCargoPerfilNivelAutoridad_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilNivelAutoridad")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilNivelAutoridad_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilObjetivos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilObjetivos")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilObjetivos_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilObjetivos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilObjetivos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilResponsabilidadSst", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilResponsabilidadSst")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidadSST_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IPeriodicidadNavigation")
                        .WithMany("TblCargoPerfilResponsabilidadSstIPeriodicidadNavigation")
                        .HasForeignKey("IPeriodicidad")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidadSST_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IResponsabilidadNavigation")
                        .WithMany("TblCargoPerfilResponsabilidadSstIResponsabilidadNavigation")
                        .HasForeignKey("IResponsabilidad")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidadSST_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilResponsabilidadSst")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidadSST_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargoPerfilResponsabilidades", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargoPerfil", "IIdcargoPerfilNavigation")
                        .WithMany("TblCargoPerfilResponsabilidades")
                        .HasForeignKey("IIdcargoPerfil")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidades_tblCargoPerfil");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IResponsabilidadNavigation")
                        .WithMany("TblCargoPerfilResponsabilidades")
                        .HasForeignKey("IResponsabilidad")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidades_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblCargoPerfilResponsabilidades")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblCargoPerfilResponsabilidades_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCargos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblCargos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblCargos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreadorNavigation")
                        .WithMany("TblCargosIIdusuarioCreadorNavigation")
                        .HasForeignKey("IIdusuarioCreador")
                        .HasConstraintName("FK_tblCargos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblCargosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblCargos_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "Lista1Navigation")
                        .WithMany("TblCieLista1Navigation")
                        .HasForeignKey("Lista1")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "Lista2Navigation")
                        .WithMany("TblCieLista2Navigation")
                        .HasForeignKey("Lista2")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "Lista3Navigation")
                        .WithMany("TblCieLista3Navigation")
                        .HasForeignKey("Lista3")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "Lista4Navigation")
                        .WithMany("TblCieLista4Navigation")
                        .HasForeignKey("Lista4")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle3");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "ListaBeckerNavigation")
                        .WithMany("TblCieListaBeckerNavigation")
                        .HasForeignKey("ListaBecker")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle5");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "ListaCpuNavigation")
                        .WithMany("TblCieListaCpuNavigation")
                        .HasForeignKey("ListaCpu")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle7");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "ListaCsemmNavigation")
                        .WithMany("TblCieListaCsemmNavigation")
                        .HasForeignKey("ListaCsemm")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle8");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "ListaGbdNavigation")
                        .WithMany("TblCieListaGbdNavigation")
                        .HasForeignKey("ListaGbd")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle4");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblListaDetalle", "ListaOpsNavigation")
                        .WithMany("TblCieListaOpsNavigation")
                        .HasForeignKey("ListaOps")
                        .HasConstraintName("FK_tblCIE_tblListaDetalle6");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie10", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdsexoNavigation")
                        .WithMany("TblCie10")
                        .HasForeignKey("IIdsexo")
                        .HasConstraintName("FK_tblCIE10_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTipoCie", "IIdtipoCieNavigation")
                        .WithMany("TblCie10")
                        .HasForeignKey("IIdtipoCie")
                        .HasConstraintName("FK_tblCIE10_tblTipoCIE");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCie10DiagnosticoIncapacidad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCie10", "IIdcie10Navigation")
                        .WithMany("TblCie10DiagnosticoIncapacidad")
                        .HasForeignKey("IIdcie10")
                        .HasConstraintName("FK_tblCie10DiagnosticoIncapacidad_tblCIE10");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDiagnosticosIncapacidades", "IIddiagnosticoIncapacidadNavigation")
                        .WithMany("TblCie10DiagnosticoIncapacidad")
                        .HasForeignKey("IIddiagnosticoIncapacidad")
                        .HasConstraintName("FK_tblCie10DiagnosticoIncapacidad_tblDiagnosticosIncapacidades");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCiedetalle", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCie", "IdCieNavigation")
                        .WithMany("TblCiedetalle")
                        .HasForeignKey("IdCie")
                        .HasConstraintName("FK_tblCIEDetalle_tblCIE");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblClasificacionRiesgos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblClasificacionRiesgos")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblClasificacionRiesgos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCodigosCorrelacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCie10", "IIdcie10Navigation")
                        .WithMany("TblCodigosCorrelacion")
                        .HasForeignKey("IIdcie10")
                        .HasConstraintName("FK_tblCodigosCorrelacion_tblCIE10");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblConceptoRehabilitacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdmedicoNavigation")
                        .WithMany("TblConceptoRehabilitacion")
                        .HasForeignKey("IIdmedico")
                        .HasConstraintName("FK_tblConceptoRehabilitacion_tblEmpleados");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblCorredores", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblCorredores")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblCorredores_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblCorredores")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblCorredores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDashBoard", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfiles", "IIdperfilNavigation")
                        .WithMany("TblDashBoard")
                        .HasForeignKey("IIdperfil")
                        .HasConstraintName("FK_tblDashBoard_tblPerfiles");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoTareaNavigation")
                        .WithMany("TblDashBoard")
                        .HasForeignKey("IIdtipoTarea")
                        .HasConstraintName("FK_tblDashBoard_tblDashBoard");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblDashBoard")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblDashBoard_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticoCondicionTrabajo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IActividadesNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajoIActividadesNavigation")
                        .HasForeignKey("IActividades")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "ICargoNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajo")
                        .HasForeignKey("ICargo")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajo")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblJurisprudencias", "IRequisitoLegalNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajo")
                        .HasForeignKey("IRequisitoLegal")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblJurisprudencias");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", "ISucursalNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajo")
                        .HasForeignKey("ISucursal")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblSucursalesEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ITareasNavigation")
                        .WithMany("TblDiagnosticoCondicionTrabajoITareasNavigation")
                        .HasForeignKey("ITareas")
                        .HasConstraintName("FK_tblDiagnosticoCondicionTrabajo_tblMultivalores1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticoInicial", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblDiagnosticoInicial")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblDiagnosticoInicial_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestandarNavigation")
                        .WithMany("TblDiagnosticoInicial")
                        .HasForeignKey("IIdestandar")
                        .HasConstraintName("FK_tblDiagnosticoInicial_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblDiagnosticoInicial")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblDiagnosticoInicial_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblDiagnosticosIncapacidades", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAfp", "IIdafpNavigation")
                        .WithMany("TblDiagnosticosIncapacidades")
                        .HasForeignKey("IIdafp")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblAFP");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblArls", "IIdarlNavigation")
                        .WithMany("TblDiagnosticosIncapacidades")
                        .HasForeignKey("IIdarl")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblARLs");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDiagnosticosIncapacidades", "IIddiagnosticoCorrelacionNavigation")
                        .WithMany("InverseIIddiagnosticoCorrelacionNavigation")
                        .HasForeignKey("IIddiagnosticoCorrelacion")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblDiagnosticosIncapacidades");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepsNavigation")
                        .WithMany("TblDiagnosticosIncapacidades")
                        .HasForeignKey("IIdeps")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIps", "IIdipsNavigation")
                        .WithMany("TblDiagnosticosIncapacidades")
                        .HasForeignKey("IIdips")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblIPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdorigenCalificadoIncapacidadNavigation")
                        .WithMany("TblDiagnosticosIncapacidadesIIdorigenCalificadoIncapacidadNavigation")
                        .HasForeignKey("IIdorigenCalificadoIncapacidad")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblMultivalores3");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPacientes", "IIdpacienteNavigation")
                        .WithMany("TblDiagnosticosIncapacidades")
                        .HasForeignKey("IIdpaciente")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblPacientes");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdpresuntoOrigenIncapacidadNavigation")
                        .WithMany("TblDiagnosticosIncapacidadesIIdpresuntoOrigenIncapacidadNavigation")
                        .HasForeignKey("IIdpresuntoOrigenIncapacidad")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblMultivalores2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoAtencionNavigation")
                        .WithMany("TblDiagnosticosIncapacidadesIIdtipoAtencionNavigation")
                        .HasForeignKey("IIdtipoAtencion")
                        .HasConstraintName("FK_tblDiagnosticosIncapacidades_tblMultivalores1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblElementos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioInsercionNavigation")
                        .WithMany("TblElementosIIdusuarioInsercionNavigation")
                        .HasForeignKey("IIdusuarioInsercion")
                        .HasConstraintName("FK_tblElementos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblElementosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblElementos_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmisores", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblEmisores")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblEmisores_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEmisores")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEmisores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpleados", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblArls", "IIdarlNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdarl")
                        .HasConstraintName("FK_tblEmpleados_tblARLs");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdcargoNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdcargo")
                        .HasConstraintName("FK_tblEmpleados_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpleados_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepsNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdeps")
                        .HasConstraintName("FK_tblEmpleados_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoCivilNavigation")
                        .WithMany("TblEmpleadosIIdestadoCivilNavigation")
                        .HasForeignKey("IIdestadoCivil")
                        .HasConstraintName("FK_tblEmpleados_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdformacionEducativaNavigation")
                        .WithMany("TblEmpleadosIIdformacionEducativaNavigation")
                        .HasForeignKey("IIdformacionEducativa")
                        .HasConstraintName("FK_tblEmpleados_tblMultivalores2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdgeneroNavigation")
                        .WithMany("TblEmpleadosIIdgeneroNavigation")
                        .HasForeignKey("IIdgenero")
                        .HasConstraintName("FK_tblEmpleados_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdlugarDomicilioNavigation")
                        .WithMany("TblEmpleadosIIdlugarDomicilioNavigation")
                        .HasForeignKey("IIdlugarDomicilio")
                        .HasConstraintName("FK_tblEmpleados_tblDivipola1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdlugarExpedicionNavigation")
                        .WithMany("TblEmpleadosIIdlugarExpedicionNavigation")
                        .HasForeignKey("IIdlugarExpedicion")
                        .HasConstraintName("FK_tblEmpleados_tblDivipola2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdlugarNacimientoNavigation")
                        .WithMany("TblEmpleadosIIdlugarNacimientoNavigation")
                        .HasForeignKey("IIdlugarNacimiento")
                        .HasConstraintName("FK_tblEmpleados_tblDivipola");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", "IIdsucursalNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdsucursal")
                        .HasConstraintName("FK_tblEmpleados_tblSucursalesEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoDocumentoNavigation")
                        .WithMany("TblEmpleadosIIdtipoDocumentoNavigation")
                        .HasForeignKey("IIdtipoDocumento")
                        .HasConstraintName("FK_tblEmpleados_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEmpleados_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IiDtipoVinculacionNavigation")
                        .WithMany("TblEmpleadosIiDtipoVinculacionNavigation")
                        .HasForeignKey("IiDtipoVinculacion")
                        .HasConstraintName("FK_tblEmpleados_tblMultivalores3");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpleadosDetalles", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "Employee")
                        .WithMany("TblEmpleadosDetalles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaArea", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaArea")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaArea_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaArea")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaArea_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlEficacia", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaControlEficacia")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaControlEficacia_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaControlEficacia")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaControlEficacia_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlFrecuencia", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaControlFrecuencia")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaControlFrecuencia_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaControlFrecuencia")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaControlFrecuencia_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlHerramientas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaControlHerramientas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaControlHerramientas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaControlHerramientas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaControlHerramienta_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlProcedimientos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaControlProcedimientos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaControlProcedimientos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaControlProcedimientos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaControlProcedimientos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaControlResponsable", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaControlResponsable")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaControlResponsable_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaControlResponsable")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaControlResponsable_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstandarDocGenSis", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdcoberturaNavigation")
                        .WithMany("TblEmpresaEstandarDocGenSisIIdcoberturaNavigation")
                        .HasForeignKey("IIdcobertura")
                        .HasConstraintName("FK_tblEmpresaEstandarDocGenSis_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaEstandarDocGenSis")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaEstandarDocGenSis_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoNavigation")
                        .WithMany("TblEmpresaEstandarDocGenSisIIdestadoNavigation")
                        .HasForeignKey("IIdestado")
                        .HasConstraintName("FK_tblEmpresaEstandarDocGenSis_tblMultivalores2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoDocumentoNavigation")
                        .WithMany("TblEmpresaEstandarDocGenSisIIdtipoDocumentoNavigation")
                        .HasForeignKey("IIdtipoDocumento")
                        .HasConstraintName("FK_tblEmpresaEstandarDocGenSis_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaEstandarDocGenSis")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaEstandarDocGenSis_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstandares", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaEstandares")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaPoliticas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestandarNavigation")
                        .WithMany("TblEmpresaEstandares")
                        .HasForeignKey("IIdestandar")
                        .HasConstraintName("FK_tblEmpresaPoliticas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaEstandares")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaPoliticas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaEstructuraProcesos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaEstructuraProcesos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaEstructuraProcesos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "INivelProcesoNavigation")
                        .WithMany("TblEmpresaEstructuraProcesos")
                        .HasForeignKey("INivelProceso")
                        .HasConstraintName("FK_tblEmpresaEstructuraProcesos_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaEstructuraProcesos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaEstructuraProcesos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaGestora", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblEmpresaGestora")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblEmpresaGestora_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaGestora")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaGestora_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaJurisprudencias", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaJurisprudencias")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaJurisprudencias_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblJurisprudencias", "IIdjurisprudenciaNavigation")
                        .WithMany("TblEmpresaJurisprudencias")
                        .HasForeignKey("IIdjurisprudencia")
                        .HasConstraintName("FK_tblEmpresaJurisprudencias_tblJurisprudencias");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEmpresaJurisprudencias")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaJurisprudencias_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaParametros", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaParametros")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaParametros_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaParametros")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaParametros_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaPolitica", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaPolitica")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaPolitica_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IidtipoPoliticaNavigation")
                        .WithMany("TblEmpresaPolitica")
                        .HasForeignKey("IidtipoPolitica")
                        .HasConstraintName("FK_tblEmpresaPolitica_tblEmpresaPolitica");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaPoliticaControlCambios", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaPolitica", "IIdempresaPoliticaNavigation")
                        .WithMany("TblEmpresaPoliticaControlCambios")
                        .HasForeignKey("IIdempresaPolitica")
                        .HasConstraintName("FK_tblEmpresaPoliticaControlCambios_tblEmpresaPolitica");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioNavigation")
                        .WithMany("TblEmpresaPoliticaControlCambiosIIdusuarioNavigation")
                        .HasForeignKey("IIdusuario")
                        .HasConstraintName("FK_tblEmpresaPoliticaControlCambios_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEmpresaPoliticaControlCambiosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaPoliticaControlCambios_tblUsuarios1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblEmpresaPoliticaControlCambiosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblEmpresaPoliticaControlCambios_tblUsuarios2");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaProcesoRiesgos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblClasificacionRiesgos", "IIdclasificacionRiesgoNavigation")
                        .WithMany("TblEmpresaProcesoRiesgos")
                        .HasForeignKey("IIdclasificacionRiesgo")
                        .HasConstraintName("FK_tblEmpresaProcesoRiesgos_tblClasificacionRiesgos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdempresaProcesoNavigation")
                        .WithMany("TblEmpresaProcesoRiesgos")
                        .HasForeignKey("IIdempresaProceso")
                        .HasConstraintName("FK_tblEmpresaProcesoRiesgos_tblEmpresaProcesos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaProcesos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaProcesos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdnivelProcesoNavigation")
                        .WithMany("TblEmpresaProcesos")
                        .HasForeignKey("IIdnivelProceso")
                        .HasConstraintName("FK_tblEmpresaProcesos_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaProcesos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaProcesos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresaRiesgoValoracion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresaRiesgoValoracion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresaRiesgoValoracion_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEmpresaRiesgoValoracion")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEmpresaRiesgoValoracion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblEmpresas")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblEmpresas_tblMultivalores");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasArls", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblArls", "IIdarlNavigation")
                        .WithMany("TblEmpresasArls")
                        .HasForeignKey("IIdarl")
                        .HasConstraintName("FK_tblEmpresas-ARLs_tblARLs");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresasArls")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresas-ARLs_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreadorNavigation")
                        .WithMany("TblEmpresasArls")
                        .HasForeignKey("IIdusuarioCreador")
                        .HasConstraintName("FK_tblEmpresas-ARLs_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasCajasCompensacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCajasCompensacion", "IIdcajaCompensacionNavigation")
                        .WithMany("TblEmpresasCajasCompensacion")
                        .HasForeignKey("IIdcajaCompensacion")
                        .HasConstraintName("FK_tblEmpresas-CajasCompensacion_tblCajasCompensacion");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresasCajasCompensacion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresas-CajasCompensacion_tblEmpresas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasCorredores", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCorredores", "IIdcorredorNavigation")
                        .WithMany("TblEmpresasCorredores")
                        .HasForeignKey("IIdcorredor")
                        .HasConstraintName("FK_tblEmpresas-Corredores_tblCorredores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresasCorredores")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresas-Corredores_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreadorNavigation")
                        .WithMany("TblEmpresasCorredores")
                        .HasForeignKey("IIdusuarioCreador")
                        .HasConstraintName("FK_tblEmpresas-Corredores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasTerceros", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblActividadEconomica", "IIdactividadEconomicaNavigation")
                        .WithMany("TblEmpresasTerceros")
                        .HasForeignKey("IIdactividadEconomica")
                        .HasConstraintName("FK_tblEmpresasTerceros_tblActividadEconomica")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTipoSociedadEmpresa", "IIdtipoSociedadNavigation")
                        .WithMany("TblEmpresasTerceros")
                        .HasForeignKey("IIdtipoSociedad")
                        .HasConstraintName("FK_tblEmpresasTerceros_tblTipoSociedadEmpresa")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEmpresasVigencia")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEmpresasVigencia_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoVigenciaNavigation")
                        .WithMany("TblEmpresasVigencia")
                        .HasForeignKey("IIdestadoVigencia")
                        .HasConstraintName("FK_tblEmpresasVigencia_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEmpresasVigencia")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEmpresasVigencia_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEntradasSalidas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEntradasSalidas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEntradasSalidas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblEntradasSalidas")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblEntradasSalidas_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEntradasSalidas")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEntradasSalidas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEps", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblEps")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblEPS_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblEps")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEPS_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEstandarTipoPoliticas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblEstandarTipoPoliticas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblEstandarTipoPoliticas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestandarNavigation")
                        .WithMany("TblEstandarTipoPoliticas")
                        .HasForeignKey("IIdestandar")
                        .HasConstraintName("FK_tblEstandarTipoPoliticas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblEstandarTipoPoliticas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblEstandarTipoPoliticas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblEventosCalendarioParticipantes", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEventosCalendario", "IIdeventoCalendarioNavigation")
                        .WithMany("TblEventosCalendarioParticipantes")
                        .HasForeignKey("IIdeventoCalendario")
                        .HasConstraintName("FK_tblEventosCalendarioParticipantes_tblEventosCalendario");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblExtintoresTipo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblExtintoresTipo")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblExtintoresTipo_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormatos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdclaseFormatoNavigation")
                        .WithMany("TblFormatos")
                        .HasForeignKey("IIdclaseFormato")
                        .HasConstraintName("FK_tblFormatos_tblFormatos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblFormatos")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblFormatos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormularios", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblFormulariosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblFormularios_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblFormulariosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblFormularios_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormulariosRespuestas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblFormulariosRespuestasEncabezados", "IIdformularioRespuestaEncabezadoNavigation")
                        .WithMany("TblFormulariosRespuestas")
                        .HasForeignKey("IIdformularioRespuestaEncabezado")
                        .HasConstraintName("FK_tblFormulariosRespuestas_tblFormulariosRespuestasEncabezados");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblFormulariosRespuestasEncabezados", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblFormularios", "IIdformularioNavigation")
                        .WithMany("TblFormulariosRespuestasEncabezados")
                        .HasForeignKey("IIdformulario")
                        .HasConstraintName("FK_tblFormulariosRespuestasEncabezados_tblFormularios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIdiomas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblIdiomas")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblIdiomas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalle", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdresponsableAnalisisNavigation")
                        .WithMany("TblIndicadoresDetalleIIdresponsableAnalisisNavigation")
                        .HasForeignKey("IIdresponsableAnalisis")
                        .HasConstraintName("FK_tblIndicadores_tblCargos1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdresponsableInformacionNavigation")
                        .WithMany("TblIndicadoresDetalleIIdresponsableInformacionNavigation")
                        .HasForeignKey("IIdresponsableInformacion")
                        .HasConstraintName("FK_tblIndicadores_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblIndicadoresDetalle")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblIndicadores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalleHistorico", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalle", "IIdindicadorDetalleNavigation")
                        .WithMany("TblIndicadoresDetalleHistorico")
                        .HasForeignKey("IIdindicadorDetalle")
                        .HasConstraintName("FK_tblIndicadoresDetalleHistorico_tblIndicadoresDetalle");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresMatriz", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdempleadoAproboNavigation")
                        .WithMany("TblIndicadoresMatrizIIdempleadoAproboNavigation")
                        .HasForeignKey("IIdempleadoAprobo")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblEmpleados2");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdempleadoElaboroNavigation")
                        .WithMany("TblIndicadoresMatrizIIdempleadoElaboroNavigation")
                        .HasForeignKey("IIdempleadoElaboro")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdempleadoRevisoNavigation")
                        .WithMany("TblIndicadoresMatrizIIdempleadoRevisoNavigation")
                        .HasForeignKey("IIdempleadoReviso")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblEmpleados1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblIndicadoresMatriz")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblIndicadoresMatriz")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblIndicadoresMatriz")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblMatrizIndicadores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIndicadoresSeguimiento", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIndicadoresDetalle", "IIdindicadorDetalleNavigation")
                        .WithMany("TblIndicadoresSeguimiento")
                        .HasForeignKey("IIdindicadorDetalle")
                        .HasConstraintName("FK_tblIndicadoresSeguimiento_tblIndicadoresDetalle");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionExtintoresDetalle", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInspeccionExtintoresDetalle")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInspeccionExtintoresDetalle_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblExtintoresTipo", "IIdextintorTipoNavigation")
                        .WithMany("TblInspeccionExtintoresDetalle")
                        .HasForeignKey("IIdextintorTipo")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblExtintoresTipo");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblInspecciones", "IIdinspeccionNavigation")
                        .WithMany("TblInspeccionExtintoresDetalle")
                        .HasForeignKey("IIdinspeccion")
                        .HasConstraintName("FK_tblInspeccionExtintoresDetalle_tblInspeccionExtintores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInspeccionExtintoresDetalle")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionExtintoresDetalleMtto", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInspeccionExtintoresDetalleMtto")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInspeccionExtintoresMtto_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspecciones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblInspecciones")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTareas", "IIdtareaNavigation")
                        .WithMany("TblInspecciones")
                        .HasForeignKey("IIdtarea")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblTareas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IIdvigenciaNavigation")
                        .WithMany("TblInspecciones")
                        .HasForeignKey("IIdvigencia")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblEmpresasVigencia");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInspecciones")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInspeccionExtintores_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInspeccionesPrograma", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInspeccionesPrograma")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInspeccionesPrograma_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblInspeccionesPrograma")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblInspeccionesPrograma_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTareas", "IIdtareaNavigation")
                        .WithMany("TblInspeccionesPrograma")
                        .HasForeignKey("IIdtarea")
                        .HasConstraintName("FK_tblInspeccionesPrograma_tblTareas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresasVigencia", "IIdvigenciaNavigation")
                        .WithMany("TblInspeccionesPrograma")
                        .HasForeignKey("IIdvigencia")
                        .HasConstraintName("FK_tblInspeccionesPrograma_tblEmpresasVigencia");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInspeccionesPrograma")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInspeccionesPrograma_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaAlumbrado", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInstalacionElectricaAlumbrado")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInstalacionElectricaAlumbrado_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblInspecciones", "IIdinspeccionNavigation")
                        .WithMany("TblInstalacionElectricaAlumbrado")
                        .HasForeignKey("IIdinspeccion")
                        .HasConstraintName("FK_tblInstalacionElectricaAlumbrado_tblInspecciones");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInstalacionElectricaAlumbrado")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInstalacionElectricaAlumbrado_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaCircuitos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInstalacionElectricaCircuitos")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInstalacionElectricaCircuitos_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblInspecciones", "IIdinspeccionNavigation")
                        .WithMany("TblInstalacionElectricaCircuitos")
                        .HasForeignKey("IIdinspeccion")
                        .HasConstraintName("FK_tblInstalacionElectricaCircuitos_tblInspecciones");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInstalacionElectricaCircuitos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInstalacionElectricaCircuitos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaInterruptores", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInstalacionElectricaInterruptores")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInstalacionElectricaInterruptores_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblInspecciones", "IIdinspeccionNavigation")
                        .WithMany("TblInstalacionElectricaInterruptores")
                        .HasForeignKey("IIdinspeccion")
                        .HasConstraintName("FK_tblInstalacionElectricaInterruptores_tblInspecciones");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInstalacionElectricaInterruptores")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInstalacionElectricaInterruptores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblInstalacionElectricaTomas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaArea", "IIdareaNavigation")
                        .WithMany("TblInstalacionElectricaTomas")
                        .HasForeignKey("IIdarea")
                        .HasConstraintName("FK_tblInstalacionElectricaTomas_tblEmpresaArea");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblInspecciones", "IIdinspeccionNavigation")
                        .WithMany("TblInstalacionElectricaTomas")
                        .HasForeignKey("IIdinspeccion")
                        .HasConstraintName("FK_tblInstalacionElectricaTomas_tblInspecciones");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblInstalacionElectricaTomas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblInstalacionElectricaTomas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIps", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblIpsIIdtipoIdentificacionNavigation")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblIPS_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdubicacionNavigation")
                        .WithMany("TblIps")
                        .HasForeignKey("IIdubicacion")
                        .HasConstraintName("FK_tblIPS_tblDivipola");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblIps")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblIPS_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ITipoIpsNavigation")
                        .WithMany("TblIpsITipoIpsNavigation")
                        .HasForeignKey("ITipoIps")
                        .HasConstraintName("FK_tblIPS_tblMultivalores1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblIpssEps", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepsNavigation")
                        .WithMany("TblIpssEps")
                        .HasForeignKey("IIdeps")
                        .HasConstraintName("FK_tblIPSs-EPS_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIps", "IIdipsNavigation")
                        .WithMany("TblIpssEps")
                        .HasForeignKey("IIdips")
                        .HasConstraintName("FK_tblIPSs-EPS_tblIPS");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblJurisprudencias", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmisores", "IIdemisorNavigation")
                        .WithMany("TblJurisprudencias")
                        .HasForeignKey("IIdemisor")
                        .HasConstraintName("FK_tblJurisprudencias_tblEmisores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "ILegislacionNavigation")
                        .WithMany("TblJurisprudencias")
                        .HasForeignKey("ILegislacion")
                        .HasConstraintName("FK_tblJurisprudencias_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblJurisprudencias")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblJurisprudencias_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMapaProcesoPosiciones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblMapaProcesoPosiciones")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblMapaProcesoPosiciones_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdempresaProcesoNavigation")
                        .WithMany("TblMapaProcesoPosiciones")
                        .HasForeignKey("IIdempresaProceso")
                        .HasConstraintName("FK_tblMapaProcesoPosiciones_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblMapaProcesoPosiciones")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblMapaProcesoPosiciones_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMedicamentos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "TblMultivalores")
                        .WithMany("TblMedicamentos")
                        .HasForeignKey("IIdsubtablaInvimaEstado", "TValorInvimaEstado")
                        .HasConstraintName("FK_tblMedicamentos_tblMultivalores")
                        .HasPrincipalKey("IIdsubtabla", "TValor");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMedicamentosTemp", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "TblMultivalores")
                        .WithMany("TblMedicamentosTemp")
                        .HasForeignKey("IIdsubtablaInvimaEstado", "TValorInvimaEstado")
                        .HasConstraintName("FK_tblMedicamentosTemp_tblMultivalores")
                        .HasPrincipalKey("IIdsubtabla", "TValor");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMenuPerfiles", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMenu", "IIdmenuNavigation")
                        .WithMany("TblMenuPerfiles")
                        .HasForeignKey("IIdmenu")
                        .HasConstraintName("FK_tblMenuPerfiles_tblMenu");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfiles", "IIdperfilNavigation")
                        .WithMany("TblMenuPerfiles")
                        .HasForeignKey("IIdperfil")
                        .HasConstraintName("FK_tblMenuPerfiles_tblPerfiles");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblMultivalores", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreadorNavigation")
                        .WithMany("TblMultivalores")
                        .HasForeignKey("IIdusuarioCreador")
                        .HasConstraintName("FK_tblMultivalores_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNotificacionesElectronicas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTemplateNotificaciones", "IIdtemplateNotificacionNavigation")
                        .WithMany("TblNotificacionesElectronicas")
                        .HasForeignKey("IIdtemplateNotificacion")
                        .HasConstraintName("FK_tblNotificacionesElectronicas_tblTemplate");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNumerales", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblNumerales")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblNumerales_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblNumeralesProceso", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblNumeralesProceso")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblNumeralesProceso_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblNumerales", "IIdnumeralNavigation")
                        .WithMany("TblNumeralesProceso")
                        .HasForeignKey("IIdnumeral")
                        .HasConstraintName("FK_tblNumeralesProceso_tblNumerales");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblNumeralesProceso")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblNumeralesProceso_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblNumeralesProceso")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblNumeralesProceso_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPacientes", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAfp", "IIdafpNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdafp")
                        .HasConstraintName("FK_tblPacientes_tblAFP");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblArls", "IIdarlNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdarl")
                        .HasConstraintName("FK_tblPacientes_tblARLs");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCiuo08", "IIdciuo08Navigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdciuo08")
                        .HasConstraintName("FK_tblCIUO08_iID");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblPacientes_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepsNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdeps")
                        .HasConstraintName("FK_tblPacientes_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEstadoAfiliacion", "IIdestadoAfiliacionNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdestadoAfiliacion")
                        .HasConstraintName("FK_tblPacientes_tblEstadoAfiliacion");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdgeneroNavigation")
                        .WithMany("TblPacientesIIdgeneroNavigation")
                        .HasForeignKey("IIdgenero")
                        .HasConstraintName("FK_tblPacientes_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRegimenAfiliacion", "IIdregimenAfiliacionNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdregimenAfiliacion")
                        .HasConstraintName("FK_tblPacientes_tblRegimenAfiliacion")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTipoAfiliacion", "IIdtipoAfiliacionNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IIdtipoAfiliacion")
                        .HasConstraintName("FK_tblPacientes_tblTipoAfiliacion")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoDocNavigation")
                        .WithMany("TblPacientesIIdtipoDocNavigation")
                        .HasForeignKey("IIdtipoDoc")
                        .HasConstraintName("FK_tblPacientes_tblMultivalores");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPartesCuerpo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPartesCuerpo")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPartesCuerpo_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoAfp", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblAfp", "IIdafpNavigation")
                        .WithMany("TblPerfilSocioDemoAfp")
                        .HasForeignKey("IIdafp")
                        .HasConstraintName("FK_tblPerfilSocioDemoAFP_tblAFP");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoAfp")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoAFP_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoAfp")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoAFP_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoCargo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdcargoNavigation")
                        .WithMany("TblPerfilSocioDemoCargo")
                        .HasForeignKey("IIdcargo")
                        .HasConstraintName("FK_tblPerfilSocioDemoCargo_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoCargo")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoCargo_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoCargo")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoCargo_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEdad", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdgeneroNavigation")
                        .WithMany("TblPerfilSocioDemoEdad")
                        .HasForeignKey("IIdgenero")
                        .HasConstraintName("FK_tblPerfilSocioDemoEdad_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoEdad")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoEdad_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoEdad")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoEdad_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEps", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEps", "IIdepsNavigation")
                        .WithMany("TblPerfilSocioDemoEps")
                        .HasForeignKey("IIdeps")
                        .HasConstraintName("FK_tblPerfilSocioDemoEPS_tblEPS");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoEps")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoEPS_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoEps")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoEPS_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoEstadoCivil", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoCivilNavigation")
                        .WithMany("TblPerfilSocioDemoEstadoCivil")
                        .HasForeignKey("IIdestadoCivil")
                        .HasConstraintName("FK_tblPerfilSocioDemoEstadoCivil_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoEstadoCivil")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoEstadoCivil_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoEstadoCivil")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoEstadoCivil_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoFormacionEduc", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdformacionEducNavigation")
                        .WithMany("TblPerfilSocioDemoFormacionEduc")
                        .HasForeignKey("IIdformacionEduc")
                        .HasConstraintName("FK_tblPerfilSocioDemoFormacionEduc_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoFormacionEduc")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoFormacionEduc_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoFormacionEduc")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoFormacionEduc_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoSucursal", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoSucursal")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoSucursal_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", "IIdsucursalNavigation")
                        .WithMany("TblPerfilSocioDemoSucursal")
                        .HasForeignKey("IIdsucursal")
                        .HasConstraintName("FK_tblPerfilSocioDemoSucursal_tblSucursalesEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoSucursal")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoSucursal_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemoTipoVincul", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", "IIdperfilSocioDemoNavigation")
                        .WithMany("TblPerfilSocioDemoTipoVincul")
                        .HasForeignKey("IIdperfilSocioDemo")
                        .HasConstraintName("FK_tblPerfilSocioDemoTipoVincul_tblPerfilSocioDemografico");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoVinculacionNavigation")
                        .WithMany("TblPerfilSocioDemoTipoVincul")
                        .HasForeignKey("IIdtipoVinculacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoTipoVincul_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemoTipoVincul")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemoTipoVincul_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPerfilSocioDemografico", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblPerfilSocioDemografico")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblPerfilSocioDemografico_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPerfilSocioDemografico")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPerfilSocioDemografico_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPhva", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblPhva")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblPHVA_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblPhva")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblPHVA_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPhva")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPHVA_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblPlanAccion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblPlanAccion_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblPlanAccion")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblPlanAccion_tblProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdresponsableNavigation")
                        .WithMany("TblPlanAccionIIdresponsableNavigation")
                        .HasForeignKey("IIdresponsable")
                        .HasConstraintName("FK_tblPlanAccion_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", "IIdsucursalNavigation")
                        .WithMany("TblPlanAccion")
                        .HasForeignKey("IIdsucursal")
                        .HasConstraintName("FK_tblPlanAccion_tblSucursalesEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanAccionIUsuarioCreacionNavigation")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanAccion_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionActividades", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPlanAccionRazones", "IIdplanAccionRazonNavigation")
                        .WithMany("TblPlanAccionActividades")
                        .HasForeignKey("IIdplanAccionRazon")
                        .HasConstraintName("FK_tblPlanAccionActividades_tblPlanAccionRazones");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdresponsableNavigation")
                        .WithMany("TblPlanAccionActividadesIIdresponsableNavigation")
                        .HasForeignKey("IIdresponsable")
                        .HasConstraintName("FK_tblPlanAccionActividades_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanAccionActividadesIUsuarioCreacionNavigation")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanAccionActividades_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionRazones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPlanAccion", "IIdplanAccionNavigation")
                        .WithMany("TblPlanAccionRazones")
                        .HasForeignKey("IIdplanAccion")
                        .HasConstraintName("FK_tblPlanAccionRazones_tblPlanAccion");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanAccionRazones")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanAccionRazones_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanAccionTareas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPlanAccionActividades", "IIdplanAccionActividadNavigation")
                        .WithMany("TblPlanAccionTareas")
                        .HasForeignKey("IIdplanAccionActividad")
                        .HasConstraintName("FK_tblPlanAccionTareas_tblPlanAccionActividades");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTareas", "IIdtareaNavigation")
                        .WithMany("TblPlanAccionTareas")
                        .HasForeignKey("IIdtarea")
                        .HasConstraintName("FK_tblPlanAccionTareas_tblTareas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanAccionTareas")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanAccionTareas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblPlanCapacitacion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblPlanCapacitacion_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdresponsableNavigation")
                        .WithMany("TblPlanCapacitacion")
                        .HasForeignKey("IIdresponsable")
                        .HasConstraintName("FK_tblPlanCapacitacion_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTareas", "IIdtareaNavigation")
                        .WithMany("TblPlanCapacitacion")
                        .HasForeignKey("IIdtarea")
                        .HasConstraintName("FK_tblPlanCapacitacion_tblTareas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoCapacitacionNavigation")
                        .WithMany("TblPlanCapacitacion")
                        .HasForeignKey("IIdtipoCapacitacion")
                        .HasConstraintName("FK_tblPlanCapacitacion_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanCapacitacion")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanCapacitacion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacionAsistentes", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "IIdempleadoNavigation")
                        .WithMany("TblPlanCapacitacionAsistentes")
                        .HasForeignKey("IIdempleado")
                        .HasConstraintName("FK_tblPlanCapacitacionAsistentes_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanCapacitacionAsistentes")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanCapacitacionAsistentes_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPlanCapacitacionSesiones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPlanCapacitacionSesiones")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPlanCapacitacionSesiones_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblPosiblesRiesgos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblPosiblesRiesgos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblPosiblesRiesgos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblProcedimientos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblProcedimientos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblProcedimientos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblProcedimientos")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblProcedimientos_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblCargos", "IIdresponsableNavigation")
                        .WithMany("TblProcedimientos")
                        .HasForeignKey("IIdresponsable")
                        .HasConstraintName("FK_tblProcedimientos_tblCargos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblProcedimientos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblProcedimientos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblProcesos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblProcesos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblProcesos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTipoProceso", "IIdtipoProcesoNavigation")
                        .WithMany("TblProcesos")
                        .HasForeignKey("IIdtipoProceso")
                        .HasConstraintName("FK_tblProcesos_tblTipoProceso");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpleados", "ILiderNavigation")
                        .WithMany("TblProcesos")
                        .HasForeignKey("ILider")
                        .HasConstraintName("FK_tblProcesos_tblEmpleados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblProcesos")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblProcesos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstados", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdentidadNavigation")
                        .WithMany("TblRecobroEstados")
                        .HasForeignKey("IIdentidad")
                        .HasConstraintName("FK_tblRecobroEstados_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobroEstados")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobroEstados_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobroEstadosDocumentos")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobroEstadosDocumentos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentosIdiomas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIdiomas", "IIdidiomaNavigation")
                        .WithMany("TblRecobroEstadosDocumentosIdiomas")
                        .HasForeignKey("IIdidioma")
                        .HasConstraintName("FK_tblEstadosRecobroDocumentosIdiomas_tblIdiomas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentos", "IIdrecobroEstadoNavigation")
                        .WithMany("TblRecobroEstadosDocumentosIdiomas")
                        .HasForeignKey("IIdrecobroEstado")
                        .HasConstraintName("FK_tblRecobroEstadosDocumentosIdiomas_tblRecobroEstadosDocumentos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobroEstadosDocumentosIdiomas")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEstadosRecobroDocumentosIdiomas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobroEstadosIdiomas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblIdiomas", "IIdidiomaNavigation")
                        .WithMany("TblRecobroEstadosIdiomas")
                        .HasForeignKey("IIdidioma")
                        .HasConstraintName("FK_tblEstadosRecobroIdiomas_tblIdiomas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobroEstados", "IIdrecobroEstadoNavigation")
                        .WithMany("TblRecobroEstadosIdiomas")
                        .HasForeignKey("IIdrecobroEstado")
                        .HasConstraintName("FK_tblEstadosRecobroIdiomas_tblEstadosCaso");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobroEstadosIdiomas")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblEstadosRecobroIdiomas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobros", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaOrigenNavigation")
                        .WithMany("TblRecobros")
                        .HasForeignKey("IIdempresaOrigen")
                        .HasConstraintName("FK_tblRecobros_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobroEstados", "IIdrecobroEstadoNavigation")
                        .WithMany("TblRecobros")
                        .HasForeignKey("IIdrecobroEstado")
                        .HasConstraintName("FK_tblRecobros_tblRecobroEstados");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobrosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobros_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblRecobrosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblRecobros_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobroEstadosDocumentos", "IIdestadoNavigation")
                        .WithMany("TblRecobrosDocumentos")
                        .HasForeignKey("IIdestado")
                        .HasConstraintName("FK_tblRecobrosDocumentos_tblRecobroEstadosDocumentos1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobros", "IIdrecobroNavigation")
                        .WithMany("TblRecobrosDocumentos")
                        .HasForeignKey("IIdrecobro")
                        .HasConstraintName("FK_tblRecobrosDocumentos_tblRecobros");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobrosDocumentosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobrosDocumentos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblRecobrosDocumentosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblRecobrosDocumentos_tblUsuarios1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "TblMultivalores")
                        .WithMany("TblRecobrosDocumentos")
                        .HasForeignKey("IIdsubtablaTipoDocumento", "TValorTipoDocumento")
                        .HasConstraintName("FK_tblRecobrosDocumentos_tblMultivalores")
                        .HasPrincipalKey("IIdsubtabla", "TValor");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuarios", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentos", "IIdrecobroDocumentoNavigation")
                        .WithMany("TblRecobrosDocumentosUsuarios")
                        .HasForeignKey("IIdrecobroDocumento")
                        .HasConstraintName("FK_tblRecobrosDocumentosUsuarios_tblRecobrosDocumentos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobrosDocumentosUsuariosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobrosDocumentosUsuarios_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblRecobrosDocumentosUsuariosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblRecobrosDocumentosUsuarios_tblUsuarios1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "TblMultivalores")
                        .WithMany("TblRecobrosDocumentosUsuarios")
                        .HasForeignKey("IIdsubtablaTipoIdentificacion", "TValorTipoIdentificacion")
                        .HasConstraintName("FK_tblRecobrosDocumentosUsuarios_tblMultivalores")
                        .HasPrincipalKey("IIdsubtabla", "TValor");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosElementos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuariosDiagnosticos", "IIdrecobroDocumentoUsuarioDiagnosticoNavigation")
                        .WithMany("TblRecobrosUsuariosElementos")
                        .HasForeignKey("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasConstraintName("FK_tblRecobrosUsuariosElementos_tblRecobrosDocumentosUsuariosDiagnosticos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobrosUsuariosElementosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobrosUsuariosElementos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblRecobrosUsuariosElementosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblRecobrosUsuariosElementos_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecobrosUsuariosServiciosProcedimientos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRecobrosDocumentosUsuariosDiagnosticos", "IIdrecobroDocumentoUsuarioDiagnosticoNavigation")
                        .WithMany("TblRecobrosUsuariosServiciosProcedimientos")
                        .HasForeignKey("IIdrecobroDocumentoUsuarioDiagnostico")
                        .HasConstraintName("FK_tblRecobrosUsuariosServiciosProcedimientos_tblRecobrosDocumentosUsuariosDiagnosticos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblServiciosProcedimientos", "IIdservicioProcedimientoNavigation")
                        .WithMany("TblRecobrosUsuariosServiciosProcedimientos")
                        .HasForeignKey("IIdservicioProcedimiento")
                        .HasConstraintName("FK_tblRecobrosUsuariosServiciosProcedimientos_tblServiciosProcedimientos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecobrosUsuariosServiciosProcedimientosIIdusuarioCreacionNavigation")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecobrosUsuariosServiciosProcedimientos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblRecobrosUsuariosServiciosProcedimientosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblRecobrosUsuariosServiciosProcedimientos_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRecursos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblRecursos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblRecursos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblRecursos")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblRecursos_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRecursos")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRecursos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsi", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblRhsi")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblRHSI_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblFormatos", "IIdformatoNavigation")
                        .WithMany("TblRhsi")
                        .HasForeignKey("IIdformato")
                        .HasConstraintName("FK_tblRHSI_tblFormatos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblRhsi")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblRHSI_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsiactividadEconomica", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblRhsiactividadEconomica")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblRHSIActividadEconomica_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblFormatos", "IIdformatoNavigation")
                        .WithMany("TblRhsiactividadEconomica")
                        .HasForeignKey("IIdformato")
                        .HasConstraintName("FK_tblRHSIActividadEconomica_tblFormatos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRhsiriesgos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblRhsiriesgos")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblRHSIRiesgos_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblFormatos", "IIdformatoNavigation")
                        .WithMany("TblRhsiriesgos")
                        .HasForeignKey("IIdformato")
                        .HasConstraintName("FK_tblRHSIRiesgos_tblFormatos");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoAnalisis", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoAnalisis")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoAnalisis_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoCausas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoCausas")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoCausas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoControlValoraciones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaControlEficacia", "IIdcontrolEficaciaNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdcontrolEficacia")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblEmpresaControlEficacia");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaControlFrecuencia", "IIdcontrolFrecuenciaNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdcontrolFrecuencia")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblEmpresaControlFrecuencia");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaControlHerramientas", "IIdcontrolHerramientaNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdcontrolHerramienta")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblEmpresaControlHerramientas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaControlProcedimientos", "IIdcontrolProcedimientoNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdcontrolProcedimiento")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblEmpresaControlProcedimientos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaControlResponsable", "IIdcontrolResponsableNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdcontrolResponsable")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblEmpresaControlResponsable");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRiesgoControles", "IIdriesgoControlNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IIdriesgoControl")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblRiesgoControles");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoControlValoraciones")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoControlValoraciones_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoControles", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoControles")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoControles_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoEfectos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoEfectos")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoEfectos_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoIdentificacion", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblRiesgoIdentificacion")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblRiesgoIdentificacion_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaProcesos", "IIdprocesoNavigation")
                        .WithMany("TblRiesgoIdentificacion")
                        .HasForeignKey("IIdproceso")
                        .HasConstraintName("FK_tblRiesgoIdentificacion_tblEmpresaProcesos");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoIdentificacion")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoIdentificacion_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoResidual", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRiesgoIdentificacion", "IIdriesgoIdentificacionNavigation")
                        .WithMany("TblRiesgoResidual")
                        .HasForeignKey("IIdriesgoIdentificacion")
                        .HasConstraintName("FK_tblRiesgoResidual_tblRiesgoIdentificacion");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioInsercionNavigation")
                        .WithMany("TblRiesgoResidual")
                        .HasForeignKey("IUsuarioInsercion")
                        .HasConstraintName("FK_tblRiesgoResidual_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblRiesgoResidualAcciones", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblRiesgoResidual", "IIdriesgoResidualNavigation")
                        .WithMany("TblRiesgoResidualAcciones")
                        .HasForeignKey("IIdriesgoResidual")
                        .HasConstraintName("FK_tblRiesgoResidualAcciones_tblRiesgoResidual");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblServiciosProcedimientos", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioInsercionNavigation")
                        .WithMany("TblServiciosProcedimientosIIdusuarioInsercionNavigation")
                        .HasForeignKey("IIdusuarioInsercion")
                        .HasConstraintName("FK_tblServiciosProcedimientos_tblUsuarios");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioModificacionNavigation")
                        .WithMany("TblServiciosProcedimientosIIdusuarioModificacionNavigation")
                        .HasForeignKey("IIdusuarioModificacion")
                        .HasConstraintName("FK_tblServiciosProcedimientos_tblUsuarios1");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoa", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblSoa")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblSOA_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblNumerales", "IIdnumeralNavigation")
                        .WithMany("TblSoa")
                        .HasForeignKey("IIdnumeral")
                        .HasConstraintName("FK_tblSOA_tblNumerales");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblSoa")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblSOA_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoportes", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdclaseSoporteNavigation")
                        .WithMany("TblSoportesIIdclaseSoporteNavigation")
                        .HasForeignKey("IIdclaseSoporte")
                        .HasConstraintName("FK_tblSoportes_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblSoportes")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblSoportes_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoDocumentoNavigation")
                        .WithMany("TblSoportesIIdtipoDocumentoNavigation")
                        .HasForeignKey("IIdtipoDocumento")
                        .HasConstraintName("FK_tblSoportes_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblSoportes")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblSoportes_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSoportes1", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblJurisprudencias", "IIdjurisprudenciaNavigation")
                        .WithMany("TblSoportes1")
                        .HasForeignKey("IIdjurisprudencia")
                        .HasConstraintName("FK_tblSoportes_tblJurisprudencias");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblSoportes1")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblSoportes_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSucursalRiesgo", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdclaseRiesgoNavigation")
                        .WithMany("TblSucursalRiesgo")
                        .HasForeignKey("IIdclaseRiesgo")
                        .HasConstraintName("FK_tblSucursalRiesgo_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", "IIdsucursalNavigation")
                        .WithMany("TblSucursalRiesgo")
                        .HasForeignKey("IIdsucursal")
                        .HasConstraintName("FK_tblSucursalRiesgo_tblSucursalesEmpresas");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblSucursalesEmpresas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblSucursalesEmpresas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblSucursalesEmpresas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoNavigation")
                        .WithMany("TblSucursalesEmpresas")
                        .HasForeignKey("IIdestado")
                        .HasConstraintName("FK_tblSucursalesEmpresas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblDivipola", "IIdubicacionNavigation")
                        .WithMany("TblSucursalesEmpresas")
                        .HasForeignKey("IIdubicacion")
                        .HasConstraintName("FK_tblSucursalesEmpresas_tblDivipola");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioCreacionNavigation")
                        .WithMany("TblSucursalesEmpresas")
                        .HasForeignKey("IIdusuarioCreacion")
                        .HasConstraintName("FK_tblSucursalesEmpresas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTareaActividades", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblTareas", "IIdtareaNavigation")
                        .WithMany("TblTareaActividades")
                        .HasForeignKey("IIdtarea")
                        .HasConstraintName("FK_tblTareaActividades_tblTareas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblTareaActividades")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblTareaActividades_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTareas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblTareas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblTareas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdestadoTareaNavigation")
                        .WithMany("TblTareasIIdestadoTareaNavigation")
                        .HasForeignKey("IIdestadoTarea")
                        .HasConstraintName("FK_tblTareas_tblMultivalores1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoTareaNavigation")
                        .WithMany("TblTareasIIdtipoTareaNavigation")
                        .HasForeignKey("IIdtipoTarea")
                        .HasConstraintName("FK_tblTareas_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioInsecionNavigation")
                        .WithMany("TblTareasIIdusuarioInsecionNavigation")
                        .HasForeignKey("IIdusuarioInsecion")
                        .HasConstraintName("FK_tblTareas_tblUsuarios1");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioTareaNavigation")
                        .WithMany("TblTareasIIdusuarioTareaNavigation")
                        .HasForeignKey("IIdusuarioTarea")
                        .HasConstraintName("FK_tblTareas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblTipoProceso", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblTipoProceso")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblTipoProceso_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblTipoProceso")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblTipoProceso_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuarios", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoDocNavigation")
                        .WithMany("TblUsuarios")
                        .HasForeignKey("IIdtipoDoc")
                        .HasConstraintName("FK_tblUsuarios_tblMultivalores");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuariosEmpresas", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresas", "IIdempresaNavigation")
                        .WithMany("TblUsuariosEmpresas")
                        .HasForeignKey("IIdempresa")
                        .HasConstraintName("FK_tblUsuariosEmpresas_tblEmpresas");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioNavigation")
                        .WithMany("TblUsuariosEmpresas")
                        .HasForeignKey("IIdusuario")
                        .HasConstraintName("FK_tblUsuariosEmpresas_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblUsuariosPerfiles", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblPerfiles", "IIdperfilNavigation")
                        .WithMany("TblUsuariosPerfiles")
                        .HasForeignKey("IIdperfil")
                        .HasConstraintName("FK_tblUsuariosPerfiles_tblPerfiles");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IIdusuarioNavigation")
                        .WithMany("TblUsuariosPerfiles")
                        .HasForeignKey("IIdusuario")
                        .HasConstraintName("FK_tblUsuariosPerfiles_tblUsuarios");
                });

            modelBuilder.Entity("Kustodya.ApplicationCore.Entities.TblVendedor", b =>
                {
                    b.HasOne("Kustodya.ApplicationCore.Entities.TblEmpresaGestora", "IIdempresaGestoraNavigation")
                        .WithMany("TblVendedor")
                        .HasForeignKey("IIdempresaGestora")
                        .HasConstraintName("FK_tblVendedor_tblEmpresaGestora");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblMultivalores", "IIdtipoIdentificacionNavigation")
                        .WithMany("TblVendedor")
                        .HasForeignKey("IIdtipoIdentificacion")
                        .HasConstraintName("FK_tblVendedor_tblMultivalores");

                    b.HasOne("Kustodya.ApplicationCore.Entities.TblUsuarios", "IUsuarioCreacionNavigation")
                        .WithMany("TblVendedor")
                        .HasForeignKey("IUsuarioCreacion")
                        .HasConstraintName("FK_tblVendedor_tblUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
